
TTK4155_byggern_node2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000d34  00080000  00080000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     00000434  20000000  00080d34  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000000a8  20000434  00081168  00020434  2**2
                  ALLOC
  3 .stack        00000404  200004dc  00081210  00020434  2**0
                  ALLOC
  4 .heap         00000200  200008e0  00081614  00020434  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  00020434  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  0002045d  2**0
                  CONTENTS, READONLY
  7 .debug_info   00007ec3  00000000  00000000  000204b6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000141e  00000000  00000000  00028379  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00000f64  00000000  00000000  00029797  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000200  00000000  00000000  0002a6fb  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000001a8  00000000  00000000  0002a8fb  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  000133f2  00000000  00000000  0002aaa3  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   00004e14  00000000  00000000  0003de95  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    0005605e  00000000  00000000  00042ca9  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  000005a8  00000000  00000000  00098d08  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00080000 <exception_table>:
   80000:	e0 08 00 20 65 04 08 00 61 04 08 00 61 04 08 00     ... e...a...a...
   80010:	61 04 08 00 61 04 08 00 61 04 08 00 00 00 00 00     a...a...a.......
	...
   8002c:	61 04 08 00 61 04 08 00 00 00 00 00 61 04 08 00     a...a.......a...
   8003c:	61 04 08 00 61 04 08 00 61 04 08 00 61 04 08 00     a...a...a...a...
   8004c:	61 04 08 00 61 04 08 00 61 04 08 00 61 04 08 00     a...a...a...a...
   8005c:	61 04 08 00 79 0a 08 00 61 04 08 00 00 00 00 00     a...y...a.......
   8006c:	61 04 08 00 61 04 08 00 61 04 08 00 61 04 08 00     a...a...a...a...
	...
   80084:	61 04 08 00 61 04 08 00 61 04 08 00 61 04 08 00     a...a...a...a...
   80094:	61 04 08 00 61 04 08 00 61 04 08 00 61 04 08 00     a...a...a...a...
   800a4:	00 00 00 00 61 04 08 00 61 04 08 00 61 04 08 00     ....a...a...a...
   800b4:	61 04 08 00 61 04 08 00 61 04 08 00 61 04 08 00     a...a...a...a...
   800c4:	61 04 08 00 61 04 08 00 61 04 08 00 61 04 08 00     a...a...a...a...
   800d4:	61 04 08 00 61 04 08 00 61 04 08 00 61 04 08 00     a...a...a...a...
   800e4:	61 04 08 00 61 04 08 00 55 03 08 00 61 04 08 00     a...a...U...a...

000800f4 <__do_global_dtors_aux>:
   800f4:	b510      	push	{r4, lr}
   800f6:	4c05      	ldr	r4, [pc, #20]	; (8010c <__do_global_dtors_aux+0x18>)
   800f8:	7823      	ldrb	r3, [r4, #0]
   800fa:	b933      	cbnz	r3, 8010a <__do_global_dtors_aux+0x16>
   800fc:	4b04      	ldr	r3, [pc, #16]	; (80110 <__do_global_dtors_aux+0x1c>)
   800fe:	b113      	cbz	r3, 80106 <__do_global_dtors_aux+0x12>
   80100:	4804      	ldr	r0, [pc, #16]	; (80114 <__do_global_dtors_aux+0x20>)
   80102:	f3af 8000 	nop.w
   80106:	2301      	movs	r3, #1
   80108:	7023      	strb	r3, [r4, #0]
   8010a:	bd10      	pop	{r4, pc}
   8010c:	20000434 	.word	0x20000434
   80110:	00000000 	.word	0x00000000
   80114:	00080d34 	.word	0x00080d34

00080118 <frame_dummy>:
   80118:	4b0c      	ldr	r3, [pc, #48]	; (8014c <frame_dummy+0x34>)
   8011a:	b143      	cbz	r3, 8012e <frame_dummy+0x16>
   8011c:	480c      	ldr	r0, [pc, #48]	; (80150 <frame_dummy+0x38>)
   8011e:	b510      	push	{r4, lr}
   80120:	490c      	ldr	r1, [pc, #48]	; (80154 <frame_dummy+0x3c>)
   80122:	f3af 8000 	nop.w
   80126:	480c      	ldr	r0, [pc, #48]	; (80158 <frame_dummy+0x40>)
   80128:	6803      	ldr	r3, [r0, #0]
   8012a:	b923      	cbnz	r3, 80136 <frame_dummy+0x1e>
   8012c:	bd10      	pop	{r4, pc}
   8012e:	480a      	ldr	r0, [pc, #40]	; (80158 <frame_dummy+0x40>)
   80130:	6803      	ldr	r3, [r0, #0]
   80132:	b933      	cbnz	r3, 80142 <frame_dummy+0x2a>
   80134:	4770      	bx	lr
   80136:	4b09      	ldr	r3, [pc, #36]	; (8015c <frame_dummy+0x44>)
   80138:	2b00      	cmp	r3, #0
   8013a:	d0f7      	beq.n	8012c <frame_dummy+0x14>
   8013c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   80140:	4718      	bx	r3
   80142:	4b06      	ldr	r3, [pc, #24]	; (8015c <frame_dummy+0x44>)
   80144:	2b00      	cmp	r3, #0
   80146:	d0f5      	beq.n	80134 <frame_dummy+0x1c>
   80148:	4718      	bx	r3
   8014a:	bf00      	nop
   8014c:	00000000 	.word	0x00000000
   80150:	00080d34 	.word	0x00080d34
   80154:	20000438 	.word	0x20000438
   80158:	00080d34 	.word	0x00080d34
   8015c:	00000000 	.word	0x00000000

00080160 <ADC_init>:
uint8_t goal_counter = 0;

int ADC_init()
{
	// Enable ADC controller MCK in PMC (ADC config doesn't require clock to be enabled
	PMC->PMC_PCER1 |= PMC_PCER1_PID37;
   80160:	4a08      	ldr	r2, [pc, #32]	; (80184 <ADC_init+0x24>)
   80162:	f8d2 3100 	ldr.w	r3, [r2, #256]	; 0x100
   80166:	f043 0320 	orr.w	r3, r3, #32
   8016a:	f8c2 3100 	str.w	r3, [r2, #256]	; 0x100
	// 
	// Activate ADC channel (temperature sensor)
	ADC->ADC_CHER |= ADC_CHER_CH7;
   8016e:	4b06      	ldr	r3, [pc, #24]	; (80188 <ADC_init+0x28>)
   80170:	691a      	ldr	r2, [r3, #16]
   80172:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   80176:	611a      	str	r2, [r3, #16]
	// Enable ADC conversion in ADC control register
	//ADC->ADC_CR |= ADC_CR_START;
	// Enable ADC freerun mode (never waits for trigger to convert)
	ADC->ADC_MR |= ADC_MR_FREERUN;
   80178:	685a      	ldr	r2, [r3, #4]
   8017a:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   8017e:	605a      	str	r2, [r3, #4]
	
	return 0;
}
   80180:	2000      	movs	r0, #0
   80182:	4770      	bx	lr
   80184:	400e0600 	.word	0x400e0600
   80188:	400c0000 	.word	0x400c0000

0008018c <ADC_read_IR>:

uint32_t ADC_read_IR()
{
	return ADC->ADC_CDR[7];
   8018c:	4b01      	ldr	r3, [pc, #4]	; (80194 <ADC_read_IR+0x8>)
   8018e:	6ed8      	ldr	r0, [r3, #108]	; 0x6c
}
   80190:	4770      	bx	lr
   80192:	bf00      	nop
   80194:	400c0000 	.word	0x400c0000

00080198 <IR_check_for_goal>:

bool IR_check_for_goal()
{
   80198:	b508      	push	{r3, lr}
	IR_current_value = ADC_read_IR();
   8019a:	4b0c      	ldr	r3, [pc, #48]	; (801cc <IR_check_for_goal+0x34>)
   8019c:	4798      	blx	r3
   8019e:	4b0c      	ldr	r3, [pc, #48]	; (801d0 <IR_check_for_goal+0x38>)
   801a0:	6018      	str	r0, [r3, #0]
	if((IR_current_value < IR_THRESHOLD) && IR_last_value >= IR_THRESHOLD) {
   801a2:	f5b0 7ffa 	cmp.w	r0, #500	; 0x1f4
   801a6:	d204      	bcs.n	801b2 <IR_check_for_goal+0x1a>
   801a8:	4b0a      	ldr	r3, [pc, #40]	; (801d4 <IR_check_for_goal+0x3c>)
   801aa:	681b      	ldr	r3, [r3, #0]
   801ac:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
   801b0:	d203      	bcs.n	801ba <IR_check_for_goal+0x22>
		IR_last_value = IR_current_value;
		goal_counter++;
		return true;
	} else {
		IR_last_value = IR_current_value;
   801b2:	4b08      	ldr	r3, [pc, #32]	; (801d4 <IR_check_for_goal+0x3c>)
   801b4:	6018      	str	r0, [r3, #0]
		return false;
   801b6:	2000      	movs	r0, #0
	}
}
   801b8:	bd08      	pop	{r3, pc}
		IR_last_value = IR_current_value;
   801ba:	4b06      	ldr	r3, [pc, #24]	; (801d4 <IR_check_for_goal+0x3c>)
   801bc:	6018      	str	r0, [r3, #0]
		goal_counter++;
   801be:	4a06      	ldr	r2, [pc, #24]	; (801d8 <IR_check_for_goal+0x40>)
   801c0:	7813      	ldrb	r3, [r2, #0]
   801c2:	3301      	adds	r3, #1
   801c4:	7013      	strb	r3, [r2, #0]
		return true;
   801c6:	2001      	movs	r0, #1
   801c8:	bd08      	pop	{r3, pc}
   801ca:	bf00      	nop
   801cc:	0008018d 	.word	0x0008018d
   801d0:	20000458 	.word	0x20000458
   801d4:	20000454 	.word	0x20000454
   801d8:	20000450 	.word	0x20000450

000801dc <can_init>:
   801dc:	b4f0      	push	{r4, r5, r6, r7}
   801de:	1857      	adds	r7, r2, r1
   801e0:	2f08      	cmp	r7, #8
   801e2:	bfd4      	ite	le
   801e4:	2300      	movle	r3, #0
   801e6:	2301      	movgt	r3, #1
   801e8:	2908      	cmp	r1, #8
   801ea:	bf98      	it	ls
   801ec:	2a08      	cmpls	r2, #8
   801ee:	d85c      	bhi.n	802aa <can_init+0xce>
   801f0:	460d      	mov	r5, r1
   801f2:	2b00      	cmp	r3, #0
   801f4:	d159      	bne.n	802aa <can_init+0xce>
   801f6:	4a2e      	ldr	r2, [pc, #184]	; (802b0 <can_init+0xd4>)
   801f8:	6813      	ldr	r3, [r2, #0]
   801fa:	f023 0301 	bic.w	r3, r3, #1
   801fe:	6013      	str	r3, [r2, #0]
   80200:	6913      	ldr	r3, [r2, #16]
   80202:	4b2c      	ldr	r3, [pc, #176]	; (802b4 <can_init+0xd8>)
   80204:	f44f 7440 	mov.w	r4, #768	; 0x300
   80208:	645c      	str	r4, [r3, #68]	; 0x44
   8020a:	6f1c      	ldr	r4, [r3, #112]	; 0x70
   8020c:	f024 0403 	bic.w	r4, r4, #3
   80210:	671c      	str	r4, [r3, #112]	; 0x70
   80212:	2403      	movs	r4, #3
   80214:	605c      	str	r4, [r3, #4]
   80216:	665c      	str	r4, [r3, #100]	; 0x64
   80218:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
   8021c:	4c26      	ldr	r4, [pc, #152]	; (802b8 <can_init+0xdc>)
   8021e:	f8c3 410c 	str.w	r4, [r3, #268]	; 0x10c
   80222:	f8d3 4100 	ldr.w	r4, [r3, #256]	; 0x100
   80226:	f444 6400 	orr.w	r4, r4, #2048	; 0x800
   8022a:	f8c3 4100 	str.w	r4, [r3, #256]	; 0x100
   8022e:	6150      	str	r0, [r2, #20]
   80230:	2400      	movs	r4, #0
   80232:	e019      	b.n	80268 <can_init+0x8c>
   80234:	481e      	ldr	r0, [pc, #120]	; (802b0 <can_init+0xd4>)
   80236:	f101 0310 	add.w	r3, r1, #16
   8023a:	015b      	lsls	r3, r3, #5
   8023c:	18c2      	adds	r2, r0, r3
   8023e:	2600      	movs	r6, #0
   80240:	6056      	str	r6, [r2, #4]
   80242:	eb00 1241 	add.w	r2, r0, r1, lsl #5
   80246:	f04f 5600 	mov.w	r6, #536870912	; 0x20000000
   8024a:	f8c2 6208 	str.w	r6, [r2, #520]	; 0x208
   8024e:	f04f 7680 	mov.w	r6, #16777216	; 0x1000000
   80252:	50c6      	str	r6, [r0, r3]
   80254:	f8d2 321c 	ldr.w	r3, [r2, #540]	; 0x21c
   80258:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
   8025c:	f8c2 321c 	str.w	r3, [r2, #540]	; 0x21c
   80260:	2301      	movs	r3, #1
   80262:	408b      	lsls	r3, r1
   80264:	431c      	orrs	r4, r3
   80266:	3101      	adds	r1, #1
   80268:	42b9      	cmp	r1, r7
   8026a:	dde3      	ble.n	80234 <can_init+0x58>
   8026c:	2300      	movs	r3, #0
   8026e:	e00d      	b.n	8028c <can_init+0xb0>
   80270:	490f      	ldr	r1, [pc, #60]	; (802b0 <can_init+0xd4>)
   80272:	eb01 1243 	add.w	r2, r1, r3, lsl #5
   80276:	f04f 5000 	mov.w	r0, #536870912	; 0x20000000
   8027a:	f8c2 0208 	str.w	r0, [r2, #520]	; 0x208
   8027e:	f103 0210 	add.w	r2, r3, #16
   80282:	0152      	lsls	r2, r2, #5
   80284:	f04f 7040 	mov.w	r0, #50331648	; 0x3000000
   80288:	5088      	str	r0, [r1, r2]
   8028a:	3301      	adds	r3, #1
   8028c:	42ab      	cmp	r3, r5
   8028e:	dbef      	blt.n	80270 <can_init+0x94>
   80290:	4b07      	ldr	r3, [pc, #28]	; (802b0 <can_init+0xd4>)
   80292:	605c      	str	r4, [r3, #4]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
   80294:	f44f 6100 	mov.w	r1, #2048	; 0x800
   80298:	4a08      	ldr	r2, [pc, #32]	; (802bc <can_init+0xe0>)
   8029a:	6051      	str	r1, [r2, #4]
   8029c:	681a      	ldr	r2, [r3, #0]
   8029e:	f042 0201 	orr.w	r2, r2, #1
   802a2:	601a      	str	r2, [r3, #0]
   802a4:	2000      	movs	r0, #0
   802a6:	bcf0      	pop	{r4, r5, r6, r7}
   802a8:	4770      	bx	lr
   802aa:	2001      	movs	r0, #1
   802ac:	e7fb      	b.n	802a6 <can_init+0xca>
   802ae:	bf00      	nop
   802b0:	400b4000 	.word	0x400b4000
   802b4:	400e0e00 	.word	0x400e0e00
   802b8:	1000102b 	.word	0x1000102b
   802bc:	e000e100 	.word	0xe000e100

000802c0 <can_init_def_tx_rx_mb>:
   802c0:	b508      	push	{r3, lr}
   802c2:	2202      	movs	r2, #2
   802c4:	2101      	movs	r1, #1
   802c6:	4b01      	ldr	r3, [pc, #4]	; (802cc <can_init_def_tx_rx_mb+0xc>)
   802c8:	4798      	blx	r3
   802ca:	bd08      	pop	{r3, pc}
   802cc:	000801dd 	.word	0x000801dd

000802d0 <can_receive>:
   802d0:	014b      	lsls	r3, r1, #5
   802d2:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
   802d6:	f503 2330 	add.w	r3, r3, #720896	; 0xb0000
   802da:	f8d3 3210 	ldr.w	r3, [r3, #528]	; 0x210
   802de:	f413 0f00 	tst.w	r3, #8388608	; 0x800000
   802e2:	d033      	beq.n	8034c <can_receive+0x7c>
   802e4:	b470      	push	{r4, r5, r6}
   802e6:	014b      	lsls	r3, r1, #5
   802e8:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
   802ec:	f503 2330 	add.w	r3, r3, #720896	; 0xb0000
   802f0:	f8d3 4214 	ldr.w	r4, [r3, #532]	; 0x214
   802f4:	f8d3 2218 	ldr.w	r2, [r3, #536]	; 0x218
   802f8:	f8d3 5208 	ldr.w	r5, [r3, #520]	; 0x208
   802fc:	f3c5 458a 	ubfx	r5, r5, #18, #11
   80300:	8005      	strh	r5, [r0, #0]
   80302:	f8d3 5210 	ldr.w	r5, [r3, #528]	; 0x210
   80306:	f3c5 4503 	ubfx	r5, r5, #16, #4
   8030a:	7085      	strb	r5, [r0, #2]
   8030c:	2300      	movs	r3, #0
   8030e:	e003      	b.n	80318 <can_receive+0x48>
   80310:	18c6      	adds	r6, r0, r3
   80312:	70f2      	strb	r2, [r6, #3]
   80314:	0a12      	lsrs	r2, r2, #8
   80316:	3301      	adds	r3, #1
   80318:	42ab      	cmp	r3, r5
   8031a:	da05      	bge.n	80328 <can_receive+0x58>
   8031c:	2b03      	cmp	r3, #3
   8031e:	dcf7      	bgt.n	80310 <can_receive+0x40>
   80320:	18c6      	adds	r6, r0, r3
   80322:	70f4      	strb	r4, [r6, #3]
   80324:	0a24      	lsrs	r4, r4, #8
   80326:	e7f6      	b.n	80316 <can_receive+0x46>
   80328:	4b09      	ldr	r3, [pc, #36]	; (80350 <can_receive+0x80>)
   8032a:	f101 0210 	add.w	r2, r1, #16
   8032e:	0152      	lsls	r2, r2, #5
   80330:	f04f 7080 	mov.w	r0, #16777216	; 0x1000000
   80334:	5098      	str	r0, [r3, r2]
   80336:	eb03 1141 	add.w	r1, r3, r1, lsl #5
   8033a:	f8d1 321c 	ldr.w	r3, [r1, #540]	; 0x21c
   8033e:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
   80342:	f8c1 321c 	str.w	r3, [r1, #540]	; 0x21c
   80346:	2000      	movs	r0, #0
   80348:	bc70      	pop	{r4, r5, r6}
   8034a:	4770      	bx	lr
   8034c:	2001      	movs	r0, #1
   8034e:	4770      	bx	lr
   80350:	400b4000 	.word	0x400b4000

00080354 <CAN0_Handler>:
   80354:	b570      	push	{r4, r5, r6, lr}
   80356:	b084      	sub	sp, #16
   80358:	4b2d      	ldr	r3, [pc, #180]	; (80410 <CAN0_Handler+0xbc>)
   8035a:	691e      	ldr	r6, [r3, #16]
   8035c:	f016 0f06 	tst.w	r6, #6
   80360:	d048      	beq.n	803f4 <CAN0_Handler+0xa0>
   80362:	f016 0f02 	tst.w	r6, #2
   80366:	d11c      	bne.n	803a2 <CAN0_Handler+0x4e>
   80368:	f016 0f04 	tst.w	r6, #4
   8036c:	d01e      	beq.n	803ac <CAN0_Handler+0x58>
   8036e:	2102      	movs	r1, #2
   80370:	a801      	add	r0, sp, #4
   80372:	4b28      	ldr	r3, [pc, #160]	; (80414 <CAN0_Handler+0xc0>)
   80374:	4798      	blx	r3
   80376:	f8bd 4004 	ldrh.w	r4, [sp, #4]
   8037a:	b2e1      	uxtb	r1, r4
   8037c:	1e4d      	subs	r5, r1, #1
   8037e:	4826      	ldr	r0, [pc, #152]	; (80418 <CAN0_Handler+0xc4>)
   80380:	006b      	lsls	r3, r5, #1
   80382:	442b      	add	r3, r5
   80384:	009a      	lsls	r2, r3, #2
   80386:	1883      	adds	r3, r0, r2
   80388:	5284      	strh	r4, [r0, r2]
   8038a:	f89d 2006 	ldrb.w	r2, [sp, #6]
   8038e:	709a      	strb	r2, [r3, #2]
   80390:	4822      	ldr	r0, [pc, #136]	; (8041c <CAN0_Handler+0xc8>)
   80392:	4c23      	ldr	r4, [pc, #140]	; (80420 <CAN0_Handler+0xcc>)
   80394:	47a0      	blx	r4
   80396:	f89d 1006 	ldrb.w	r1, [sp, #6]
   8039a:	4822      	ldr	r0, [pc, #136]	; (80424 <CAN0_Handler+0xd0>)
   8039c:	47a0      	blx	r4
   8039e:	2400      	movs	r4, #0
   803a0:	e019      	b.n	803d6 <CAN0_Handler+0x82>
   803a2:	2101      	movs	r1, #1
   803a4:	a801      	add	r0, sp, #4
   803a6:	4b1b      	ldr	r3, [pc, #108]	; (80414 <CAN0_Handler+0xc0>)
   803a8:	4798      	blx	r3
   803aa:	e7e4      	b.n	80376 <CAN0_Handler+0x22>
   803ac:	481e      	ldr	r0, [pc, #120]	; (80428 <CAN0_Handler+0xd4>)
   803ae:	4b1c      	ldr	r3, [pc, #112]	; (80420 <CAN0_Handler+0xcc>)
   803b0:	4798      	blx	r3
   803b2:	e7e0      	b.n	80376 <CAN0_Handler+0x22>
   803b4:	ab04      	add	r3, sp, #16
   803b6:	4423      	add	r3, r4
   803b8:	f813 2c09 	ldrb.w	r2, [r3, #-9]
   803bc:	eb05 0345 	add.w	r3, r5, r5, lsl #1
   803c0:	0099      	lsls	r1, r3, #2
   803c2:	4b15      	ldr	r3, [pc, #84]	; (80418 <CAN0_Handler+0xc4>)
   803c4:	440b      	add	r3, r1
   803c6:	4423      	add	r3, r4
   803c8:	70da      	strb	r2, [r3, #3]
   803ca:	b252      	sxtb	r2, r2
   803cc:	4621      	mov	r1, r4
   803ce:	4817      	ldr	r0, [pc, #92]	; (8042c <CAN0_Handler+0xd8>)
   803d0:	4b13      	ldr	r3, [pc, #76]	; (80420 <CAN0_Handler+0xcc>)
   803d2:	4798      	blx	r3
   803d4:	3401      	adds	r4, #1
   803d6:	eb05 0345 	add.w	r3, r5, r5, lsl #1
   803da:	009a      	lsls	r2, r3, #2
   803dc:	4b0e      	ldr	r3, [pc, #56]	; (80418 <CAN0_Handler+0xc4>)
   803de:	4413      	add	r3, r2
   803e0:	789b      	ldrb	r3, [r3, #2]
   803e2:	429c      	cmp	r4, r3
   803e4:	dbe6      	blt.n	803b4 <CAN0_Handler+0x60>
   803e6:	2300      	movs	r3, #0
   803e8:	e000      	b.n	803ec <CAN0_Handler+0x98>
   803ea:	3301      	adds	r3, #1
   803ec:	f89d 2006 	ldrb.w	r2, [sp, #6]
   803f0:	4293      	cmp	r3, r2
   803f2:	dbfa      	blt.n	803ea <CAN0_Handler+0x96>
   803f4:	f016 0f01 	tst.w	r6, #1
   803f8:	d002      	beq.n	80400 <CAN0_Handler+0xac>
   803fa:	2201      	movs	r2, #1
   803fc:	4b04      	ldr	r3, [pc, #16]	; (80410 <CAN0_Handler+0xbc>)
   803fe:	609a      	str	r2, [r3, #8]
 */
__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
   80400:	f44f 6200 	mov.w	r2, #2048	; 0x800
   80404:	4b0a      	ldr	r3, [pc, #40]	; (80430 <CAN0_Handler+0xdc>)
   80406:	f8c3 2184 	str.w	r2, [r3, #388]	; 0x184
   8040a:	b004      	add	sp, #16
   8040c:	bd70      	pop	{r4, r5, r6, pc}
   8040e:	bf00      	nop
   80410:	400b4000 	.word	0x400b4000
   80414:	000802d1 	.word	0x000802d1
   80418:	2000045c 	.word	0x2000045c
   8041c:	00080c7c 	.word	0x00080c7c
   80420:	000809c9 	.word	0x000809c9
   80424:	00080c88 	.word	0x00080c88
   80428:	00080c50 	.word	0x00080c50
   8042c:	00080c98 	.word	0x00080c98
   80430:	e000e100 	.word	0xe000e100

00080434 <can_get_messages>:
   80434:	b410      	push	{r4}
   80436:	eb01 0141 	add.w	r1, r1, r1, lsl #1
   8043a:	008c      	lsls	r4, r1, #2
   8043c:	4b04      	ldr	r3, [pc, #16]	; (80450 <can_get_messages+0x1c>)
   8043e:	4423      	add	r3, r4
   80440:	681c      	ldr	r4, [r3, #0]
   80442:	6859      	ldr	r1, [r3, #4]
   80444:	689b      	ldr	r3, [r3, #8]
   80446:	6004      	str	r4, [r0, #0]
   80448:	6041      	str	r1, [r0, #4]
   8044a:	6083      	str	r3, [r0, #8]
   8044c:	bc10      	pop	{r4}
   8044e:	4770      	bx	lr
   80450:	2000045c 	.word	0x2000045c

00080454 <reset_btn_value>:
   80454:	2200      	movs	r2, #0
   80456:	4b01      	ldr	r3, [pc, #4]	; (8045c <reset_btn_value+0x8>)
   80458:	73da      	strb	r2, [r3, #15]
   8045a:	4770      	bx	lr
   8045c:	2000045c 	.word	0x2000045c

00080460 <Dummy_Handler>:
   80460:	e7fe      	b.n	80460 <Dummy_Handler>
	...

00080464 <Reset_Handler>:
   80464:	b508      	push	{r3, lr}
   80466:	4b11      	ldr	r3, [pc, #68]	; (804ac <Reset_Handler+0x48>)
   80468:	4a11      	ldr	r2, [pc, #68]	; (804b0 <Reset_Handler+0x4c>)
   8046a:	429a      	cmp	r2, r3
   8046c:	d009      	beq.n	80482 <Reset_Handler+0x1e>
   8046e:	4b0f      	ldr	r3, [pc, #60]	; (804ac <Reset_Handler+0x48>)
   80470:	4a0f      	ldr	r2, [pc, #60]	; (804b0 <Reset_Handler+0x4c>)
   80472:	e003      	b.n	8047c <Reset_Handler+0x18>
   80474:	6811      	ldr	r1, [r2, #0]
   80476:	6019      	str	r1, [r3, #0]
   80478:	3304      	adds	r3, #4
   8047a:	3204      	adds	r2, #4
   8047c:	490d      	ldr	r1, [pc, #52]	; (804b4 <Reset_Handler+0x50>)
   8047e:	428b      	cmp	r3, r1
   80480:	d3f8      	bcc.n	80474 <Reset_Handler+0x10>
   80482:	4b0d      	ldr	r3, [pc, #52]	; (804b8 <Reset_Handler+0x54>)
   80484:	e002      	b.n	8048c <Reset_Handler+0x28>
   80486:	2200      	movs	r2, #0
   80488:	601a      	str	r2, [r3, #0]
   8048a:	3304      	adds	r3, #4
   8048c:	4a0b      	ldr	r2, [pc, #44]	; (804bc <Reset_Handler+0x58>)
   8048e:	4293      	cmp	r3, r2
   80490:	d3f9      	bcc.n	80486 <Reset_Handler+0x22>
   80492:	4b0b      	ldr	r3, [pc, #44]	; (804c0 <Reset_Handler+0x5c>)
   80494:	f023 4360 	bic.w	r3, r3, #3758096384	; 0xe0000000
   80498:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
   8049c:	4a09      	ldr	r2, [pc, #36]	; (804c4 <Reset_Handler+0x60>)
   8049e:	6093      	str	r3, [r2, #8]
   804a0:	4b09      	ldr	r3, [pc, #36]	; (804c8 <Reset_Handler+0x64>)
   804a2:	4798      	blx	r3
   804a4:	4b09      	ldr	r3, [pc, #36]	; (804cc <Reset_Handler+0x68>)
   804a6:	4798      	blx	r3
   804a8:	e7fe      	b.n	804a8 <Reset_Handler+0x44>
   804aa:	bf00      	nop
   804ac:	20000000 	.word	0x20000000
   804b0:	00080d34 	.word	0x00080d34
   804b4:	20000434 	.word	0x20000434
   804b8:	20000434 	.word	0x20000434
   804bc:	200004dc 	.word	0x200004dc
   804c0:	00080000 	.word	0x00080000
   804c4:	e000ed00 	.word	0xe000ed00
   804c8:	00080ae1 	.word	0x00080ae1
   804cc:	000805e5 	.word	0x000805e5

000804d0 <SystemInit>:
   804d0:	f44f 6380 	mov.w	r3, #1024	; 0x400
   804d4:	4a20      	ldr	r2, [pc, #128]	; (80558 <SystemInit+0x88>)
   804d6:	6013      	str	r3, [r2, #0]
   804d8:	f502 7200 	add.w	r2, r2, #512	; 0x200
   804dc:	6013      	str	r3, [r2, #0]
   804de:	4b1f      	ldr	r3, [pc, #124]	; (8055c <SystemInit+0x8c>)
   804e0:	6a1b      	ldr	r3, [r3, #32]
   804e2:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   804e6:	d107      	bne.n	804f8 <SystemInit+0x28>
   804e8:	4a1d      	ldr	r2, [pc, #116]	; (80560 <SystemInit+0x90>)
   804ea:	4b1c      	ldr	r3, [pc, #112]	; (8055c <SystemInit+0x8c>)
   804ec:	621a      	str	r2, [r3, #32]
   804ee:	4b1b      	ldr	r3, [pc, #108]	; (8055c <SystemInit+0x8c>)
   804f0:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   804f2:	f013 0f01 	tst.w	r3, #1
   804f6:	d0fa      	beq.n	804ee <SystemInit+0x1e>
   804f8:	4a1a      	ldr	r2, [pc, #104]	; (80564 <SystemInit+0x94>)
   804fa:	4b18      	ldr	r3, [pc, #96]	; (8055c <SystemInit+0x8c>)
   804fc:	621a      	str	r2, [r3, #32]
   804fe:	4b17      	ldr	r3, [pc, #92]	; (8055c <SystemInit+0x8c>)
   80500:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   80502:	f413 3f80 	tst.w	r3, #65536	; 0x10000
   80506:	d0fa      	beq.n	804fe <SystemInit+0x2e>
   80508:	4a14      	ldr	r2, [pc, #80]	; (8055c <SystemInit+0x8c>)
   8050a:	6b13      	ldr	r3, [r2, #48]	; 0x30
   8050c:	f023 0303 	bic.w	r3, r3, #3
   80510:	f043 0301 	orr.w	r3, r3, #1
   80514:	6313      	str	r3, [r2, #48]	; 0x30
   80516:	4b11      	ldr	r3, [pc, #68]	; (8055c <SystemInit+0x8c>)
   80518:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   8051a:	f013 0f08 	tst.w	r3, #8
   8051e:	d0fa      	beq.n	80516 <SystemInit+0x46>
   80520:	4a11      	ldr	r2, [pc, #68]	; (80568 <SystemInit+0x98>)
   80522:	4b0e      	ldr	r3, [pc, #56]	; (8055c <SystemInit+0x8c>)
   80524:	629a      	str	r2, [r3, #40]	; 0x28
   80526:	4b0d      	ldr	r3, [pc, #52]	; (8055c <SystemInit+0x8c>)
   80528:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   8052a:	f013 0f02 	tst.w	r3, #2
   8052e:	d0fa      	beq.n	80526 <SystemInit+0x56>
   80530:	2211      	movs	r2, #17
   80532:	4b0a      	ldr	r3, [pc, #40]	; (8055c <SystemInit+0x8c>)
   80534:	631a      	str	r2, [r3, #48]	; 0x30
   80536:	4b09      	ldr	r3, [pc, #36]	; (8055c <SystemInit+0x8c>)
   80538:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   8053a:	f013 0f08 	tst.w	r3, #8
   8053e:	d0fa      	beq.n	80536 <SystemInit+0x66>
   80540:	2212      	movs	r2, #18
   80542:	4b06      	ldr	r3, [pc, #24]	; (8055c <SystemInit+0x8c>)
   80544:	631a      	str	r2, [r3, #48]	; 0x30
   80546:	4b05      	ldr	r3, [pc, #20]	; (8055c <SystemInit+0x8c>)
   80548:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   8054a:	f013 0f08 	tst.w	r3, #8
   8054e:	d0fa      	beq.n	80546 <SystemInit+0x76>
   80550:	4a06      	ldr	r2, [pc, #24]	; (8056c <SystemInit+0x9c>)
   80552:	4b07      	ldr	r3, [pc, #28]	; (80570 <SystemInit+0xa0>)
   80554:	601a      	str	r2, [r3, #0]
   80556:	4770      	bx	lr
   80558:	400e0a00 	.word	0x400e0a00
   8055c:	400e0600 	.word	0x400e0600
   80560:	00370809 	.word	0x00370809
   80564:	01370809 	.word	0x01370809
   80568:	200d3f01 	.word	0x200d3f01
   8056c:	0501bd00 	.word	0x0501bd00
   80570:	20000000 	.word	0x20000000

00080574 <inits>:
#include "PWM/PWM_drv.h"
#include "ADC/ADC_IR.h"

#define CAN_BAUDRATE_REG 0x290165

void inits(){
   80574:	b508      	push	{r3, lr}
	SystemInit();
   80576:	4b0a      	ldr	r3, [pc, #40]	; (805a0 <inits+0x2c>)
   80578:	4798      	blx	r3
	LEDs_init();
   8057a:	4b0a      	ldr	r3, [pc, #40]	; (805a4 <inits+0x30>)
   8057c:	4798      	blx	r3
	configure_uart();	
   8057e:	4b0a      	ldr	r3, [pc, #40]	; (805a8 <inits+0x34>)
   80580:	4798      	blx	r3
	can_init_def_tx_rx_mb(CAN_BAUDRATE_REG);
   80582:	480a      	ldr	r0, [pc, #40]	; (805ac <inits+0x38>)
   80584:	4b0a      	ldr	r3, [pc, #40]	; (805b0 <inits+0x3c>)
   80586:	4798      	blx	r3
	PWM_init();
   80588:	4b0a      	ldr	r3, [pc, #40]	; (805b4 <inits+0x40>)
   8058a:	4798      	blx	r3
	ADC_init();
   8058c:	4b0a      	ldr	r3, [pc, #40]	; (805b8 <inits+0x44>)
   8058e:	4798      	blx	r3
	WDT->WDT_MR = WDT_MR_WDDIS;
   80590:	f44f 4200 	mov.w	r2, #32768	; 0x8000
   80594:	4b09      	ldr	r3, [pc, #36]	; (805bc <inits+0x48>)
   80596:	605a      	str	r2, [r3, #4]
	
	printf("Program initialized\n\r");
   80598:	4809      	ldr	r0, [pc, #36]	; (805c0 <inits+0x4c>)
   8059a:	4b0a      	ldr	r3, [pc, #40]	; (805c4 <inits+0x50>)
   8059c:	4798      	blx	r3
   8059e:	bd08      	pop	{r3, pc}
   805a0:	000804d1 	.word	0x000804d1
   805a4:	00080669 	.word	0x00080669
   805a8:	000809ed 	.word	0x000809ed
   805ac:	00290165 	.word	0x00290165
   805b0:	000802c1 	.word	0x000802c1
   805b4:	00080699 	.word	0x00080699
   805b8:	00080161 	.word	0x00080161
   805bc:	400e1a50 	.word	0x400e1a50
   805c0:	00080ca8 	.word	0x00080ca8
   805c4:	000809c9 	.word	0x000809c9

000805c8 <func>:
}

void func()
{
   805c8:	b508      	push	{r3, lr}
	printf("Running test func\n\r");
   805ca:	4803      	ldr	r0, [pc, #12]	; (805d8 <func+0x10>)
   805cc:	4b03      	ldr	r3, [pc, #12]	; (805dc <func+0x14>)
   805ce:	4798      	blx	r3
	reset_btn_value();
   805d0:	4b03      	ldr	r3, [pc, #12]	; (805e0 <func+0x18>)
   805d2:	4798      	blx	r3
   805d4:	bd08      	pop	{r3, pc}
   805d6:	bf00      	nop
   805d8:	00080cc0 	.word	0x00080cc0
   805dc:	000809c9 	.word	0x000809c9
   805e0:	00080455 	.word	0x00080455

000805e4 <main>:
	
}

int main(void)
{
   805e4:	b510      	push	{r4, lr}
   805e6:	b086      	sub	sp, #24

	inits();
   805e8:	4b16      	ldr	r3, [pc, #88]	; (80644 <main+0x60>)
   805ea:	4798      	blx	r3
	CAN_MESSAGE btn_message, ADC_message;
	PWM_set_period_percentage(0);
   805ec:	2000      	movs	r0, #0
   805ee:	4b16      	ldr	r3, [pc, #88]	; (80648 <main+0x64>)
   805f0:	4798      	blx	r3
   805f2:	e005      	b.n	80600 <main+0x1c>
			btn_message = can_get_messages(1);
			ADC_message = can_get_messages(0);
			int8_t x_val = ADC_message.data[0];
			//printf("%d, %d, %d \n\r\n", x_val, ADC_message.data[1], ADC_message.data[2]);
			if(btn_message.data[0] == 1){
				func();
   805f4:	4b15      	ldr	r3, [pc, #84]	; (8064c <main+0x68>)
   805f6:	4798      	blx	r3
   805f8:	e014      	b.n	80624 <main+0x40>
			//printf("Value: %d , last: %d\r\n", val, last_converted);
			
			if(IR_check_for_goal()){
				printf("SIIUUUUUUU\n\r");
			}
			SysTick->VAL = 0;
   805fa:	2200      	movs	r2, #0
   805fc:	4b14      	ldr	r3, [pc, #80]	; (80650 <main+0x6c>)
   805fe:	609a      	str	r2, [r3, #8]
		uint32_t sys_tick_CTRL_reg = SysTick->CTRL;
   80600:	4b13      	ldr	r3, [pc, #76]	; (80650 <main+0x6c>)
   80602:	681b      	ldr	r3, [r3, #0]
		if(time_flag){
   80604:	f413 3f80 	tst.w	r3, #65536	; 0x10000
   80608:	d0fa      	beq.n	80600 <main+0x1c>
			btn_message = can_get_messages(1);
   8060a:	2101      	movs	r1, #1
   8060c:	a803      	add	r0, sp, #12
   8060e:	4c11      	ldr	r4, [pc, #68]	; (80654 <main+0x70>)
   80610:	47a0      	blx	r4
			ADC_message = can_get_messages(0);
   80612:	2100      	movs	r1, #0
   80614:	4668      	mov	r0, sp
   80616:	47a0      	blx	r4
			int8_t x_val = ADC_message.data[0];
   80618:	f99d 4003 	ldrsb.w	r4, [sp, #3]
			if(btn_message.data[0] == 1){
   8061c:	f89d 300f 	ldrb.w	r3, [sp, #15]
   80620:	2b01      	cmp	r3, #1
   80622:	d0e7      	beq.n	805f4 <main+0x10>
			PWM_set_period_percentage(value);
   80624:	4620      	mov	r0, r4
   80626:	4b08      	ldr	r3, [pc, #32]	; (80648 <main+0x64>)
   80628:	4798      	blx	r3
			uint32_t val = ADC->ADC_CDR[7];
   8062a:	4b0b      	ldr	r3, [pc, #44]	; (80658 <main+0x74>)
   8062c:	6eda      	ldr	r2, [r3, #108]	; 0x6c
			uint32_t last_converted = ADC->ADC_LCDR;
   8062e:	6a1a      	ldr	r2, [r3, #32]
			uint32_t ADC_status_reg = (ADC->ADC_CHSR & ADC_CHSR_CH15) >> 15;
   80630:	699b      	ldr	r3, [r3, #24]
			if(IR_check_for_goal()){
   80632:	4b0a      	ldr	r3, [pc, #40]	; (8065c <main+0x78>)
   80634:	4798      	blx	r3
   80636:	2800      	cmp	r0, #0
   80638:	d0df      	beq.n	805fa <main+0x16>
				printf("SIIUUUUUUU\n\r");
   8063a:	4809      	ldr	r0, [pc, #36]	; (80660 <main+0x7c>)
   8063c:	4b09      	ldr	r3, [pc, #36]	; (80664 <main+0x80>)
   8063e:	4798      	blx	r3
   80640:	e7db      	b.n	805fa <main+0x16>
   80642:	bf00      	nop
   80644:	00080575 	.word	0x00080575
   80648:	000806fd 	.word	0x000806fd
   8064c:	000805c9 	.word	0x000805c9
   80650:	e000e010 	.word	0xe000e010
   80654:	00080435 	.word	0x00080435
   80658:	400c0000 	.word	0x400c0000
   8065c:	00080199 	.word	0x00080199
   80660:	00080cd4 	.word	0x00080cd4
   80664:	000809c9 	.word	0x000809c9

00080668 <LEDs_init>:
   80668:	4b08      	ldr	r3, [pc, #32]	; (8068c <LEDs_init+0x24>)
   8066a:	f44f 2100 	mov.w	r1, #524288	; 0x80000
   8066e:	6019      	str	r1, [r3, #0]
   80670:	f44f 1280 	mov.w	r2, #1048576	; 0x100000
   80674:	601a      	str	r2, [r3, #0]
   80676:	6119      	str	r1, [r3, #16]
   80678:	611a      	str	r2, [r3, #16]
   8067a:	6619      	str	r1, [r3, #96]	; 0x60
   8067c:	661a      	str	r2, [r3, #96]	; 0x60
   8067e:	4b04      	ldr	r3, [pc, #16]	; (80690 <LEDs_init+0x28>)
   80680:	4a04      	ldr	r2, [pc, #16]	; (80694 <LEDs_init+0x2c>)
   80682:	605a      	str	r2, [r3, #4]
   80684:	2201      	movs	r2, #1
   80686:	601a      	str	r2, [r3, #0]
   80688:	4770      	bx	lr
   8068a:	bf00      	nop
   8068c:	400e0e00 	.word	0x400e0e00
   80690:	e000e010 	.word	0xe000e010
   80694:	00033450 	.word	0x00033450

00080698 <PWM_init>:
   80698:	4a15      	ldr	r2, [pc, #84]	; (806f0 <PWM_init+0x58>)
   8069a:	f8d2 3100 	ldr.w	r3, [r2, #256]	; 0x100
   8069e:	f043 0310 	orr.w	r3, r3, #16
   806a2:	f8c2 3100 	str.w	r3, [r2, #256]	; 0x100
   806a6:	4b13      	ldr	r3, [pc, #76]	; (806f4 <PWM_init+0x5c>)
   806a8:	685a      	ldr	r2, [r3, #4]
   806aa:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
   806ae:	605a      	str	r2, [r3, #4]
   806b0:	6f1a      	ldr	r2, [r3, #112]	; 0x70
   806b2:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
   806b6:	671a      	str	r2, [r3, #112]	; 0x70
   806b8:	4b0f      	ldr	r3, [pc, #60]	; (806f8 <PWM_init+0x60>)
   806ba:	f8d3 22a0 	ldr.w	r2, [r3, #672]	; 0x2a0
   806be:	f042 0207 	orr.w	r2, r2, #7
   806c2:	f8c3 22a0 	str.w	r2, [r3, #672]	; 0x2a0
   806c6:	f8d3 22ac 	ldr.w	r2, [r3, #684]	; 0x2ac
   806ca:	f442 524d 	orr.w	r2, r2, #13120	; 0x3340
   806ce:	f042 0205 	orr.w	r2, r2, #5
   806d2:	f8c3 22ac 	str.w	r2, [r3, #684]	; 0x2ac
   806d6:	f8d3 22a4 	ldr.w	r2, [r3, #676]	; 0x2a4
   806da:	f442 523d 	orr.w	r2, r2, #12096	; 0x2f40
   806de:	f042 022d 	orr.w	r2, r2, #45	; 0x2d
   806e2:	f8c3 22a4 	str.w	r2, [r3, #676]	; 0x2a4
   806e6:	685a      	ldr	r2, [r3, #4]
   806e8:	f042 0220 	orr.w	r2, r2, #32
   806ec:	605a      	str	r2, [r3, #4]
   806ee:	4770      	bx	lr
   806f0:	400e0600 	.word	0x400e0600
   806f4:	400e1200 	.word	0x400e1200
   806f8:	40094000 	.word	0x40094000

000806fc <PWM_set_period_percentage>:
   806fc:	2864      	cmp	r0, #100	; 0x64
   806fe:	dc05      	bgt.n	8070c <PWM_set_period_percentage+0x10>
   80700:	f110 0f64 	cmn.w	r0, #100	; 0x64
   80704:	da03      	bge.n	8070e <PWM_set_period_percentage+0x12>
   80706:	f06f 0063 	mvn.w	r0, #99	; 0x63
   8070a:	e000      	b.n	8070e <PWM_set_period_percentage+0x12>
   8070c:	2064      	movs	r0, #100	; 0x64
   8070e:	f240 1389 	movw	r3, #393	; 0x189
   80712:	fb03 f000 	mul.w	r0, r3, r0
   80716:	4b06      	ldr	r3, [pc, #24]	; (80730 <PWM_set_period_percentage+0x34>)
   80718:	fb83 2300 	smull	r2, r3, r3, r0
   8071c:	17c0      	asrs	r0, r0, #31
   8071e:	ebc0 1063 	rsb	r0, r0, r3, asr #5
   80722:	f500 503d 	add.w	r0, r0, #12096	; 0x2f40
   80726:	302d      	adds	r0, #45	; 0x2d
   80728:	4b02      	ldr	r3, [pc, #8]	; (80734 <PWM_set_period_percentage+0x38>)
   8072a:	f8c3 02a8 	str.w	r0, [r3, #680]	; 0x2a8
   8072e:	4770      	bx	lr
   80730:	51eb851f 	.word	0x51eb851f
   80734:	40094000 	.word	0x40094000

00080738 <printchar>:
   80738:	b508      	push	{r3, lr}
   8073a:	b2c8      	uxtb	r0, r1
   8073c:	4b01      	ldr	r3, [pc, #4]	; (80744 <printchar+0xc>)
   8073e:	4798      	blx	r3
   80740:	bd08      	pop	{r3, pc}
   80742:	bf00      	nop
   80744:	00080a55 	.word	0x00080a55

00080748 <prints>:
   80748:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   8074c:	4607      	mov	r7, r0
   8074e:	460e      	mov	r6, r1
   80750:	1e15      	subs	r5, r2, #0
   80752:	dd02      	ble.n	8075a <prints+0x12>
   80754:	460a      	mov	r2, r1
   80756:	2100      	movs	r1, #0
   80758:	e004      	b.n	80764 <prints+0x1c>
   8075a:	f04f 0820 	mov.w	r8, #32
   8075e:	e00e      	b.n	8077e <prints+0x36>
   80760:	3101      	adds	r1, #1
   80762:	3201      	adds	r2, #1
   80764:	7810      	ldrb	r0, [r2, #0]
   80766:	2800      	cmp	r0, #0
   80768:	d1fa      	bne.n	80760 <prints+0x18>
   8076a:	42a9      	cmp	r1, r5
   8076c:	da01      	bge.n	80772 <prints+0x2a>
   8076e:	1a6d      	subs	r5, r5, r1
   80770:	e000      	b.n	80774 <prints+0x2c>
   80772:	2500      	movs	r5, #0
   80774:	f013 0f02 	tst.w	r3, #2
   80778:	d106      	bne.n	80788 <prints+0x40>
   8077a:	f04f 0820 	mov.w	r8, #32
   8077e:	f013 0401 	ands.w	r4, r3, #1
   80782:	d00a      	beq.n	8079a <prints+0x52>
   80784:	2400      	movs	r4, #0
   80786:	e010      	b.n	807aa <prints+0x62>
   80788:	f04f 0830 	mov.w	r8, #48	; 0x30
   8078c:	e7f7      	b.n	8077e <prints+0x36>
   8078e:	4641      	mov	r1, r8
   80790:	4638      	mov	r0, r7
   80792:	4b0d      	ldr	r3, [pc, #52]	; (807c8 <prints+0x80>)
   80794:	4798      	blx	r3
   80796:	3401      	adds	r4, #1
   80798:	3d01      	subs	r5, #1
   8079a:	2d00      	cmp	r5, #0
   8079c:	dcf7      	bgt.n	8078e <prints+0x46>
   8079e:	e004      	b.n	807aa <prints+0x62>
   807a0:	4638      	mov	r0, r7
   807a2:	4b09      	ldr	r3, [pc, #36]	; (807c8 <prints+0x80>)
   807a4:	4798      	blx	r3
   807a6:	3401      	adds	r4, #1
   807a8:	3601      	adds	r6, #1
   807aa:	7831      	ldrb	r1, [r6, #0]
   807ac:	2900      	cmp	r1, #0
   807ae:	d1f7      	bne.n	807a0 <prints+0x58>
   807b0:	e005      	b.n	807be <prints+0x76>
   807b2:	4641      	mov	r1, r8
   807b4:	4638      	mov	r0, r7
   807b6:	4b04      	ldr	r3, [pc, #16]	; (807c8 <prints+0x80>)
   807b8:	4798      	blx	r3
   807ba:	3401      	adds	r4, #1
   807bc:	3d01      	subs	r5, #1
   807be:	2d00      	cmp	r5, #0
   807c0:	dcf7      	bgt.n	807b2 <prints+0x6a>
   807c2:	4620      	mov	r0, r4
   807c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   807c8:	00080739 	.word	0x00080739

000807cc <printi>:
   807cc:	b5f0      	push	{r4, r5, r6, r7, lr}
   807ce:	b085      	sub	sp, #20
   807d0:	4607      	mov	r7, r0
   807d2:	980c      	ldr	r0, [sp, #48]	; 0x30
   807d4:	b151      	cbz	r1, 807ec <printi+0x20>
   807d6:	461e      	mov	r6, r3
   807d8:	460c      	mov	r4, r1
   807da:	b113      	cbz	r3, 807e2 <printi+0x16>
   807dc:	2a0a      	cmp	r2, #10
   807de:	d012      	beq.n	80806 <printi+0x3a>
   807e0:	2600      	movs	r6, #0
   807e2:	ad04      	add	r5, sp, #16
   807e4:	2300      	movs	r3, #0
   807e6:	f805 3d01 	strb.w	r3, [r5, #-1]!
   807ea:	e018      	b.n	8081e <printi+0x52>
   807ec:	2330      	movs	r3, #48	; 0x30
   807ee:	f88d 3004 	strb.w	r3, [sp, #4]
   807f2:	2300      	movs	r3, #0
   807f4:	f88d 3005 	strb.w	r3, [sp, #5]
   807f8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   807fa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   807fc:	a901      	add	r1, sp, #4
   807fe:	4638      	mov	r0, r7
   80800:	4c1b      	ldr	r4, [pc, #108]	; (80870 <printi+0xa4>)
   80802:	47a0      	blx	r4
   80804:	e029      	b.n	8085a <printi+0x8e>
   80806:	2900      	cmp	r1, #0
   80808:	db01      	blt.n	8080e <printi+0x42>
   8080a:	2600      	movs	r6, #0
   8080c:	e7e9      	b.n	807e2 <printi+0x16>
   8080e:	424c      	negs	r4, r1
   80810:	2601      	movs	r6, #1
   80812:	e7e6      	b.n	807e2 <printi+0x16>
   80814:	3330      	adds	r3, #48	; 0x30
   80816:	f805 3d01 	strb.w	r3, [r5, #-1]!
   8081a:	fbb4 f4f2 	udiv	r4, r4, r2
   8081e:	b14c      	cbz	r4, 80834 <printi+0x68>
   80820:	fbb4 f3f2 	udiv	r3, r4, r2
   80824:	fb02 4313 	mls	r3, r2, r3, r4
   80828:	2b09      	cmp	r3, #9
   8082a:	ddf3      	ble.n	80814 <printi+0x48>
   8082c:	f1a0 013a 	sub.w	r1, r0, #58	; 0x3a
   80830:	440b      	add	r3, r1
   80832:	e7ef      	b.n	80814 <printi+0x48>
   80834:	b156      	cbz	r6, 8084c <printi+0x80>
   80836:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   80838:	b11b      	cbz	r3, 80842 <printi+0x76>
   8083a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   8083c:	f013 0f02 	tst.w	r3, #2
   80840:	d10d      	bne.n	8085e <printi+0x92>
   80842:	232d      	movs	r3, #45	; 0x2d
   80844:	f805 3c01 	strb.w	r3, [r5, #-1]
   80848:	3d01      	subs	r5, #1
   8084a:	2600      	movs	r6, #0
   8084c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   8084e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   80850:	4629      	mov	r1, r5
   80852:	4638      	mov	r0, r7
   80854:	4c06      	ldr	r4, [pc, #24]	; (80870 <printi+0xa4>)
   80856:	47a0      	blx	r4
   80858:	4430      	add	r0, r6
   8085a:	b005      	add	sp, #20
   8085c:	bdf0      	pop	{r4, r5, r6, r7, pc}
   8085e:	212d      	movs	r1, #45	; 0x2d
   80860:	4638      	mov	r0, r7
   80862:	4b04      	ldr	r3, [pc, #16]	; (80874 <printi+0xa8>)
   80864:	4798      	blx	r3
   80866:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   80868:	3b01      	subs	r3, #1
   8086a:	930a      	str	r3, [sp, #40]	; 0x28
   8086c:	e7ee      	b.n	8084c <printi+0x80>
   8086e:	bf00      	nop
   80870:	00080749 	.word	0x00080749
   80874:	00080739 	.word	0x00080739

00080878 <print>:
   80878:	b5f0      	push	{r4, r5, r6, r7, lr}
   8087a:	b089      	sub	sp, #36	; 0x24
   8087c:	4606      	mov	r6, r0
   8087e:	460c      	mov	r4, r1
   80880:	9205      	str	r2, [sp, #20]
   80882:	2500      	movs	r5, #0
   80884:	e081      	b.n	8098a <print+0x112>
   80886:	1ca2      	adds	r2, r4, #2
   80888:	2301      	movs	r3, #1
   8088a:	e08b      	b.n	809a4 <print+0x12c>
   8088c:	3401      	adds	r4, #1
   8088e:	f043 0302 	orr.w	r3, r3, #2
   80892:	7822      	ldrb	r2, [r4, #0]
   80894:	2a30      	cmp	r2, #48	; 0x30
   80896:	d0f9      	beq.n	8088c <print+0x14>
   80898:	2200      	movs	r2, #0
   8089a:	e006      	b.n	808aa <print+0x32>
   8089c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
   808a0:	0050      	lsls	r0, r2, #1
   808a2:	f1a1 0230 	sub.w	r2, r1, #48	; 0x30
   808a6:	4402      	add	r2, r0
   808a8:	3401      	adds	r4, #1
   808aa:	7821      	ldrb	r1, [r4, #0]
   808ac:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
   808b0:	b2c0      	uxtb	r0, r0
   808b2:	2809      	cmp	r0, #9
   808b4:	d9f2      	bls.n	8089c <print+0x24>
   808b6:	2973      	cmp	r1, #115	; 0x73
   808b8:	d018      	beq.n	808ec <print+0x74>
   808ba:	2964      	cmp	r1, #100	; 0x64
   808bc:	d022      	beq.n	80904 <print+0x8c>
   808be:	2978      	cmp	r1, #120	; 0x78
   808c0:	d02f      	beq.n	80922 <print+0xaa>
   808c2:	2958      	cmp	r1, #88	; 0x58
   808c4:	d03c      	beq.n	80940 <print+0xc8>
   808c6:	2975      	cmp	r1, #117	; 0x75
   808c8:	d049      	beq.n	8095e <print+0xe6>
   808ca:	2963      	cmp	r1, #99	; 0x63
   808cc:	d15c      	bne.n	80988 <print+0x110>
   808ce:	9905      	ldr	r1, [sp, #20]
   808d0:	1d08      	adds	r0, r1, #4
   808d2:	9005      	str	r0, [sp, #20]
   808d4:	7809      	ldrb	r1, [r1, #0]
   808d6:	f88d 101c 	strb.w	r1, [sp, #28]
   808da:	2100      	movs	r1, #0
   808dc:	f88d 101d 	strb.w	r1, [sp, #29]
   808e0:	a907      	add	r1, sp, #28
   808e2:	4630      	mov	r0, r6
   808e4:	4f34      	ldr	r7, [pc, #208]	; (809b8 <print+0x140>)
   808e6:	47b8      	blx	r7
   808e8:	4405      	add	r5, r0
   808ea:	e04d      	b.n	80988 <print+0x110>
   808ec:	9905      	ldr	r1, [sp, #20]
   808ee:	1d08      	adds	r0, r1, #4
   808f0:	9005      	str	r0, [sp, #20]
   808f2:	6809      	ldr	r1, [r1, #0]
   808f4:	b121      	cbz	r1, 80900 <print+0x88>
   808f6:	4630      	mov	r0, r6
   808f8:	4f2f      	ldr	r7, [pc, #188]	; (809b8 <print+0x140>)
   808fa:	47b8      	blx	r7
   808fc:	4405      	add	r5, r0
   808fe:	e043      	b.n	80988 <print+0x110>
   80900:	492e      	ldr	r1, [pc, #184]	; (809bc <print+0x144>)
   80902:	e7f8      	b.n	808f6 <print+0x7e>
   80904:	9905      	ldr	r1, [sp, #20]
   80906:	1d08      	adds	r0, r1, #4
   80908:	9005      	str	r0, [sp, #20]
   8090a:	6809      	ldr	r1, [r1, #0]
   8090c:	2061      	movs	r0, #97	; 0x61
   8090e:	9002      	str	r0, [sp, #8]
   80910:	9301      	str	r3, [sp, #4]
   80912:	9200      	str	r2, [sp, #0]
   80914:	2301      	movs	r3, #1
   80916:	220a      	movs	r2, #10
   80918:	4630      	mov	r0, r6
   8091a:	4f29      	ldr	r7, [pc, #164]	; (809c0 <print+0x148>)
   8091c:	47b8      	blx	r7
   8091e:	4405      	add	r5, r0
   80920:	e032      	b.n	80988 <print+0x110>
   80922:	9905      	ldr	r1, [sp, #20]
   80924:	1d08      	adds	r0, r1, #4
   80926:	9005      	str	r0, [sp, #20]
   80928:	6809      	ldr	r1, [r1, #0]
   8092a:	2061      	movs	r0, #97	; 0x61
   8092c:	9002      	str	r0, [sp, #8]
   8092e:	9301      	str	r3, [sp, #4]
   80930:	9200      	str	r2, [sp, #0]
   80932:	2300      	movs	r3, #0
   80934:	2210      	movs	r2, #16
   80936:	4630      	mov	r0, r6
   80938:	4f21      	ldr	r7, [pc, #132]	; (809c0 <print+0x148>)
   8093a:	47b8      	blx	r7
   8093c:	4405      	add	r5, r0
   8093e:	e023      	b.n	80988 <print+0x110>
   80940:	9905      	ldr	r1, [sp, #20]
   80942:	1d08      	adds	r0, r1, #4
   80944:	9005      	str	r0, [sp, #20]
   80946:	6809      	ldr	r1, [r1, #0]
   80948:	2041      	movs	r0, #65	; 0x41
   8094a:	9002      	str	r0, [sp, #8]
   8094c:	9301      	str	r3, [sp, #4]
   8094e:	9200      	str	r2, [sp, #0]
   80950:	2300      	movs	r3, #0
   80952:	2210      	movs	r2, #16
   80954:	4630      	mov	r0, r6
   80956:	4f1a      	ldr	r7, [pc, #104]	; (809c0 <print+0x148>)
   80958:	47b8      	blx	r7
   8095a:	4405      	add	r5, r0
   8095c:	e014      	b.n	80988 <print+0x110>
   8095e:	9905      	ldr	r1, [sp, #20]
   80960:	1d08      	adds	r0, r1, #4
   80962:	9005      	str	r0, [sp, #20]
   80964:	6809      	ldr	r1, [r1, #0]
   80966:	2061      	movs	r0, #97	; 0x61
   80968:	9002      	str	r0, [sp, #8]
   8096a:	9301      	str	r3, [sp, #4]
   8096c:	9200      	str	r2, [sp, #0]
   8096e:	2300      	movs	r3, #0
   80970:	220a      	movs	r2, #10
   80972:	4630      	mov	r0, r6
   80974:	4f12      	ldr	r7, [pc, #72]	; (809c0 <print+0x148>)
   80976:	47b8      	blx	r7
   80978:	4405      	add	r5, r0
   8097a:	e005      	b.n	80988 <print+0x110>
   8097c:	4614      	mov	r4, r2
   8097e:	7821      	ldrb	r1, [r4, #0]
   80980:	4630      	mov	r0, r6
   80982:	4b10      	ldr	r3, [pc, #64]	; (809c4 <print+0x14c>)
   80984:	4798      	blx	r3
   80986:	3501      	adds	r5, #1
   80988:	3401      	adds	r4, #1
   8098a:	7823      	ldrb	r3, [r4, #0]
   8098c:	b163      	cbz	r3, 809a8 <print+0x130>
   8098e:	2b25      	cmp	r3, #37	; 0x25
   80990:	d1f5      	bne.n	8097e <print+0x106>
   80992:	1c62      	adds	r2, r4, #1
   80994:	7863      	ldrb	r3, [r4, #1]
   80996:	b13b      	cbz	r3, 809a8 <print+0x130>
   80998:	2b25      	cmp	r3, #37	; 0x25
   8099a:	d0ef      	beq.n	8097c <print+0x104>
   8099c:	2b2d      	cmp	r3, #45	; 0x2d
   8099e:	f43f af72 	beq.w	80886 <print+0xe>
   809a2:	2300      	movs	r3, #0
   809a4:	4614      	mov	r4, r2
   809a6:	e774      	b.n	80892 <print+0x1a>
   809a8:	b116      	cbz	r6, 809b0 <print+0x138>
   809aa:	6833      	ldr	r3, [r6, #0]
   809ac:	2200      	movs	r2, #0
   809ae:	701a      	strb	r2, [r3, #0]
   809b0:	4628      	mov	r0, r5
   809b2:	b009      	add	sp, #36	; 0x24
   809b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
   809b6:	bf00      	nop
   809b8:	00080749 	.word	0x00080749
   809bc:	00080ce4 	.word	0x00080ce4
   809c0:	000807cd 	.word	0x000807cd
   809c4:	00080739 	.word	0x00080739

000809c8 <printf>:
   809c8:	b40f      	push	{r0, r1, r2, r3}
   809ca:	b500      	push	{lr}
   809cc:	b083      	sub	sp, #12
   809ce:	aa04      	add	r2, sp, #16
   809d0:	f852 1b04 	ldr.w	r1, [r2], #4
   809d4:	9201      	str	r2, [sp, #4]
   809d6:	2000      	movs	r0, #0
   809d8:	4b03      	ldr	r3, [pc, #12]	; (809e8 <printf+0x20>)
   809da:	4798      	blx	r3
   809dc:	b003      	add	sp, #12
   809de:	f85d eb04 	ldr.w	lr, [sp], #4
   809e2:	b004      	add	sp, #16
   809e4:	4770      	bx	lr
   809e6:	bf00      	nop
   809e8:	00080879 	.word	0x00080879

000809ec <configure_uart>:
   809ec:	4b16      	ldr	r3, [pc, #88]	; (80a48 <configure_uart+0x5c>)
   809ee:	2200      	movs	r2, #0
   809f0:	701a      	strb	r2, [r3, #0]
   809f2:	705a      	strb	r2, [r3, #1]
   809f4:	4b15      	ldr	r3, [pc, #84]	; (80a4c <configure_uart+0x60>)
   809f6:	f44f 7140 	mov.w	r1, #768	; 0x300
   809fa:	6459      	str	r1, [r3, #68]	; 0x44
   809fc:	6059      	str	r1, [r3, #4]
   809fe:	6f1a      	ldr	r2, [r3, #112]	; 0x70
   80a00:	6f18      	ldr	r0, [r3, #112]	; 0x70
   80a02:	4002      	ands	r2, r0
   80a04:	f422 7240 	bic.w	r2, r2, #768	; 0x300
   80a08:	671a      	str	r2, [r3, #112]	; 0x70
   80a0a:	6659      	str	r1, [r3, #100]	; 0x64
   80a0c:	f44f 7280 	mov.w	r2, #256	; 0x100
   80a10:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
   80a14:	611a      	str	r2, [r3, #16]
   80a16:	f503 7300 	add.w	r3, r3, #512	; 0x200
   80a1a:	21ac      	movs	r1, #172	; 0xac
   80a1c:	6019      	str	r1, [r3, #0]
   80a1e:	f240 2123 	movw	r1, #547	; 0x223
   80a22:	6219      	str	r1, [r3, #32]
   80a24:	f44f 6100 	mov.w	r1, #2048	; 0x800
   80a28:	6059      	str	r1, [r3, #4]
   80a2a:	f240 2102 	movw	r1, #514	; 0x202
   80a2e:	f8c3 1120 	str.w	r1, [r3, #288]	; 0x120
   80a32:	f04f 31ff 	mov.w	r1, #4294967295
   80a36:	60d9      	str	r1, [r3, #12]
   80a38:	21e1      	movs	r1, #225	; 0xe1
   80a3a:	6099      	str	r1, [r3, #8]
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
   80a3c:	4904      	ldr	r1, [pc, #16]	; (80a50 <configure_uart+0x64>)
   80a3e:	600a      	str	r2, [r1, #0]
   80a40:	2250      	movs	r2, #80	; 0x50
   80a42:	601a      	str	r2, [r3, #0]
   80a44:	4770      	bx	lr
   80a46:	bf00      	nop
   80a48:	20000474 	.word	0x20000474
   80a4c:	400e0e00 	.word	0x400e0e00
   80a50:	e000e100 	.word	0xe000e100

00080a54 <uart_putchar>:
   80a54:	4b07      	ldr	r3, [pc, #28]	; (80a74 <uart_putchar+0x20>)
   80a56:	695b      	ldr	r3, [r3, #20]
   80a58:	f013 0f02 	tst.w	r3, #2
   80a5c:	d008      	beq.n	80a70 <uart_putchar+0x1c>
   80a5e:	4b05      	ldr	r3, [pc, #20]	; (80a74 <uart_putchar+0x20>)
   80a60:	61d8      	str	r0, [r3, #28]
   80a62:	4b04      	ldr	r3, [pc, #16]	; (80a74 <uart_putchar+0x20>)
   80a64:	695b      	ldr	r3, [r3, #20]
   80a66:	f413 7f00 	tst.w	r3, #512	; 0x200
   80a6a:	d0fa      	beq.n	80a62 <uart_putchar+0xe>
   80a6c:	2000      	movs	r0, #0
   80a6e:	4770      	bx	lr
   80a70:	2001      	movs	r0, #1
   80a72:	4770      	bx	lr
   80a74:	400e0800 	.word	0x400e0800

00080a78 <UART_Handler>:
   80a78:	b508      	push	{r3, lr}
   80a7a:	4b15      	ldr	r3, [pc, #84]	; (80ad0 <UART_Handler+0x58>)
   80a7c:	695b      	ldr	r3, [r3, #20]
   80a7e:	f013 0fe0 	tst.w	r3, #224	; 0xe0
   80a82:	d003      	beq.n	80a8c <UART_Handler+0x14>
   80a84:	f44f 71a8 	mov.w	r1, #336	; 0x150
   80a88:	4a11      	ldr	r2, [pc, #68]	; (80ad0 <UART_Handler+0x58>)
   80a8a:	6011      	str	r1, [r2, #0]
   80a8c:	f013 0f01 	tst.w	r3, #1
   80a90:	d012      	beq.n	80ab8 <UART_Handler+0x40>
   80a92:	4810      	ldr	r0, [pc, #64]	; (80ad4 <UART_Handler+0x5c>)
   80a94:	7842      	ldrb	r2, [r0, #1]
   80a96:	1c53      	adds	r3, r2, #1
   80a98:	4259      	negs	r1, r3
   80a9a:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   80a9e:	f001 013f 	and.w	r1, r1, #63	; 0x3f
   80aa2:	bf58      	it	pl
   80aa4:	424b      	negpl	r3, r1
   80aa6:	7801      	ldrb	r1, [r0, #0]
   80aa8:	428b      	cmp	r3, r1
   80aaa:	d006      	beq.n	80aba <UART_Handler+0x42>
   80aac:	4908      	ldr	r1, [pc, #32]	; (80ad0 <UART_Handler+0x58>)
   80aae:	6988      	ldr	r0, [r1, #24]
   80ab0:	4908      	ldr	r1, [pc, #32]	; (80ad4 <UART_Handler+0x5c>)
   80ab2:	440a      	add	r2, r1
   80ab4:	7090      	strb	r0, [r2, #2]
   80ab6:	704b      	strb	r3, [r1, #1]
   80ab8:	bd08      	pop	{r3, pc}
   80aba:	4807      	ldr	r0, [pc, #28]	; (80ad8 <UART_Handler+0x60>)
   80abc:	4b07      	ldr	r3, [pc, #28]	; (80adc <UART_Handler+0x64>)
   80abe:	4798      	blx	r3
   80ac0:	4b04      	ldr	r3, [pc, #16]	; (80ad4 <UART_Handler+0x5c>)
   80ac2:	7859      	ldrb	r1, [r3, #1]
   80ac4:	4a02      	ldr	r2, [pc, #8]	; (80ad0 <UART_Handler+0x58>)
   80ac6:	6992      	ldr	r2, [r2, #24]
   80ac8:	440b      	add	r3, r1
   80aca:	709a      	strb	r2, [r3, #2]
   80acc:	bd08      	pop	{r3, pc}
   80ace:	bf00      	nop
   80ad0:	400e0800 	.word	0x400e0800
   80ad4:	20000474 	.word	0x20000474
   80ad8:	00080cec 	.word	0x00080cec
   80adc:	000809c9 	.word	0x000809c9

00080ae0 <__libc_init_array>:
   80ae0:	b570      	push	{r4, r5, r6, lr}
   80ae2:	4e0f      	ldr	r6, [pc, #60]	; (80b20 <__libc_init_array+0x40>)
   80ae4:	4d0f      	ldr	r5, [pc, #60]	; (80b24 <__libc_init_array+0x44>)
   80ae6:	1b76      	subs	r6, r6, r5
   80ae8:	10b6      	asrs	r6, r6, #2
   80aea:	bf18      	it	ne
   80aec:	2400      	movne	r4, #0
   80aee:	d005      	beq.n	80afc <__libc_init_array+0x1c>
   80af0:	3401      	adds	r4, #1
   80af2:	f855 3b04 	ldr.w	r3, [r5], #4
   80af6:	4798      	blx	r3
   80af8:	42a6      	cmp	r6, r4
   80afa:	d1f9      	bne.n	80af0 <__libc_init_array+0x10>
   80afc:	4e0a      	ldr	r6, [pc, #40]	; (80b28 <__libc_init_array+0x48>)
   80afe:	4d0b      	ldr	r5, [pc, #44]	; (80b2c <__libc_init_array+0x4c>)
   80b00:	f000 f906 	bl	80d10 <_init>
   80b04:	1b76      	subs	r6, r6, r5
   80b06:	10b6      	asrs	r6, r6, #2
   80b08:	bf18      	it	ne
   80b0a:	2400      	movne	r4, #0
   80b0c:	d006      	beq.n	80b1c <__libc_init_array+0x3c>
   80b0e:	3401      	adds	r4, #1
   80b10:	f855 3b04 	ldr.w	r3, [r5], #4
   80b14:	4798      	blx	r3
   80b16:	42a6      	cmp	r6, r4
   80b18:	d1f9      	bne.n	80b0e <__libc_init_array+0x2e>
   80b1a:	bd70      	pop	{r4, r5, r6, pc}
   80b1c:	bd70      	pop	{r4, r5, r6, pc}
   80b1e:	bf00      	nop
   80b20:	00080d1c 	.word	0x00080d1c
   80b24:	00080d1c 	.word	0x00080d1c
   80b28:	00080d24 	.word	0x00080d24
   80b2c:	00080d1c 	.word	0x00080d1c

00080b30 <register_fini>:
   80b30:	4b02      	ldr	r3, [pc, #8]	; (80b3c <register_fini+0xc>)
   80b32:	b113      	cbz	r3, 80b3a <register_fini+0xa>
   80b34:	4802      	ldr	r0, [pc, #8]	; (80b40 <register_fini+0x10>)
   80b36:	f000 b805 	b.w	80b44 <atexit>
   80b3a:	4770      	bx	lr
   80b3c:	00000000 	.word	0x00000000
   80b40:	00080b51 	.word	0x00080b51

00080b44 <atexit>:
   80b44:	2300      	movs	r3, #0
   80b46:	4601      	mov	r1, r0
   80b48:	461a      	mov	r2, r3
   80b4a:	4618      	mov	r0, r3
   80b4c:	f000 b81e 	b.w	80b8c <__register_exitproc>

00080b50 <__libc_fini_array>:
   80b50:	b538      	push	{r3, r4, r5, lr}
   80b52:	4c0a      	ldr	r4, [pc, #40]	; (80b7c <__libc_fini_array+0x2c>)
   80b54:	4d0a      	ldr	r5, [pc, #40]	; (80b80 <__libc_fini_array+0x30>)
   80b56:	1b64      	subs	r4, r4, r5
   80b58:	10a4      	asrs	r4, r4, #2
   80b5a:	d00a      	beq.n	80b72 <__libc_fini_array+0x22>
   80b5c:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
   80b60:	3b01      	subs	r3, #1
   80b62:	eb05 0583 	add.w	r5, r5, r3, lsl #2
   80b66:	3c01      	subs	r4, #1
   80b68:	f855 3904 	ldr.w	r3, [r5], #-4
   80b6c:	4798      	blx	r3
   80b6e:	2c00      	cmp	r4, #0
   80b70:	d1f9      	bne.n	80b66 <__libc_fini_array+0x16>
   80b72:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   80b76:	f000 b8d5 	b.w	80d24 <_fini>
   80b7a:	bf00      	nop
   80b7c:	00080d34 	.word	0x00080d34
   80b80:	00080d30 	.word	0x00080d30

00080b84 <__retarget_lock_acquire_recursive>:
   80b84:	4770      	bx	lr
   80b86:	bf00      	nop

00080b88 <__retarget_lock_release_recursive>:
   80b88:	4770      	bx	lr
   80b8a:	bf00      	nop

00080b8c <__register_exitproc>:
   80b8c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   80b90:	4d2c      	ldr	r5, [pc, #176]	; (80c44 <__register_exitproc+0xb8>)
   80b92:	4606      	mov	r6, r0
   80b94:	6828      	ldr	r0, [r5, #0]
   80b96:	4698      	mov	r8, r3
   80b98:	460f      	mov	r7, r1
   80b9a:	4691      	mov	r9, r2
   80b9c:	f7ff fff2 	bl	80b84 <__retarget_lock_acquire_recursive>
   80ba0:	4b29      	ldr	r3, [pc, #164]	; (80c48 <__register_exitproc+0xbc>)
   80ba2:	681c      	ldr	r4, [r3, #0]
   80ba4:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
   80ba8:	2b00      	cmp	r3, #0
   80baa:	d03e      	beq.n	80c2a <__register_exitproc+0x9e>
   80bac:	685a      	ldr	r2, [r3, #4]
   80bae:	2a1f      	cmp	r2, #31
   80bb0:	dc1c      	bgt.n	80bec <__register_exitproc+0x60>
   80bb2:	f102 0e01 	add.w	lr, r2, #1
   80bb6:	b176      	cbz	r6, 80bd6 <__register_exitproc+0x4a>
   80bb8:	2101      	movs	r1, #1
   80bba:	eb03 0482 	add.w	r4, r3, r2, lsl #2
   80bbe:	f8c4 9088 	str.w	r9, [r4, #136]	; 0x88
   80bc2:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
   80bc6:	4091      	lsls	r1, r2
   80bc8:	4308      	orrs	r0, r1
   80bca:	2e02      	cmp	r6, #2
   80bcc:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   80bd0:	f8c4 8108 	str.w	r8, [r4, #264]	; 0x108
   80bd4:	d023      	beq.n	80c1e <__register_exitproc+0x92>
   80bd6:	3202      	adds	r2, #2
   80bd8:	f8c3 e004 	str.w	lr, [r3, #4]
   80bdc:	6828      	ldr	r0, [r5, #0]
   80bde:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
   80be2:	f7ff ffd1 	bl	80b88 <__retarget_lock_release_recursive>
   80be6:	2000      	movs	r0, #0
   80be8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   80bec:	4b17      	ldr	r3, [pc, #92]	; (80c4c <__register_exitproc+0xc0>)
   80bee:	b30b      	cbz	r3, 80c34 <__register_exitproc+0xa8>
   80bf0:	f44f 70c8 	mov.w	r0, #400	; 0x190
   80bf4:	f3af 8000 	nop.w
   80bf8:	4603      	mov	r3, r0
   80bfa:	b1d8      	cbz	r0, 80c34 <__register_exitproc+0xa8>
   80bfc:	2000      	movs	r0, #0
   80bfe:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
   80c02:	f04f 0e01 	mov.w	lr, #1
   80c06:	6058      	str	r0, [r3, #4]
   80c08:	6019      	str	r1, [r3, #0]
   80c0a:	4602      	mov	r2, r0
   80c0c:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   80c10:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   80c14:	f8c3 018c 	str.w	r0, [r3, #396]	; 0x18c
   80c18:	2e00      	cmp	r6, #0
   80c1a:	d0dc      	beq.n	80bd6 <__register_exitproc+0x4a>
   80c1c:	e7cc      	b.n	80bb8 <__register_exitproc+0x2c>
   80c1e:	f8d3 018c 	ldr.w	r0, [r3, #396]	; 0x18c
   80c22:	4301      	orrs	r1, r0
   80c24:	f8c3 118c 	str.w	r1, [r3, #396]	; 0x18c
   80c28:	e7d5      	b.n	80bd6 <__register_exitproc+0x4a>
   80c2a:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
   80c2e:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   80c32:	e7bb      	b.n	80bac <__register_exitproc+0x20>
   80c34:	6828      	ldr	r0, [r5, #0]
   80c36:	f7ff ffa7 	bl	80b88 <__retarget_lock_release_recursive>
   80c3a:	f04f 30ff 	mov.w	r0, #4294967295
   80c3e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   80c42:	bf00      	nop
   80c44:	20000430 	.word	0x20000430
   80c48:	00080d0c 	.word	0x00080d0c
   80c4c:	00000000 	.word	0x00000000
   80c50:	304e4143 	.word	0x304e4143
   80c54:	73656d20 	.word	0x73656d20
   80c58:	65676173 	.word	0x65676173
   80c5c:	72726120 	.word	0x72726120
   80c60:	64657669 	.word	0x64657669
   80c64:	206e6920 	.word	0x206e6920
   80c68:	2d6e6f6e 	.word	0x2d6e6f6e
   80c6c:	64657375 	.word	0x64657375
   80c70:	69616d20 	.word	0x69616d20
   80c74:	786f626c 	.word	0x786f626c
   80c78:	00000d0a 	.word	0x00000d0a
   80c7c:	203a4449 	.word	0x203a4449
   80c80:	0d0a6425 	.word	0x0d0a6425
   80c84:	00000000 	.word	0x00000000
   80c88:	676e654c 	.word	0x676e654c
   80c8c:	203a6874 	.word	0x203a6874
   80c90:	0a206425 	.word	0x0a206425
   80c94:	0000000d 	.word	0x0000000d
   80c98:	61746164 	.word	0x61746164
   80c9c:	3a642520 	.word	0x3a642520
   80ca0:	0a642520 	.word	0x0a642520
   80ca4:	0000000d 	.word	0x0000000d
   80ca8:	676f7250 	.word	0x676f7250
   80cac:	206d6172 	.word	0x206d6172
   80cb0:	74696e69 	.word	0x74696e69
   80cb4:	696c6169 	.word	0x696c6169
   80cb8:	0a64657a 	.word	0x0a64657a
   80cbc:	0000000d 	.word	0x0000000d
   80cc0:	6e6e7552 	.word	0x6e6e7552
   80cc4:	20676e69 	.word	0x20676e69
   80cc8:	74736574 	.word	0x74736574
   80ccc:	6e756620 	.word	0x6e756620
   80cd0:	000d0a63 	.word	0x000d0a63
   80cd4:	55494953 	.word	0x55494953
   80cd8:	55555555 	.word	0x55555555
   80cdc:	0d0a5555 	.word	0x0d0a5555
   80ce0:	00000000 	.word	0x00000000
   80ce4:	6c756e28 	.word	0x6c756e28
   80ce8:	0000296c 	.word	0x0000296c
   80cec:	3a525245 	.word	0x3a525245
   80cf0:	52415520 	.word	0x52415520
   80cf4:	58522054 	.word	0x58522054
   80cf8:	66756220 	.word	0x66756220
   80cfc:	20726566 	.word	0x20726566
   80d00:	66207369 	.word	0x66207369
   80d04:	0a6c6c75 	.word	0x0a6c6c75
   80d08:	0000000d 	.word	0x0000000d

00080d0c <_global_impure_ptr>:
   80d0c:	20000008                                ... 

00080d10 <_init>:
   80d10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   80d12:	bf00      	nop
   80d14:	bcf8      	pop	{r3, r4, r5, r6, r7}
   80d16:	bc08      	pop	{r3}
   80d18:	469e      	mov	lr, r3
   80d1a:	4770      	bx	lr

00080d1c <__init_array_start>:
   80d1c:	00080b31 	.word	0x00080b31

00080d20 <__frame_dummy_init_array_entry>:
   80d20:	00080119                                ....

00080d24 <_fini>:
   80d24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   80d26:	bf00      	nop
   80d28:	bcf8      	pop	{r3, r4, r5, r6, r7}
   80d2a:	bc08      	pop	{r3}
   80d2c:	469e      	mov	lr, r3
   80d2e:	4770      	bx	lr

00080d30 <__fini_array_start>:
   80d30:	000800f5 	.word	0x000800f5
