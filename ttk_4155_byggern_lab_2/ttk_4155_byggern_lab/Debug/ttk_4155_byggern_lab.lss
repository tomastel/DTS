
ttk_4155_byggern_lab.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000f0  00800100  00000caa  00000d3e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000caa  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  008001f0  008001f0  00000e2e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000e2e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000e8c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000080  00000000  00000000  00000ec8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000aa2  00000000  00000000  00000f48  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000801  00000000  00000000  000019ea  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004f3  00000000  00000000  000021eb  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000118  00000000  00000000  000026e0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000047a  00000000  00000000  000027f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000002ee  00000000  00000000  00002c72  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  00002f60  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	ea ea       	ldi	r30, 0xAA	; 170
  84:	fc e0       	ldi	r31, 0x0C	; 12
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a0 3f       	cpi	r26, 0xF0	; 240
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a0 ef       	ldi	r26, 0xF0	; 240
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	aa 3f       	cpi	r26, 0xFA	; 250
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 57 00 	call	0xae	; 0xae <main>
  a6:	0c 94 53 06 	jmp	0xca6	; 0xca6 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <main>:

#include "UARTdrv.h"
#include "SRAM/SRAMdrv.h"

int main(void){
	USART_drv_init(MYUBRR);
  ae:	8f e1       	ldi	r24, 0x1F	; 31
  b0:	90 e0       	ldi	r25, 0x00	; 0
  b2:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <USART_drv_init>
	SRAM_init();
  b6:	0e 94 60 00 	call	0xc0	; 0xc0 <SRAM_init>
	//DDRB = 0xFF;
	SRAM_test();
  ba:	0e 94 67 00 	call	0xce	; 0xce <SRAM_test>
  be:	ff cf       	rjmp	.-2      	; 0xbe <main+0x10>

000000c0 <SRAM_init>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  c0:	85 b7       	in	r24, 0x35	; 53
  c2:	80 68       	ori	r24, 0x80	; 128
  c4:	85 bf       	out	0x35, r24	; 53
  c6:	80 b7       	in	r24, 0x30	; 48
  c8:	80 62       	ori	r24, 0x20	; 32
  ca:	80 bf       	out	0x30, r24	; 48
  cc:	08 95       	ret

000000ce <SRAM_test>:
	_delay_ms(10000);
	PORTE |= (1 << PE1);
	_delay_ms(10000);
}

void SRAM_test(){
  ce:	ef 92       	push	r14
  d0:	ff 92       	push	r15
  d2:	0f 93       	push	r16
  d4:	1f 93       	push	r17
  d6:	cf 93       	push	r28
  d8:	df 93       	push	r29
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
	uint16_t retrieval_errors = 0;
	printf("Starting SRAM test...\n");
  da:	8a e0       	ldi	r24, 0x0A	; 10
  dc:	91 e0       	ldi	r25, 0x01	; 1
  de:	0e 94 b4 01 	call	0x368	; 0x368 <puts>
	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
  e2:	0e 94 43 01 	call	0x286	; 0x286 <rand>
  e6:	7c 01       	movw	r14, r24
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
  e8:	0e 94 48 01 	call	0x290	; 0x290 <srand>
	for (uint16_t i = 0; i < ext_ram_size; i++) {
  ec:	c0 e0       	ldi	r28, 0x00	; 0
  ee:	d0 e0       	ldi	r29, 0x00	; 0
}

void SRAM_test(){
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	10 e0       	ldi	r17, 0x00	; 0
	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
  f4:	20 c0       	rjmp	.+64     	; 0x136 <SRAM_test+0x68>
		uint8_t some_value = rand();
  f6:	0e 94 43 01 	call	0x286	; 0x286 <rand>
		ext_ram[i] = some_value;
  fa:	fe 01       	movw	r30, r28
  fc:	f8 5e       	subi	r31, 0xE8	; 232
  fe:	80 83       	st	Z, r24
		uint8_t retreived_value = ext_ram[i];
 100:	20 81       	ld	r18, Z
		if (retreived_value != some_value) {
 102:	28 17       	cp	r18, r24
 104:	b9 f0       	breq	.+46     	; 0x134 <SRAM_test+0x66>
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
 106:	99 27       	eor	r25, r25
 108:	9f 93       	push	r25
 10a:	8f 93       	push	r24
 10c:	1f 92       	push	r1
 10e:	2f 93       	push	r18
 110:	df 93       	push	r29
 112:	cf 93       	push	r28
 114:	80 e2       	ldi	r24, 0x20	; 32
 116:	91 e0       	ldi	r25, 0x01	; 1
 118:	9f 93       	push	r25
 11a:	8f 93       	push	r24
 11c:	0e 94 9e 01 	call	0x33c	; 0x33c <printf>
			write_errors++;
 120:	0f 5f       	subi	r16, 0xFF	; 255
 122:	1f 4f       	sbci	r17, 0xFF	; 255
 124:	8d b7       	in	r24, 0x3d	; 61
 126:	9e b7       	in	r25, 0x3e	; 62
 128:	08 96       	adiw	r24, 0x08	; 8
 12a:	0f b6       	in	r0, 0x3f	; 63
 12c:	f8 94       	cli
 12e:	9e bf       	out	0x3e, r25	; 62
 130:	0f be       	out	0x3f, r0	; 63
 132:	8d bf       	out	0x3d, r24	; 61
	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 134:	21 96       	adiw	r28, 0x01	; 1
 136:	c1 15       	cp	r28, r1
 138:	98 e0       	ldi	r25, 0x08	; 8
 13a:	d9 07       	cpc	r29, r25
 13c:	e0 f2       	brcs	.-72     	; 0xf6 <SRAM_test+0x28>
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
			write_errors++;
		}
	}
	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);
 13e:	c7 01       	movw	r24, r14
 140:	0e 94 48 01 	call	0x290	; 0x290 <srand>
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 144:	c0 e0       	ldi	r28, 0x00	; 0
 146:	d0 e0       	ldi	r29, 0x00	; 0

void SRAM_test(){
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
	uint16_t retrieval_errors = 0;
 148:	e1 2c       	mov	r14, r1
 14a:	f1 2c       	mov	r15, r1
		}
	}
	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 14c:	20 c0       	rjmp	.+64     	; 0x18e <SRAM_test+0xc0>
		uint8_t some_value = rand();
 14e:	0e 94 43 01 	call	0x286	; 0x286 <rand>
		uint8_t retreived_value = ext_ram[i];
 152:	fe 01       	movw	r30, r28
 154:	f8 5e       	subi	r31, 0xE8	; 232
 156:	20 81       	ld	r18, Z
		if (retreived_value != some_value) {
 158:	28 17       	cp	r18, r24
 15a:	c1 f0       	breq	.+48     	; 0x18c <SRAM_test+0xbe>
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
 15c:	99 27       	eor	r25, r25
 15e:	9f 93       	push	r25
 160:	8f 93       	push	r24
 162:	1f 92       	push	r1
 164:	2f 93       	push	r18
 166:	df 93       	push	r29
 168:	cf 93       	push	r28
 16a:	89 e5       	ldi	r24, 0x59	; 89
 16c:	91 e0       	ldi	r25, 0x01	; 1
 16e:	9f 93       	push	r25
 170:	8f 93       	push	r24
 172:	0e 94 9e 01 	call	0x33c	; 0x33c <printf>
			retrieval_errors++;
 176:	8f ef       	ldi	r24, 0xFF	; 255
 178:	e8 1a       	sub	r14, r24
 17a:	f8 0a       	sbc	r15, r24
 17c:	8d b7       	in	r24, 0x3d	; 61
 17e:	9e b7       	in	r25, 0x3e	; 62
 180:	08 96       	adiw	r24, 0x08	; 8
 182:	0f b6       	in	r0, 0x3f	; 63
 184:	f8 94       	cli
 186:	9e bf       	out	0x3e, r25	; 62
 188:	0f be       	out	0x3f, r0	; 63
 18a:	8d bf       	out	0x3d, r24	; 61
		}
	}
	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 18c:	21 96       	adiw	r28, 0x01	; 1
 18e:	c1 15       	cp	r28, r1
 190:	98 e0       	ldi	r25, 0x08	; 8
 192:	d9 07       	cpc	r29, r25
 194:	e0 f2       	brcs	.-72     	; 0x14e <SRAM_test+0x80>
		if (retreived_value != some_value) {
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
			retrieval_errors++;
		}
	}
	printf("SRAM test completed with \n%4d errors in write phase and \n%4d errors in retrieval phase\n\n", write_errors, retrieval_errors);
 196:	ff 92       	push	r15
 198:	ef 92       	push	r14
 19a:	1f 93       	push	r17
 19c:	0f 93       	push	r16
 19e:	86 e9       	ldi	r24, 0x96	; 150
 1a0:	91 e0       	ldi	r25, 0x01	; 1
 1a2:	9f 93       	push	r25
 1a4:	8f 93       	push	r24
 1a6:	0e 94 9e 01 	call	0x33c	; 0x33c <printf>
 1aa:	0f 90       	pop	r0
 1ac:	0f 90       	pop	r0
 1ae:	0f 90       	pop	r0
 1b0:	0f 90       	pop	r0
 1b2:	0f 90       	pop	r0
 1b4:	0f 90       	pop	r0
 1b6:	df 91       	pop	r29
 1b8:	cf 91       	pop	r28
 1ba:	1f 91       	pop	r17
 1bc:	0f 91       	pop	r16
 1be:	ff 90       	pop	r15
 1c0:	ef 90       	pop	r14
 1c2:	08 95       	ret

000001c4 <USART_Transmit>:
}

void USART_Transmit(unsigned char data)
{
	/* Wait for empty transmit buffer */
	while ( !( UCSR0A & (1<<UDRE0)) )
 1c4:	5d 9b       	sbis	0x0b, 5	; 11
 1c6:	fe cf       	rjmp	.-4      	; 0x1c4 <USART_Transmit>
		;
	/* Put data into buffer, sends the data */
	UDR0 = data;
 1c8:	8c b9       	out	0x0c, r24	; 12
 1ca:	08 95       	ret

000001cc <USART_Receive>:
}

unsigned char USART_Receive(void)
{
	/* Wait for data to be received */
	while ( !(UCSR0A & (1<<RXC0)) )
 1cc:	5f 9b       	sbis	0x0b, 7	; 11
 1ce:	fe cf       	rjmp	.-4      	; 0x1cc <USART_Receive>
		;
	/* Get and return received data from buffer */
	return UDR0;
 1d0:	8c b1       	in	r24, 0x0c	; 12

}
 1d2:	08 95       	ret

000001d4 <USART_drv_init>:

/* Hentet fra ATmega162 datablad */
void USART_drv_init(unsigned int ubrr)
{
	/* Set baud rate */
	UBRR0H = (unsigned char)(ubrr>>8);
 1d4:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char)ubrr;
 1d6:	89 b9       	out	0x09, r24	; 9
	/* Enable receiver and transmitter */
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
 1d8:	88 e1       	ldi	r24, 0x18	; 24
 1da:	8a b9       	out	0x0a, r24	; 10
	/* Set frame format: 8data, 2stop bit, no parity */
	UCSR0C = (1<<URSEL0)|(1<<USBS0)|(3<<UCSZ00);
 1dc:	8e e8       	ldi	r24, 0x8E	; 142
 1de:	80 bd       	out	0x20, r24	; 32
	fdevopen(USART_Transmit, USART_Receive);
 1e0:	66 ee       	ldi	r22, 0xE6	; 230
 1e2:	70 e0       	ldi	r23, 0x00	; 0
 1e4:	82 ee       	ldi	r24, 0xE2	; 226
 1e6:	90 e0       	ldi	r25, 0x00	; 0
 1e8:	0e 94 53 01 	call	0x2a6	; 0x2a6 <fdevopen>
 1ec:	08 95       	ret

000001ee <do_rand>:
 1ee:	8f 92       	push	r8
 1f0:	9f 92       	push	r9
 1f2:	af 92       	push	r10
 1f4:	bf 92       	push	r11
 1f6:	cf 92       	push	r12
 1f8:	df 92       	push	r13
 1fa:	ef 92       	push	r14
 1fc:	ff 92       	push	r15
 1fe:	cf 93       	push	r28
 200:	df 93       	push	r29
 202:	ec 01       	movw	r28, r24
 204:	68 81       	ld	r22, Y
 206:	79 81       	ldd	r23, Y+1	; 0x01
 208:	8a 81       	ldd	r24, Y+2	; 0x02
 20a:	9b 81       	ldd	r25, Y+3	; 0x03
 20c:	61 15       	cp	r22, r1
 20e:	71 05       	cpc	r23, r1
 210:	81 05       	cpc	r24, r1
 212:	91 05       	cpc	r25, r1
 214:	21 f4       	brne	.+8      	; 0x21e <__EEPROM_REGION_LENGTH__+0x1e>
 216:	64 e2       	ldi	r22, 0x24	; 36
 218:	79 ed       	ldi	r23, 0xD9	; 217
 21a:	8b e5       	ldi	r24, 0x5B	; 91
 21c:	97 e0       	ldi	r25, 0x07	; 7
 21e:	2d e1       	ldi	r18, 0x1D	; 29
 220:	33 ef       	ldi	r19, 0xF3	; 243
 222:	41 e0       	ldi	r20, 0x01	; 1
 224:	50 e0       	ldi	r21, 0x00	; 0
 226:	0e 94 b9 05 	call	0xb72	; 0xb72 <__divmodsi4>
 22a:	49 01       	movw	r8, r18
 22c:	5a 01       	movw	r10, r20
 22e:	9b 01       	movw	r18, r22
 230:	ac 01       	movw	r20, r24
 232:	a7 ea       	ldi	r26, 0xA7	; 167
 234:	b1 e4       	ldi	r27, 0x41	; 65
 236:	0e 94 d8 05 	call	0xbb0	; 0xbb0 <__muluhisi3>
 23a:	6b 01       	movw	r12, r22
 23c:	7c 01       	movw	r14, r24
 23e:	ac ee       	ldi	r26, 0xEC	; 236
 240:	b4 ef       	ldi	r27, 0xF4	; 244
 242:	a5 01       	movw	r20, r10
 244:	94 01       	movw	r18, r8
 246:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__mulohisi3>
 24a:	dc 01       	movw	r26, r24
 24c:	cb 01       	movw	r24, r22
 24e:	8c 0d       	add	r24, r12
 250:	9d 1d       	adc	r25, r13
 252:	ae 1d       	adc	r26, r14
 254:	bf 1d       	adc	r27, r15
 256:	b7 ff       	sbrs	r27, 7
 258:	03 c0       	rjmp	.+6      	; 0x260 <__EEPROM_REGION_LENGTH__+0x60>
 25a:	01 97       	sbiw	r24, 0x01	; 1
 25c:	a1 09       	sbc	r26, r1
 25e:	b0 48       	sbci	r27, 0x80	; 128
 260:	88 83       	st	Y, r24
 262:	99 83       	std	Y+1, r25	; 0x01
 264:	aa 83       	std	Y+2, r26	; 0x02
 266:	bb 83       	std	Y+3, r27	; 0x03
 268:	9f 77       	andi	r25, 0x7F	; 127
 26a:	df 91       	pop	r29
 26c:	cf 91       	pop	r28
 26e:	ff 90       	pop	r15
 270:	ef 90       	pop	r14
 272:	df 90       	pop	r13
 274:	cf 90       	pop	r12
 276:	bf 90       	pop	r11
 278:	af 90       	pop	r10
 27a:	9f 90       	pop	r9
 27c:	8f 90       	pop	r8
 27e:	08 95       	ret

00000280 <rand_r>:
 280:	0e 94 f7 00 	call	0x1ee	; 0x1ee <do_rand>
 284:	08 95       	ret

00000286 <rand>:
 286:	80 e0       	ldi	r24, 0x00	; 0
 288:	91 e0       	ldi	r25, 0x01	; 1
 28a:	0e 94 f7 00 	call	0x1ee	; 0x1ee <do_rand>
 28e:	08 95       	ret

00000290 <srand>:
 290:	a0 e0       	ldi	r26, 0x00	; 0
 292:	b0 e0       	ldi	r27, 0x00	; 0
 294:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 298:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 29c:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 2a0:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 2a4:	08 95       	ret

000002a6 <fdevopen>:
 2a6:	0f 93       	push	r16
 2a8:	1f 93       	push	r17
 2aa:	cf 93       	push	r28
 2ac:	df 93       	push	r29
 2ae:	00 97       	sbiw	r24, 0x00	; 0
 2b0:	31 f4       	brne	.+12     	; 0x2be <fdevopen+0x18>
 2b2:	61 15       	cp	r22, r1
 2b4:	71 05       	cpc	r23, r1
 2b6:	19 f4       	brne	.+6      	; 0x2be <fdevopen+0x18>
 2b8:	80 e0       	ldi	r24, 0x00	; 0
 2ba:	90 e0       	ldi	r25, 0x00	; 0
 2bc:	3a c0       	rjmp	.+116    	; 0x332 <fdevopen+0x8c>
 2be:	8b 01       	movw	r16, r22
 2c0:	ec 01       	movw	r28, r24
 2c2:	6e e0       	ldi	r22, 0x0E	; 14
 2c4:	70 e0       	ldi	r23, 0x00	; 0
 2c6:	81 e0       	ldi	r24, 0x01	; 1
 2c8:	90 e0       	ldi	r25, 0x00	; 0
 2ca:	0e 94 c5 03 	call	0x78a	; 0x78a <calloc>
 2ce:	fc 01       	movw	r30, r24
 2d0:	89 2b       	or	r24, r25
 2d2:	91 f3       	breq	.-28     	; 0x2b8 <fdevopen+0x12>
 2d4:	80 e8       	ldi	r24, 0x80	; 128
 2d6:	83 83       	std	Z+3, r24	; 0x03
 2d8:	01 15       	cp	r16, r1
 2da:	11 05       	cpc	r17, r1
 2dc:	71 f0       	breq	.+28     	; 0x2fa <fdevopen+0x54>
 2de:	13 87       	std	Z+11, r17	; 0x0b
 2e0:	02 87       	std	Z+10, r16	; 0x0a
 2e2:	81 e8       	ldi	r24, 0x81	; 129
 2e4:	83 83       	std	Z+3, r24	; 0x03
 2e6:	80 91 f0 01 	lds	r24, 0x01F0	; 0x8001f0 <__data_end>
 2ea:	90 91 f1 01 	lds	r25, 0x01F1	; 0x8001f1 <__data_end+0x1>
 2ee:	89 2b       	or	r24, r25
 2f0:	21 f4       	brne	.+8      	; 0x2fa <fdevopen+0x54>
 2f2:	f0 93 f1 01 	sts	0x01F1, r31	; 0x8001f1 <__data_end+0x1>
 2f6:	e0 93 f0 01 	sts	0x01F0, r30	; 0x8001f0 <__data_end>
 2fa:	20 97       	sbiw	r28, 0x00	; 0
 2fc:	c9 f0       	breq	.+50     	; 0x330 <fdevopen+0x8a>
 2fe:	d1 87       	std	Z+9, r29	; 0x09
 300:	c0 87       	std	Z+8, r28	; 0x08
 302:	83 81       	ldd	r24, Z+3	; 0x03
 304:	82 60       	ori	r24, 0x02	; 2
 306:	83 83       	std	Z+3, r24	; 0x03
 308:	80 91 f2 01 	lds	r24, 0x01F2	; 0x8001f2 <__data_end+0x2>
 30c:	90 91 f3 01 	lds	r25, 0x01F3	; 0x8001f3 <__data_end+0x3>
 310:	89 2b       	or	r24, r25
 312:	71 f4       	brne	.+28     	; 0x330 <fdevopen+0x8a>
 314:	f0 93 f3 01 	sts	0x01F3, r31	; 0x8001f3 <__data_end+0x3>
 318:	e0 93 f2 01 	sts	0x01F2, r30	; 0x8001f2 <__data_end+0x2>
 31c:	80 91 f4 01 	lds	r24, 0x01F4	; 0x8001f4 <__data_end+0x4>
 320:	90 91 f5 01 	lds	r25, 0x01F5	; 0x8001f5 <__data_end+0x5>
 324:	89 2b       	or	r24, r25
 326:	21 f4       	brne	.+8      	; 0x330 <fdevopen+0x8a>
 328:	f0 93 f5 01 	sts	0x01F5, r31	; 0x8001f5 <__data_end+0x5>
 32c:	e0 93 f4 01 	sts	0x01F4, r30	; 0x8001f4 <__data_end+0x4>
 330:	cf 01       	movw	r24, r30
 332:	df 91       	pop	r29
 334:	cf 91       	pop	r28
 336:	1f 91       	pop	r17
 338:	0f 91       	pop	r16
 33a:	08 95       	ret

0000033c <printf>:
 33c:	a0 e0       	ldi	r26, 0x00	; 0
 33e:	b0 e0       	ldi	r27, 0x00	; 0
 340:	e4 ea       	ldi	r30, 0xA4	; 164
 342:	f1 e0       	ldi	r31, 0x01	; 1
 344:	0c 94 fb 05 	jmp	0xbf6	; 0xbf6 <__prologue_saves__+0x20>
 348:	ae 01       	movw	r20, r28
 34a:	4b 5f       	subi	r20, 0xFB	; 251
 34c:	5f 4f       	sbci	r21, 0xFF	; 255
 34e:	fa 01       	movw	r30, r20
 350:	61 91       	ld	r22, Z+
 352:	71 91       	ld	r23, Z+
 354:	af 01       	movw	r20, r30
 356:	80 91 f2 01 	lds	r24, 0x01F2	; 0x8001f2 <__data_end+0x2>
 35a:	90 91 f3 01 	lds	r25, 0x01F3	; 0x8001f3 <__data_end+0x3>
 35e:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <vfprintf>
 362:	e2 e0       	ldi	r30, 0x02	; 2
 364:	0c 94 17 06 	jmp	0xc2e	; 0xc2e <__epilogue_restores__+0x20>

00000368 <puts>:
 368:	0f 93       	push	r16
 36a:	1f 93       	push	r17
 36c:	cf 93       	push	r28
 36e:	df 93       	push	r29
 370:	e0 91 f2 01 	lds	r30, 0x01F2	; 0x8001f2 <__data_end+0x2>
 374:	f0 91 f3 01 	lds	r31, 0x01F3	; 0x8001f3 <__data_end+0x3>
 378:	23 81       	ldd	r18, Z+3	; 0x03
 37a:	21 ff       	sbrs	r18, 1
 37c:	1b c0       	rjmp	.+54     	; 0x3b4 <puts+0x4c>
 37e:	8c 01       	movw	r16, r24
 380:	d0 e0       	ldi	r29, 0x00	; 0
 382:	c0 e0       	ldi	r28, 0x00	; 0
 384:	f8 01       	movw	r30, r16
 386:	81 91       	ld	r24, Z+
 388:	8f 01       	movw	r16, r30
 38a:	60 91 f2 01 	lds	r22, 0x01F2	; 0x8001f2 <__data_end+0x2>
 38e:	70 91 f3 01 	lds	r23, 0x01F3	; 0x8001f3 <__data_end+0x3>
 392:	db 01       	movw	r26, r22
 394:	18 96       	adiw	r26, 0x08	; 8
 396:	ed 91       	ld	r30, X+
 398:	fc 91       	ld	r31, X
 39a:	19 97       	sbiw	r26, 0x09	; 9
 39c:	88 23       	and	r24, r24
 39e:	31 f0       	breq	.+12     	; 0x3ac <puts+0x44>
 3a0:	09 95       	icall
 3a2:	89 2b       	or	r24, r25
 3a4:	79 f3       	breq	.-34     	; 0x384 <puts+0x1c>
 3a6:	df ef       	ldi	r29, 0xFF	; 255
 3a8:	cf ef       	ldi	r28, 0xFF	; 255
 3aa:	ec cf       	rjmp	.-40     	; 0x384 <puts+0x1c>
 3ac:	8a e0       	ldi	r24, 0x0A	; 10
 3ae:	09 95       	icall
 3b0:	89 2b       	or	r24, r25
 3b2:	19 f0       	breq	.+6      	; 0x3ba <puts+0x52>
 3b4:	8f ef       	ldi	r24, 0xFF	; 255
 3b6:	9f ef       	ldi	r25, 0xFF	; 255
 3b8:	02 c0       	rjmp	.+4      	; 0x3be <puts+0x56>
 3ba:	8d 2f       	mov	r24, r29
 3bc:	9c 2f       	mov	r25, r28
 3be:	df 91       	pop	r29
 3c0:	cf 91       	pop	r28
 3c2:	1f 91       	pop	r17
 3c4:	0f 91       	pop	r16
 3c6:	08 95       	ret

000003c8 <vfprintf>:
 3c8:	ab e0       	ldi	r26, 0x0B	; 11
 3ca:	b0 e0       	ldi	r27, 0x00	; 0
 3cc:	ea ee       	ldi	r30, 0xEA	; 234
 3ce:	f1 e0       	ldi	r31, 0x01	; 1
 3d0:	0c 94 eb 05 	jmp	0xbd6	; 0xbd6 <__prologue_saves__>
 3d4:	6c 01       	movw	r12, r24
 3d6:	7b 01       	movw	r14, r22
 3d8:	8a 01       	movw	r16, r20
 3da:	fc 01       	movw	r30, r24
 3dc:	17 82       	std	Z+7, r1	; 0x07
 3de:	16 82       	std	Z+6, r1	; 0x06
 3e0:	83 81       	ldd	r24, Z+3	; 0x03
 3e2:	81 ff       	sbrs	r24, 1
 3e4:	cc c1       	rjmp	.+920    	; 0x77e <__stack+0x27f>
 3e6:	ce 01       	movw	r24, r28
 3e8:	01 96       	adiw	r24, 0x01	; 1
 3ea:	3c 01       	movw	r6, r24
 3ec:	f6 01       	movw	r30, r12
 3ee:	93 81       	ldd	r25, Z+3	; 0x03
 3f0:	f7 01       	movw	r30, r14
 3f2:	93 fd       	sbrc	r25, 3
 3f4:	85 91       	lpm	r24, Z+
 3f6:	93 ff       	sbrs	r25, 3
 3f8:	81 91       	ld	r24, Z+
 3fa:	7f 01       	movw	r14, r30
 3fc:	88 23       	and	r24, r24
 3fe:	09 f4       	brne	.+2      	; 0x402 <__DATA_REGION_LENGTH__+0x2>
 400:	ba c1       	rjmp	.+884    	; 0x776 <__stack+0x277>
 402:	85 32       	cpi	r24, 0x25	; 37
 404:	39 f4       	brne	.+14     	; 0x414 <__DATA_REGION_LENGTH__+0x14>
 406:	93 fd       	sbrc	r25, 3
 408:	85 91       	lpm	r24, Z+
 40a:	93 ff       	sbrs	r25, 3
 40c:	81 91       	ld	r24, Z+
 40e:	7f 01       	movw	r14, r30
 410:	85 32       	cpi	r24, 0x25	; 37
 412:	29 f4       	brne	.+10     	; 0x41e <__DATA_REGION_LENGTH__+0x1e>
 414:	b6 01       	movw	r22, r12
 416:	90 e0       	ldi	r25, 0x00	; 0
 418:	0e 94 1f 05 	call	0xa3e	; 0xa3e <fputc>
 41c:	e7 cf       	rjmp	.-50     	; 0x3ec <vfprintf+0x24>
 41e:	91 2c       	mov	r9, r1
 420:	21 2c       	mov	r2, r1
 422:	31 2c       	mov	r3, r1
 424:	ff e1       	ldi	r31, 0x1F	; 31
 426:	f3 15       	cp	r31, r3
 428:	d8 f0       	brcs	.+54     	; 0x460 <__DATA_REGION_LENGTH__+0x60>
 42a:	8b 32       	cpi	r24, 0x2B	; 43
 42c:	79 f0       	breq	.+30     	; 0x44c <__DATA_REGION_LENGTH__+0x4c>
 42e:	38 f4       	brcc	.+14     	; 0x43e <__DATA_REGION_LENGTH__+0x3e>
 430:	80 32       	cpi	r24, 0x20	; 32
 432:	79 f0       	breq	.+30     	; 0x452 <__DATA_REGION_LENGTH__+0x52>
 434:	83 32       	cpi	r24, 0x23	; 35
 436:	a1 f4       	brne	.+40     	; 0x460 <__DATA_REGION_LENGTH__+0x60>
 438:	23 2d       	mov	r18, r3
 43a:	20 61       	ori	r18, 0x10	; 16
 43c:	1d c0       	rjmp	.+58     	; 0x478 <__DATA_REGION_LENGTH__+0x78>
 43e:	8d 32       	cpi	r24, 0x2D	; 45
 440:	61 f0       	breq	.+24     	; 0x45a <__DATA_REGION_LENGTH__+0x5a>
 442:	80 33       	cpi	r24, 0x30	; 48
 444:	69 f4       	brne	.+26     	; 0x460 <__DATA_REGION_LENGTH__+0x60>
 446:	23 2d       	mov	r18, r3
 448:	21 60       	ori	r18, 0x01	; 1
 44a:	16 c0       	rjmp	.+44     	; 0x478 <__DATA_REGION_LENGTH__+0x78>
 44c:	83 2d       	mov	r24, r3
 44e:	82 60       	ori	r24, 0x02	; 2
 450:	38 2e       	mov	r3, r24
 452:	e3 2d       	mov	r30, r3
 454:	e4 60       	ori	r30, 0x04	; 4
 456:	3e 2e       	mov	r3, r30
 458:	2a c0       	rjmp	.+84     	; 0x4ae <__DATA_REGION_LENGTH__+0xae>
 45a:	f3 2d       	mov	r31, r3
 45c:	f8 60       	ori	r31, 0x08	; 8
 45e:	1d c0       	rjmp	.+58     	; 0x49a <__DATA_REGION_LENGTH__+0x9a>
 460:	37 fc       	sbrc	r3, 7
 462:	2d c0       	rjmp	.+90     	; 0x4be <__DATA_REGION_LENGTH__+0xbe>
 464:	20 ed       	ldi	r18, 0xD0	; 208
 466:	28 0f       	add	r18, r24
 468:	2a 30       	cpi	r18, 0x0A	; 10
 46a:	40 f0       	brcs	.+16     	; 0x47c <__DATA_REGION_LENGTH__+0x7c>
 46c:	8e 32       	cpi	r24, 0x2E	; 46
 46e:	b9 f4       	brne	.+46     	; 0x49e <__DATA_REGION_LENGTH__+0x9e>
 470:	36 fc       	sbrc	r3, 6
 472:	81 c1       	rjmp	.+770    	; 0x776 <__stack+0x277>
 474:	23 2d       	mov	r18, r3
 476:	20 64       	ori	r18, 0x40	; 64
 478:	32 2e       	mov	r3, r18
 47a:	19 c0       	rjmp	.+50     	; 0x4ae <__DATA_REGION_LENGTH__+0xae>
 47c:	36 fe       	sbrs	r3, 6
 47e:	06 c0       	rjmp	.+12     	; 0x48c <__DATA_REGION_LENGTH__+0x8c>
 480:	8a e0       	ldi	r24, 0x0A	; 10
 482:	98 9e       	mul	r9, r24
 484:	20 0d       	add	r18, r0
 486:	11 24       	eor	r1, r1
 488:	92 2e       	mov	r9, r18
 48a:	11 c0       	rjmp	.+34     	; 0x4ae <__DATA_REGION_LENGTH__+0xae>
 48c:	ea e0       	ldi	r30, 0x0A	; 10
 48e:	2e 9e       	mul	r2, r30
 490:	20 0d       	add	r18, r0
 492:	11 24       	eor	r1, r1
 494:	22 2e       	mov	r2, r18
 496:	f3 2d       	mov	r31, r3
 498:	f0 62       	ori	r31, 0x20	; 32
 49a:	3f 2e       	mov	r3, r31
 49c:	08 c0       	rjmp	.+16     	; 0x4ae <__DATA_REGION_LENGTH__+0xae>
 49e:	8c 36       	cpi	r24, 0x6C	; 108
 4a0:	21 f4       	brne	.+8      	; 0x4aa <__DATA_REGION_LENGTH__+0xaa>
 4a2:	83 2d       	mov	r24, r3
 4a4:	80 68       	ori	r24, 0x80	; 128
 4a6:	38 2e       	mov	r3, r24
 4a8:	02 c0       	rjmp	.+4      	; 0x4ae <__DATA_REGION_LENGTH__+0xae>
 4aa:	88 36       	cpi	r24, 0x68	; 104
 4ac:	41 f4       	brne	.+16     	; 0x4be <__DATA_REGION_LENGTH__+0xbe>
 4ae:	f7 01       	movw	r30, r14
 4b0:	93 fd       	sbrc	r25, 3
 4b2:	85 91       	lpm	r24, Z+
 4b4:	93 ff       	sbrs	r25, 3
 4b6:	81 91       	ld	r24, Z+
 4b8:	7f 01       	movw	r14, r30
 4ba:	81 11       	cpse	r24, r1
 4bc:	b3 cf       	rjmp	.-154    	; 0x424 <__DATA_REGION_LENGTH__+0x24>
 4be:	98 2f       	mov	r25, r24
 4c0:	9f 7d       	andi	r25, 0xDF	; 223
 4c2:	95 54       	subi	r25, 0x45	; 69
 4c4:	93 30       	cpi	r25, 0x03	; 3
 4c6:	28 f4       	brcc	.+10     	; 0x4d2 <__DATA_REGION_LENGTH__+0xd2>
 4c8:	0c 5f       	subi	r16, 0xFC	; 252
 4ca:	1f 4f       	sbci	r17, 0xFF	; 255
 4cc:	9f e3       	ldi	r25, 0x3F	; 63
 4ce:	99 83       	std	Y+1, r25	; 0x01
 4d0:	0d c0       	rjmp	.+26     	; 0x4ec <__DATA_REGION_LENGTH__+0xec>
 4d2:	83 36       	cpi	r24, 0x63	; 99
 4d4:	31 f0       	breq	.+12     	; 0x4e2 <__DATA_REGION_LENGTH__+0xe2>
 4d6:	83 37       	cpi	r24, 0x73	; 115
 4d8:	71 f0       	breq	.+28     	; 0x4f6 <__DATA_REGION_LENGTH__+0xf6>
 4da:	83 35       	cpi	r24, 0x53	; 83
 4dc:	09 f0       	breq	.+2      	; 0x4e0 <__DATA_REGION_LENGTH__+0xe0>
 4de:	59 c0       	rjmp	.+178    	; 0x592 <__stack+0x93>
 4e0:	21 c0       	rjmp	.+66     	; 0x524 <__stack+0x25>
 4e2:	f8 01       	movw	r30, r16
 4e4:	80 81       	ld	r24, Z
 4e6:	89 83       	std	Y+1, r24	; 0x01
 4e8:	0e 5f       	subi	r16, 0xFE	; 254
 4ea:	1f 4f       	sbci	r17, 0xFF	; 255
 4ec:	88 24       	eor	r8, r8
 4ee:	83 94       	inc	r8
 4f0:	91 2c       	mov	r9, r1
 4f2:	53 01       	movw	r10, r6
 4f4:	13 c0       	rjmp	.+38     	; 0x51c <__stack+0x1d>
 4f6:	28 01       	movw	r4, r16
 4f8:	f2 e0       	ldi	r31, 0x02	; 2
 4fa:	4f 0e       	add	r4, r31
 4fc:	51 1c       	adc	r5, r1
 4fe:	f8 01       	movw	r30, r16
 500:	a0 80       	ld	r10, Z
 502:	b1 80       	ldd	r11, Z+1	; 0x01
 504:	36 fe       	sbrs	r3, 6
 506:	03 c0       	rjmp	.+6      	; 0x50e <__stack+0xf>
 508:	69 2d       	mov	r22, r9
 50a:	70 e0       	ldi	r23, 0x00	; 0
 50c:	02 c0       	rjmp	.+4      	; 0x512 <__stack+0x13>
 50e:	6f ef       	ldi	r22, 0xFF	; 255
 510:	7f ef       	ldi	r23, 0xFF	; 255
 512:	c5 01       	movw	r24, r10
 514:	0e 94 14 05 	call	0xa28	; 0xa28 <strnlen>
 518:	4c 01       	movw	r8, r24
 51a:	82 01       	movw	r16, r4
 51c:	f3 2d       	mov	r31, r3
 51e:	ff 77       	andi	r31, 0x7F	; 127
 520:	3f 2e       	mov	r3, r31
 522:	16 c0       	rjmp	.+44     	; 0x550 <__stack+0x51>
 524:	28 01       	movw	r4, r16
 526:	22 e0       	ldi	r18, 0x02	; 2
 528:	42 0e       	add	r4, r18
 52a:	51 1c       	adc	r5, r1
 52c:	f8 01       	movw	r30, r16
 52e:	a0 80       	ld	r10, Z
 530:	b1 80       	ldd	r11, Z+1	; 0x01
 532:	36 fe       	sbrs	r3, 6
 534:	03 c0       	rjmp	.+6      	; 0x53c <__stack+0x3d>
 536:	69 2d       	mov	r22, r9
 538:	70 e0       	ldi	r23, 0x00	; 0
 53a:	02 c0       	rjmp	.+4      	; 0x540 <__stack+0x41>
 53c:	6f ef       	ldi	r22, 0xFF	; 255
 53e:	7f ef       	ldi	r23, 0xFF	; 255
 540:	c5 01       	movw	r24, r10
 542:	0e 94 02 05 	call	0xa04	; 0xa04 <strnlen_P>
 546:	4c 01       	movw	r8, r24
 548:	f3 2d       	mov	r31, r3
 54a:	f0 68       	ori	r31, 0x80	; 128
 54c:	3f 2e       	mov	r3, r31
 54e:	82 01       	movw	r16, r4
 550:	33 fc       	sbrc	r3, 3
 552:	1b c0       	rjmp	.+54     	; 0x58a <__stack+0x8b>
 554:	82 2d       	mov	r24, r2
 556:	90 e0       	ldi	r25, 0x00	; 0
 558:	88 16       	cp	r8, r24
 55a:	99 06       	cpc	r9, r25
 55c:	b0 f4       	brcc	.+44     	; 0x58a <__stack+0x8b>
 55e:	b6 01       	movw	r22, r12
 560:	80 e2       	ldi	r24, 0x20	; 32
 562:	90 e0       	ldi	r25, 0x00	; 0
 564:	0e 94 1f 05 	call	0xa3e	; 0xa3e <fputc>
 568:	2a 94       	dec	r2
 56a:	f4 cf       	rjmp	.-24     	; 0x554 <__stack+0x55>
 56c:	f5 01       	movw	r30, r10
 56e:	37 fc       	sbrc	r3, 7
 570:	85 91       	lpm	r24, Z+
 572:	37 fe       	sbrs	r3, 7
 574:	81 91       	ld	r24, Z+
 576:	5f 01       	movw	r10, r30
 578:	b6 01       	movw	r22, r12
 57a:	90 e0       	ldi	r25, 0x00	; 0
 57c:	0e 94 1f 05 	call	0xa3e	; 0xa3e <fputc>
 580:	21 10       	cpse	r2, r1
 582:	2a 94       	dec	r2
 584:	21 e0       	ldi	r18, 0x01	; 1
 586:	82 1a       	sub	r8, r18
 588:	91 08       	sbc	r9, r1
 58a:	81 14       	cp	r8, r1
 58c:	91 04       	cpc	r9, r1
 58e:	71 f7       	brne	.-36     	; 0x56c <__stack+0x6d>
 590:	e8 c0       	rjmp	.+464    	; 0x762 <__stack+0x263>
 592:	84 36       	cpi	r24, 0x64	; 100
 594:	11 f0       	breq	.+4      	; 0x59a <__stack+0x9b>
 596:	89 36       	cpi	r24, 0x69	; 105
 598:	41 f5       	brne	.+80     	; 0x5ea <__stack+0xeb>
 59a:	f8 01       	movw	r30, r16
 59c:	37 fe       	sbrs	r3, 7
 59e:	07 c0       	rjmp	.+14     	; 0x5ae <__stack+0xaf>
 5a0:	60 81       	ld	r22, Z
 5a2:	71 81       	ldd	r23, Z+1	; 0x01
 5a4:	82 81       	ldd	r24, Z+2	; 0x02
 5a6:	93 81       	ldd	r25, Z+3	; 0x03
 5a8:	0c 5f       	subi	r16, 0xFC	; 252
 5aa:	1f 4f       	sbci	r17, 0xFF	; 255
 5ac:	08 c0       	rjmp	.+16     	; 0x5be <__stack+0xbf>
 5ae:	60 81       	ld	r22, Z
 5b0:	71 81       	ldd	r23, Z+1	; 0x01
 5b2:	07 2e       	mov	r0, r23
 5b4:	00 0c       	add	r0, r0
 5b6:	88 0b       	sbc	r24, r24
 5b8:	99 0b       	sbc	r25, r25
 5ba:	0e 5f       	subi	r16, 0xFE	; 254
 5bc:	1f 4f       	sbci	r17, 0xFF	; 255
 5be:	f3 2d       	mov	r31, r3
 5c0:	ff 76       	andi	r31, 0x6F	; 111
 5c2:	3f 2e       	mov	r3, r31
 5c4:	97 ff       	sbrs	r25, 7
 5c6:	09 c0       	rjmp	.+18     	; 0x5da <__stack+0xdb>
 5c8:	90 95       	com	r25
 5ca:	80 95       	com	r24
 5cc:	70 95       	com	r23
 5ce:	61 95       	neg	r22
 5d0:	7f 4f       	sbci	r23, 0xFF	; 255
 5d2:	8f 4f       	sbci	r24, 0xFF	; 255
 5d4:	9f 4f       	sbci	r25, 0xFF	; 255
 5d6:	f0 68       	ori	r31, 0x80	; 128
 5d8:	3f 2e       	mov	r3, r31
 5da:	2a e0       	ldi	r18, 0x0A	; 10
 5dc:	30 e0       	ldi	r19, 0x00	; 0
 5de:	a3 01       	movw	r20, r6
 5e0:	0e 94 5b 05 	call	0xab6	; 0xab6 <__ultoa_invert>
 5e4:	88 2e       	mov	r8, r24
 5e6:	86 18       	sub	r8, r6
 5e8:	45 c0       	rjmp	.+138    	; 0x674 <__stack+0x175>
 5ea:	85 37       	cpi	r24, 0x75	; 117
 5ec:	31 f4       	brne	.+12     	; 0x5fa <__stack+0xfb>
 5ee:	23 2d       	mov	r18, r3
 5f0:	2f 7e       	andi	r18, 0xEF	; 239
 5f2:	b2 2e       	mov	r11, r18
 5f4:	2a e0       	ldi	r18, 0x0A	; 10
 5f6:	30 e0       	ldi	r19, 0x00	; 0
 5f8:	25 c0       	rjmp	.+74     	; 0x644 <__stack+0x145>
 5fa:	93 2d       	mov	r25, r3
 5fc:	99 7f       	andi	r25, 0xF9	; 249
 5fe:	b9 2e       	mov	r11, r25
 600:	8f 36       	cpi	r24, 0x6F	; 111
 602:	c1 f0       	breq	.+48     	; 0x634 <__stack+0x135>
 604:	18 f4       	brcc	.+6      	; 0x60c <__stack+0x10d>
 606:	88 35       	cpi	r24, 0x58	; 88
 608:	79 f0       	breq	.+30     	; 0x628 <__stack+0x129>
 60a:	b5 c0       	rjmp	.+362    	; 0x776 <__stack+0x277>
 60c:	80 37       	cpi	r24, 0x70	; 112
 60e:	19 f0       	breq	.+6      	; 0x616 <__stack+0x117>
 610:	88 37       	cpi	r24, 0x78	; 120
 612:	21 f0       	breq	.+8      	; 0x61c <__stack+0x11d>
 614:	b0 c0       	rjmp	.+352    	; 0x776 <__stack+0x277>
 616:	e9 2f       	mov	r30, r25
 618:	e0 61       	ori	r30, 0x10	; 16
 61a:	be 2e       	mov	r11, r30
 61c:	b4 fe       	sbrs	r11, 4
 61e:	0d c0       	rjmp	.+26     	; 0x63a <__stack+0x13b>
 620:	fb 2d       	mov	r31, r11
 622:	f4 60       	ori	r31, 0x04	; 4
 624:	bf 2e       	mov	r11, r31
 626:	09 c0       	rjmp	.+18     	; 0x63a <__stack+0x13b>
 628:	34 fe       	sbrs	r3, 4
 62a:	0a c0       	rjmp	.+20     	; 0x640 <__stack+0x141>
 62c:	29 2f       	mov	r18, r25
 62e:	26 60       	ori	r18, 0x06	; 6
 630:	b2 2e       	mov	r11, r18
 632:	06 c0       	rjmp	.+12     	; 0x640 <__stack+0x141>
 634:	28 e0       	ldi	r18, 0x08	; 8
 636:	30 e0       	ldi	r19, 0x00	; 0
 638:	05 c0       	rjmp	.+10     	; 0x644 <__stack+0x145>
 63a:	20 e1       	ldi	r18, 0x10	; 16
 63c:	30 e0       	ldi	r19, 0x00	; 0
 63e:	02 c0       	rjmp	.+4      	; 0x644 <__stack+0x145>
 640:	20 e1       	ldi	r18, 0x10	; 16
 642:	32 e0       	ldi	r19, 0x02	; 2
 644:	f8 01       	movw	r30, r16
 646:	b7 fe       	sbrs	r11, 7
 648:	07 c0       	rjmp	.+14     	; 0x658 <__stack+0x159>
 64a:	60 81       	ld	r22, Z
 64c:	71 81       	ldd	r23, Z+1	; 0x01
 64e:	82 81       	ldd	r24, Z+2	; 0x02
 650:	93 81       	ldd	r25, Z+3	; 0x03
 652:	0c 5f       	subi	r16, 0xFC	; 252
 654:	1f 4f       	sbci	r17, 0xFF	; 255
 656:	06 c0       	rjmp	.+12     	; 0x664 <__stack+0x165>
 658:	60 81       	ld	r22, Z
 65a:	71 81       	ldd	r23, Z+1	; 0x01
 65c:	80 e0       	ldi	r24, 0x00	; 0
 65e:	90 e0       	ldi	r25, 0x00	; 0
 660:	0e 5f       	subi	r16, 0xFE	; 254
 662:	1f 4f       	sbci	r17, 0xFF	; 255
 664:	a3 01       	movw	r20, r6
 666:	0e 94 5b 05 	call	0xab6	; 0xab6 <__ultoa_invert>
 66a:	88 2e       	mov	r8, r24
 66c:	86 18       	sub	r8, r6
 66e:	fb 2d       	mov	r31, r11
 670:	ff 77       	andi	r31, 0x7F	; 127
 672:	3f 2e       	mov	r3, r31
 674:	36 fe       	sbrs	r3, 6
 676:	0d c0       	rjmp	.+26     	; 0x692 <__stack+0x193>
 678:	23 2d       	mov	r18, r3
 67a:	2e 7f       	andi	r18, 0xFE	; 254
 67c:	a2 2e       	mov	r10, r18
 67e:	89 14       	cp	r8, r9
 680:	58 f4       	brcc	.+22     	; 0x698 <__stack+0x199>
 682:	34 fe       	sbrs	r3, 4
 684:	0b c0       	rjmp	.+22     	; 0x69c <__stack+0x19d>
 686:	32 fc       	sbrc	r3, 2
 688:	09 c0       	rjmp	.+18     	; 0x69c <__stack+0x19d>
 68a:	83 2d       	mov	r24, r3
 68c:	8e 7e       	andi	r24, 0xEE	; 238
 68e:	a8 2e       	mov	r10, r24
 690:	05 c0       	rjmp	.+10     	; 0x69c <__stack+0x19d>
 692:	b8 2c       	mov	r11, r8
 694:	a3 2c       	mov	r10, r3
 696:	03 c0       	rjmp	.+6      	; 0x69e <__stack+0x19f>
 698:	b8 2c       	mov	r11, r8
 69a:	01 c0       	rjmp	.+2      	; 0x69e <__stack+0x19f>
 69c:	b9 2c       	mov	r11, r9
 69e:	a4 fe       	sbrs	r10, 4
 6a0:	0f c0       	rjmp	.+30     	; 0x6c0 <__stack+0x1c1>
 6a2:	fe 01       	movw	r30, r28
 6a4:	e8 0d       	add	r30, r8
 6a6:	f1 1d       	adc	r31, r1
 6a8:	80 81       	ld	r24, Z
 6aa:	80 33       	cpi	r24, 0x30	; 48
 6ac:	21 f4       	brne	.+8      	; 0x6b6 <__stack+0x1b7>
 6ae:	9a 2d       	mov	r25, r10
 6b0:	99 7e       	andi	r25, 0xE9	; 233
 6b2:	a9 2e       	mov	r10, r25
 6b4:	09 c0       	rjmp	.+18     	; 0x6c8 <__stack+0x1c9>
 6b6:	a2 fe       	sbrs	r10, 2
 6b8:	06 c0       	rjmp	.+12     	; 0x6c6 <__stack+0x1c7>
 6ba:	b3 94       	inc	r11
 6bc:	b3 94       	inc	r11
 6be:	04 c0       	rjmp	.+8      	; 0x6c8 <__stack+0x1c9>
 6c0:	8a 2d       	mov	r24, r10
 6c2:	86 78       	andi	r24, 0x86	; 134
 6c4:	09 f0       	breq	.+2      	; 0x6c8 <__stack+0x1c9>
 6c6:	b3 94       	inc	r11
 6c8:	a3 fc       	sbrc	r10, 3
 6ca:	11 c0       	rjmp	.+34     	; 0x6ee <__stack+0x1ef>
 6cc:	a0 fe       	sbrs	r10, 0
 6ce:	06 c0       	rjmp	.+12     	; 0x6dc <__stack+0x1dd>
 6d0:	b2 14       	cp	r11, r2
 6d2:	88 f4       	brcc	.+34     	; 0x6f6 <__stack+0x1f7>
 6d4:	28 0c       	add	r2, r8
 6d6:	92 2c       	mov	r9, r2
 6d8:	9b 18       	sub	r9, r11
 6da:	0e c0       	rjmp	.+28     	; 0x6f8 <__stack+0x1f9>
 6dc:	b2 14       	cp	r11, r2
 6de:	60 f4       	brcc	.+24     	; 0x6f8 <__stack+0x1f9>
 6e0:	b6 01       	movw	r22, r12
 6e2:	80 e2       	ldi	r24, 0x20	; 32
 6e4:	90 e0       	ldi	r25, 0x00	; 0
 6e6:	0e 94 1f 05 	call	0xa3e	; 0xa3e <fputc>
 6ea:	b3 94       	inc	r11
 6ec:	f7 cf       	rjmp	.-18     	; 0x6dc <__stack+0x1dd>
 6ee:	b2 14       	cp	r11, r2
 6f0:	18 f4       	brcc	.+6      	; 0x6f8 <__stack+0x1f9>
 6f2:	2b 18       	sub	r2, r11
 6f4:	02 c0       	rjmp	.+4      	; 0x6fa <__stack+0x1fb>
 6f6:	98 2c       	mov	r9, r8
 6f8:	21 2c       	mov	r2, r1
 6fa:	a4 fe       	sbrs	r10, 4
 6fc:	10 c0       	rjmp	.+32     	; 0x71e <__stack+0x21f>
 6fe:	b6 01       	movw	r22, r12
 700:	80 e3       	ldi	r24, 0x30	; 48
 702:	90 e0       	ldi	r25, 0x00	; 0
 704:	0e 94 1f 05 	call	0xa3e	; 0xa3e <fputc>
 708:	a2 fe       	sbrs	r10, 2
 70a:	17 c0       	rjmp	.+46     	; 0x73a <__stack+0x23b>
 70c:	a1 fc       	sbrc	r10, 1
 70e:	03 c0       	rjmp	.+6      	; 0x716 <__stack+0x217>
 710:	88 e7       	ldi	r24, 0x78	; 120
 712:	90 e0       	ldi	r25, 0x00	; 0
 714:	02 c0       	rjmp	.+4      	; 0x71a <__stack+0x21b>
 716:	88 e5       	ldi	r24, 0x58	; 88
 718:	90 e0       	ldi	r25, 0x00	; 0
 71a:	b6 01       	movw	r22, r12
 71c:	0c c0       	rjmp	.+24     	; 0x736 <__stack+0x237>
 71e:	8a 2d       	mov	r24, r10
 720:	86 78       	andi	r24, 0x86	; 134
 722:	59 f0       	breq	.+22     	; 0x73a <__stack+0x23b>
 724:	a1 fe       	sbrs	r10, 1
 726:	02 c0       	rjmp	.+4      	; 0x72c <__stack+0x22d>
 728:	8b e2       	ldi	r24, 0x2B	; 43
 72a:	01 c0       	rjmp	.+2      	; 0x72e <__stack+0x22f>
 72c:	80 e2       	ldi	r24, 0x20	; 32
 72e:	a7 fc       	sbrc	r10, 7
 730:	8d e2       	ldi	r24, 0x2D	; 45
 732:	b6 01       	movw	r22, r12
 734:	90 e0       	ldi	r25, 0x00	; 0
 736:	0e 94 1f 05 	call	0xa3e	; 0xa3e <fputc>
 73a:	89 14       	cp	r8, r9
 73c:	38 f4       	brcc	.+14     	; 0x74c <__stack+0x24d>
 73e:	b6 01       	movw	r22, r12
 740:	80 e3       	ldi	r24, 0x30	; 48
 742:	90 e0       	ldi	r25, 0x00	; 0
 744:	0e 94 1f 05 	call	0xa3e	; 0xa3e <fputc>
 748:	9a 94       	dec	r9
 74a:	f7 cf       	rjmp	.-18     	; 0x73a <__stack+0x23b>
 74c:	8a 94       	dec	r8
 74e:	f3 01       	movw	r30, r6
 750:	e8 0d       	add	r30, r8
 752:	f1 1d       	adc	r31, r1
 754:	80 81       	ld	r24, Z
 756:	b6 01       	movw	r22, r12
 758:	90 e0       	ldi	r25, 0x00	; 0
 75a:	0e 94 1f 05 	call	0xa3e	; 0xa3e <fputc>
 75e:	81 10       	cpse	r8, r1
 760:	f5 cf       	rjmp	.-22     	; 0x74c <__stack+0x24d>
 762:	22 20       	and	r2, r2
 764:	09 f4       	brne	.+2      	; 0x768 <__stack+0x269>
 766:	42 ce       	rjmp	.-892    	; 0x3ec <vfprintf+0x24>
 768:	b6 01       	movw	r22, r12
 76a:	80 e2       	ldi	r24, 0x20	; 32
 76c:	90 e0       	ldi	r25, 0x00	; 0
 76e:	0e 94 1f 05 	call	0xa3e	; 0xa3e <fputc>
 772:	2a 94       	dec	r2
 774:	f6 cf       	rjmp	.-20     	; 0x762 <__stack+0x263>
 776:	f6 01       	movw	r30, r12
 778:	86 81       	ldd	r24, Z+6	; 0x06
 77a:	97 81       	ldd	r25, Z+7	; 0x07
 77c:	02 c0       	rjmp	.+4      	; 0x782 <__stack+0x283>
 77e:	8f ef       	ldi	r24, 0xFF	; 255
 780:	9f ef       	ldi	r25, 0xFF	; 255
 782:	2b 96       	adiw	r28, 0x0b	; 11
 784:	e2 e1       	ldi	r30, 0x12	; 18
 786:	0c 94 07 06 	jmp	0xc0e	; 0xc0e <__epilogue_restores__>

0000078a <calloc>:
 78a:	0f 93       	push	r16
 78c:	1f 93       	push	r17
 78e:	cf 93       	push	r28
 790:	df 93       	push	r29
 792:	86 9f       	mul	r24, r22
 794:	80 01       	movw	r16, r0
 796:	87 9f       	mul	r24, r23
 798:	10 0d       	add	r17, r0
 79a:	96 9f       	mul	r25, r22
 79c:	10 0d       	add	r17, r0
 79e:	11 24       	eor	r1, r1
 7a0:	c8 01       	movw	r24, r16
 7a2:	0e 94 e1 03 	call	0x7c2	; 0x7c2 <malloc>
 7a6:	ec 01       	movw	r28, r24
 7a8:	00 97       	sbiw	r24, 0x00	; 0
 7aa:	29 f0       	breq	.+10     	; 0x7b6 <calloc+0x2c>
 7ac:	a8 01       	movw	r20, r16
 7ae:	60 e0       	ldi	r22, 0x00	; 0
 7b0:	70 e0       	ldi	r23, 0x00	; 0
 7b2:	0e 94 0d 05 	call	0xa1a	; 0xa1a <memset>
 7b6:	ce 01       	movw	r24, r28
 7b8:	df 91       	pop	r29
 7ba:	cf 91       	pop	r28
 7bc:	1f 91       	pop	r17
 7be:	0f 91       	pop	r16
 7c0:	08 95       	ret

000007c2 <malloc>:
 7c2:	0f 93       	push	r16
 7c4:	1f 93       	push	r17
 7c6:	cf 93       	push	r28
 7c8:	df 93       	push	r29
 7ca:	82 30       	cpi	r24, 0x02	; 2
 7cc:	91 05       	cpc	r25, r1
 7ce:	10 f4       	brcc	.+4      	; 0x7d4 <malloc+0x12>
 7d0:	82 e0       	ldi	r24, 0x02	; 2
 7d2:	90 e0       	ldi	r25, 0x00	; 0
 7d4:	e0 91 f8 01 	lds	r30, 0x01F8	; 0x8001f8 <__flp>
 7d8:	f0 91 f9 01 	lds	r31, 0x01F9	; 0x8001f9 <__flp+0x1>
 7dc:	20 e0       	ldi	r18, 0x00	; 0
 7de:	30 e0       	ldi	r19, 0x00	; 0
 7e0:	a0 e0       	ldi	r26, 0x00	; 0
 7e2:	b0 e0       	ldi	r27, 0x00	; 0
 7e4:	30 97       	sbiw	r30, 0x00	; 0
 7e6:	19 f1       	breq	.+70     	; 0x82e <malloc+0x6c>
 7e8:	40 81       	ld	r20, Z
 7ea:	51 81       	ldd	r21, Z+1	; 0x01
 7ec:	02 81       	ldd	r16, Z+2	; 0x02
 7ee:	13 81       	ldd	r17, Z+3	; 0x03
 7f0:	48 17       	cp	r20, r24
 7f2:	59 07       	cpc	r21, r25
 7f4:	c8 f0       	brcs	.+50     	; 0x828 <malloc+0x66>
 7f6:	84 17       	cp	r24, r20
 7f8:	95 07       	cpc	r25, r21
 7fa:	69 f4       	brne	.+26     	; 0x816 <malloc+0x54>
 7fc:	10 97       	sbiw	r26, 0x00	; 0
 7fe:	31 f0       	breq	.+12     	; 0x80c <malloc+0x4a>
 800:	12 96       	adiw	r26, 0x02	; 2
 802:	0c 93       	st	X, r16
 804:	12 97       	sbiw	r26, 0x02	; 2
 806:	13 96       	adiw	r26, 0x03	; 3
 808:	1c 93       	st	X, r17
 80a:	27 c0       	rjmp	.+78     	; 0x85a <malloc+0x98>
 80c:	00 93 f8 01 	sts	0x01F8, r16	; 0x8001f8 <__flp>
 810:	10 93 f9 01 	sts	0x01F9, r17	; 0x8001f9 <__flp+0x1>
 814:	22 c0       	rjmp	.+68     	; 0x85a <malloc+0x98>
 816:	21 15       	cp	r18, r1
 818:	31 05       	cpc	r19, r1
 81a:	19 f0       	breq	.+6      	; 0x822 <malloc+0x60>
 81c:	42 17       	cp	r20, r18
 81e:	53 07       	cpc	r21, r19
 820:	18 f4       	brcc	.+6      	; 0x828 <malloc+0x66>
 822:	9a 01       	movw	r18, r20
 824:	bd 01       	movw	r22, r26
 826:	ef 01       	movw	r28, r30
 828:	df 01       	movw	r26, r30
 82a:	f8 01       	movw	r30, r16
 82c:	db cf       	rjmp	.-74     	; 0x7e4 <malloc+0x22>
 82e:	21 15       	cp	r18, r1
 830:	31 05       	cpc	r19, r1
 832:	f9 f0       	breq	.+62     	; 0x872 <malloc+0xb0>
 834:	28 1b       	sub	r18, r24
 836:	39 0b       	sbc	r19, r25
 838:	24 30       	cpi	r18, 0x04	; 4
 83a:	31 05       	cpc	r19, r1
 83c:	80 f4       	brcc	.+32     	; 0x85e <malloc+0x9c>
 83e:	8a 81       	ldd	r24, Y+2	; 0x02
 840:	9b 81       	ldd	r25, Y+3	; 0x03
 842:	61 15       	cp	r22, r1
 844:	71 05       	cpc	r23, r1
 846:	21 f0       	breq	.+8      	; 0x850 <malloc+0x8e>
 848:	fb 01       	movw	r30, r22
 84a:	93 83       	std	Z+3, r25	; 0x03
 84c:	82 83       	std	Z+2, r24	; 0x02
 84e:	04 c0       	rjmp	.+8      	; 0x858 <malloc+0x96>
 850:	90 93 f9 01 	sts	0x01F9, r25	; 0x8001f9 <__flp+0x1>
 854:	80 93 f8 01 	sts	0x01F8, r24	; 0x8001f8 <__flp>
 858:	fe 01       	movw	r30, r28
 85a:	32 96       	adiw	r30, 0x02	; 2
 85c:	44 c0       	rjmp	.+136    	; 0x8e6 <malloc+0x124>
 85e:	fe 01       	movw	r30, r28
 860:	e2 0f       	add	r30, r18
 862:	f3 1f       	adc	r31, r19
 864:	81 93       	st	Z+, r24
 866:	91 93       	st	Z+, r25
 868:	22 50       	subi	r18, 0x02	; 2
 86a:	31 09       	sbc	r19, r1
 86c:	39 83       	std	Y+1, r19	; 0x01
 86e:	28 83       	st	Y, r18
 870:	3a c0       	rjmp	.+116    	; 0x8e6 <malloc+0x124>
 872:	20 91 f6 01 	lds	r18, 0x01F6	; 0x8001f6 <__brkval>
 876:	30 91 f7 01 	lds	r19, 0x01F7	; 0x8001f7 <__brkval+0x1>
 87a:	23 2b       	or	r18, r19
 87c:	41 f4       	brne	.+16     	; 0x88e <malloc+0xcc>
 87e:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__malloc_heap_start>
 882:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__malloc_heap_start+0x1>
 886:	30 93 f7 01 	sts	0x01F7, r19	; 0x8001f7 <__brkval+0x1>
 88a:	20 93 f6 01 	sts	0x01F6, r18	; 0x8001f6 <__brkval>
 88e:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <__malloc_heap_end>
 892:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <__malloc_heap_end+0x1>
 896:	21 15       	cp	r18, r1
 898:	31 05       	cpc	r19, r1
 89a:	41 f4       	brne	.+16     	; 0x8ac <malloc+0xea>
 89c:	2d b7       	in	r18, 0x3d	; 61
 89e:	3e b7       	in	r19, 0x3e	; 62
 8a0:	40 91 08 01 	lds	r20, 0x0108	; 0x800108 <__malloc_margin>
 8a4:	50 91 09 01 	lds	r21, 0x0109	; 0x800109 <__malloc_margin+0x1>
 8a8:	24 1b       	sub	r18, r20
 8aa:	35 0b       	sbc	r19, r21
 8ac:	e0 91 f6 01 	lds	r30, 0x01F6	; 0x8001f6 <__brkval>
 8b0:	f0 91 f7 01 	lds	r31, 0x01F7	; 0x8001f7 <__brkval+0x1>
 8b4:	e2 17       	cp	r30, r18
 8b6:	f3 07       	cpc	r31, r19
 8b8:	a0 f4       	brcc	.+40     	; 0x8e2 <malloc+0x120>
 8ba:	2e 1b       	sub	r18, r30
 8bc:	3f 0b       	sbc	r19, r31
 8be:	28 17       	cp	r18, r24
 8c0:	39 07       	cpc	r19, r25
 8c2:	78 f0       	brcs	.+30     	; 0x8e2 <malloc+0x120>
 8c4:	ac 01       	movw	r20, r24
 8c6:	4e 5f       	subi	r20, 0xFE	; 254
 8c8:	5f 4f       	sbci	r21, 0xFF	; 255
 8ca:	24 17       	cp	r18, r20
 8cc:	35 07       	cpc	r19, r21
 8ce:	48 f0       	brcs	.+18     	; 0x8e2 <malloc+0x120>
 8d0:	4e 0f       	add	r20, r30
 8d2:	5f 1f       	adc	r21, r31
 8d4:	50 93 f7 01 	sts	0x01F7, r21	; 0x8001f7 <__brkval+0x1>
 8d8:	40 93 f6 01 	sts	0x01F6, r20	; 0x8001f6 <__brkval>
 8dc:	81 93       	st	Z+, r24
 8de:	91 93       	st	Z+, r25
 8e0:	02 c0       	rjmp	.+4      	; 0x8e6 <malloc+0x124>
 8e2:	e0 e0       	ldi	r30, 0x00	; 0
 8e4:	f0 e0       	ldi	r31, 0x00	; 0
 8e6:	cf 01       	movw	r24, r30
 8e8:	df 91       	pop	r29
 8ea:	cf 91       	pop	r28
 8ec:	1f 91       	pop	r17
 8ee:	0f 91       	pop	r16
 8f0:	08 95       	ret

000008f2 <free>:
 8f2:	cf 93       	push	r28
 8f4:	df 93       	push	r29
 8f6:	00 97       	sbiw	r24, 0x00	; 0
 8f8:	09 f4       	brne	.+2      	; 0x8fc <free+0xa>
 8fa:	81 c0       	rjmp	.+258    	; 0x9fe <free+0x10c>
 8fc:	fc 01       	movw	r30, r24
 8fe:	32 97       	sbiw	r30, 0x02	; 2
 900:	13 82       	std	Z+3, r1	; 0x03
 902:	12 82       	std	Z+2, r1	; 0x02
 904:	a0 91 f8 01 	lds	r26, 0x01F8	; 0x8001f8 <__flp>
 908:	b0 91 f9 01 	lds	r27, 0x01F9	; 0x8001f9 <__flp+0x1>
 90c:	10 97       	sbiw	r26, 0x00	; 0
 90e:	81 f4       	brne	.+32     	; 0x930 <free+0x3e>
 910:	20 81       	ld	r18, Z
 912:	31 81       	ldd	r19, Z+1	; 0x01
 914:	82 0f       	add	r24, r18
 916:	93 1f       	adc	r25, r19
 918:	20 91 f6 01 	lds	r18, 0x01F6	; 0x8001f6 <__brkval>
 91c:	30 91 f7 01 	lds	r19, 0x01F7	; 0x8001f7 <__brkval+0x1>
 920:	28 17       	cp	r18, r24
 922:	39 07       	cpc	r19, r25
 924:	51 f5       	brne	.+84     	; 0x97a <free+0x88>
 926:	f0 93 f7 01 	sts	0x01F7, r31	; 0x8001f7 <__brkval+0x1>
 92a:	e0 93 f6 01 	sts	0x01F6, r30	; 0x8001f6 <__brkval>
 92e:	67 c0       	rjmp	.+206    	; 0x9fe <free+0x10c>
 930:	ed 01       	movw	r28, r26
 932:	20 e0       	ldi	r18, 0x00	; 0
 934:	30 e0       	ldi	r19, 0x00	; 0
 936:	ce 17       	cp	r28, r30
 938:	df 07       	cpc	r29, r31
 93a:	40 f4       	brcc	.+16     	; 0x94c <free+0x5a>
 93c:	4a 81       	ldd	r20, Y+2	; 0x02
 93e:	5b 81       	ldd	r21, Y+3	; 0x03
 940:	9e 01       	movw	r18, r28
 942:	41 15       	cp	r20, r1
 944:	51 05       	cpc	r21, r1
 946:	f1 f0       	breq	.+60     	; 0x984 <free+0x92>
 948:	ea 01       	movw	r28, r20
 94a:	f5 cf       	rjmp	.-22     	; 0x936 <free+0x44>
 94c:	d3 83       	std	Z+3, r29	; 0x03
 94e:	c2 83       	std	Z+2, r28	; 0x02
 950:	40 81       	ld	r20, Z
 952:	51 81       	ldd	r21, Z+1	; 0x01
 954:	84 0f       	add	r24, r20
 956:	95 1f       	adc	r25, r21
 958:	c8 17       	cp	r28, r24
 95a:	d9 07       	cpc	r29, r25
 95c:	59 f4       	brne	.+22     	; 0x974 <free+0x82>
 95e:	88 81       	ld	r24, Y
 960:	99 81       	ldd	r25, Y+1	; 0x01
 962:	84 0f       	add	r24, r20
 964:	95 1f       	adc	r25, r21
 966:	02 96       	adiw	r24, 0x02	; 2
 968:	91 83       	std	Z+1, r25	; 0x01
 96a:	80 83       	st	Z, r24
 96c:	8a 81       	ldd	r24, Y+2	; 0x02
 96e:	9b 81       	ldd	r25, Y+3	; 0x03
 970:	93 83       	std	Z+3, r25	; 0x03
 972:	82 83       	std	Z+2, r24	; 0x02
 974:	21 15       	cp	r18, r1
 976:	31 05       	cpc	r19, r1
 978:	29 f4       	brne	.+10     	; 0x984 <free+0x92>
 97a:	f0 93 f9 01 	sts	0x01F9, r31	; 0x8001f9 <__flp+0x1>
 97e:	e0 93 f8 01 	sts	0x01F8, r30	; 0x8001f8 <__flp>
 982:	3d c0       	rjmp	.+122    	; 0x9fe <free+0x10c>
 984:	e9 01       	movw	r28, r18
 986:	fb 83       	std	Y+3, r31	; 0x03
 988:	ea 83       	std	Y+2, r30	; 0x02
 98a:	49 91       	ld	r20, Y+
 98c:	59 91       	ld	r21, Y+
 98e:	c4 0f       	add	r28, r20
 990:	d5 1f       	adc	r29, r21
 992:	ec 17       	cp	r30, r28
 994:	fd 07       	cpc	r31, r29
 996:	61 f4       	brne	.+24     	; 0x9b0 <free+0xbe>
 998:	80 81       	ld	r24, Z
 99a:	91 81       	ldd	r25, Z+1	; 0x01
 99c:	84 0f       	add	r24, r20
 99e:	95 1f       	adc	r25, r21
 9a0:	02 96       	adiw	r24, 0x02	; 2
 9a2:	e9 01       	movw	r28, r18
 9a4:	99 83       	std	Y+1, r25	; 0x01
 9a6:	88 83       	st	Y, r24
 9a8:	82 81       	ldd	r24, Z+2	; 0x02
 9aa:	93 81       	ldd	r25, Z+3	; 0x03
 9ac:	9b 83       	std	Y+3, r25	; 0x03
 9ae:	8a 83       	std	Y+2, r24	; 0x02
 9b0:	e0 e0       	ldi	r30, 0x00	; 0
 9b2:	f0 e0       	ldi	r31, 0x00	; 0
 9b4:	12 96       	adiw	r26, 0x02	; 2
 9b6:	8d 91       	ld	r24, X+
 9b8:	9c 91       	ld	r25, X
 9ba:	13 97       	sbiw	r26, 0x03	; 3
 9bc:	00 97       	sbiw	r24, 0x00	; 0
 9be:	19 f0       	breq	.+6      	; 0x9c6 <free+0xd4>
 9c0:	fd 01       	movw	r30, r26
 9c2:	dc 01       	movw	r26, r24
 9c4:	f7 cf       	rjmp	.-18     	; 0x9b4 <free+0xc2>
 9c6:	8d 91       	ld	r24, X+
 9c8:	9c 91       	ld	r25, X
 9ca:	11 97       	sbiw	r26, 0x01	; 1
 9cc:	9d 01       	movw	r18, r26
 9ce:	2e 5f       	subi	r18, 0xFE	; 254
 9d0:	3f 4f       	sbci	r19, 0xFF	; 255
 9d2:	82 0f       	add	r24, r18
 9d4:	93 1f       	adc	r25, r19
 9d6:	20 91 f6 01 	lds	r18, 0x01F6	; 0x8001f6 <__brkval>
 9da:	30 91 f7 01 	lds	r19, 0x01F7	; 0x8001f7 <__brkval+0x1>
 9de:	28 17       	cp	r18, r24
 9e0:	39 07       	cpc	r19, r25
 9e2:	69 f4       	brne	.+26     	; 0x9fe <free+0x10c>
 9e4:	30 97       	sbiw	r30, 0x00	; 0
 9e6:	29 f4       	brne	.+10     	; 0x9f2 <free+0x100>
 9e8:	10 92 f9 01 	sts	0x01F9, r1	; 0x8001f9 <__flp+0x1>
 9ec:	10 92 f8 01 	sts	0x01F8, r1	; 0x8001f8 <__flp>
 9f0:	02 c0       	rjmp	.+4      	; 0x9f6 <free+0x104>
 9f2:	13 82       	std	Z+3, r1	; 0x03
 9f4:	12 82       	std	Z+2, r1	; 0x02
 9f6:	b0 93 f7 01 	sts	0x01F7, r27	; 0x8001f7 <__brkval+0x1>
 9fa:	a0 93 f6 01 	sts	0x01F6, r26	; 0x8001f6 <__brkval>
 9fe:	df 91       	pop	r29
 a00:	cf 91       	pop	r28
 a02:	08 95       	ret

00000a04 <strnlen_P>:
 a04:	fc 01       	movw	r30, r24
 a06:	05 90       	lpm	r0, Z+
 a08:	61 50       	subi	r22, 0x01	; 1
 a0a:	70 40       	sbci	r23, 0x00	; 0
 a0c:	01 10       	cpse	r0, r1
 a0e:	d8 f7       	brcc	.-10     	; 0xa06 <strnlen_P+0x2>
 a10:	80 95       	com	r24
 a12:	90 95       	com	r25
 a14:	8e 0f       	add	r24, r30
 a16:	9f 1f       	adc	r25, r31
 a18:	08 95       	ret

00000a1a <memset>:
 a1a:	dc 01       	movw	r26, r24
 a1c:	01 c0       	rjmp	.+2      	; 0xa20 <memset+0x6>
 a1e:	6d 93       	st	X+, r22
 a20:	41 50       	subi	r20, 0x01	; 1
 a22:	50 40       	sbci	r21, 0x00	; 0
 a24:	e0 f7       	brcc	.-8      	; 0xa1e <memset+0x4>
 a26:	08 95       	ret

00000a28 <strnlen>:
 a28:	fc 01       	movw	r30, r24
 a2a:	61 50       	subi	r22, 0x01	; 1
 a2c:	70 40       	sbci	r23, 0x00	; 0
 a2e:	01 90       	ld	r0, Z+
 a30:	01 10       	cpse	r0, r1
 a32:	d8 f7       	brcc	.-10     	; 0xa2a <strnlen+0x2>
 a34:	80 95       	com	r24
 a36:	90 95       	com	r25
 a38:	8e 0f       	add	r24, r30
 a3a:	9f 1f       	adc	r25, r31
 a3c:	08 95       	ret

00000a3e <fputc>:
 a3e:	0f 93       	push	r16
 a40:	1f 93       	push	r17
 a42:	cf 93       	push	r28
 a44:	df 93       	push	r29
 a46:	fb 01       	movw	r30, r22
 a48:	23 81       	ldd	r18, Z+3	; 0x03
 a4a:	21 fd       	sbrc	r18, 1
 a4c:	03 c0       	rjmp	.+6      	; 0xa54 <fputc+0x16>
 a4e:	8f ef       	ldi	r24, 0xFF	; 255
 a50:	9f ef       	ldi	r25, 0xFF	; 255
 a52:	2c c0       	rjmp	.+88     	; 0xaac <fputc+0x6e>
 a54:	22 ff       	sbrs	r18, 2
 a56:	16 c0       	rjmp	.+44     	; 0xa84 <fputc+0x46>
 a58:	46 81       	ldd	r20, Z+6	; 0x06
 a5a:	57 81       	ldd	r21, Z+7	; 0x07
 a5c:	24 81       	ldd	r18, Z+4	; 0x04
 a5e:	35 81       	ldd	r19, Z+5	; 0x05
 a60:	42 17       	cp	r20, r18
 a62:	53 07       	cpc	r21, r19
 a64:	44 f4       	brge	.+16     	; 0xa76 <fputc+0x38>
 a66:	a0 81       	ld	r26, Z
 a68:	b1 81       	ldd	r27, Z+1	; 0x01
 a6a:	9d 01       	movw	r18, r26
 a6c:	2f 5f       	subi	r18, 0xFF	; 255
 a6e:	3f 4f       	sbci	r19, 0xFF	; 255
 a70:	31 83       	std	Z+1, r19	; 0x01
 a72:	20 83       	st	Z, r18
 a74:	8c 93       	st	X, r24
 a76:	26 81       	ldd	r18, Z+6	; 0x06
 a78:	37 81       	ldd	r19, Z+7	; 0x07
 a7a:	2f 5f       	subi	r18, 0xFF	; 255
 a7c:	3f 4f       	sbci	r19, 0xFF	; 255
 a7e:	37 83       	std	Z+7, r19	; 0x07
 a80:	26 83       	std	Z+6, r18	; 0x06
 a82:	14 c0       	rjmp	.+40     	; 0xaac <fputc+0x6e>
 a84:	8b 01       	movw	r16, r22
 a86:	ec 01       	movw	r28, r24
 a88:	fb 01       	movw	r30, r22
 a8a:	00 84       	ldd	r0, Z+8	; 0x08
 a8c:	f1 85       	ldd	r31, Z+9	; 0x09
 a8e:	e0 2d       	mov	r30, r0
 a90:	09 95       	icall
 a92:	89 2b       	or	r24, r25
 a94:	e1 f6       	brne	.-72     	; 0xa4e <fputc+0x10>
 a96:	d8 01       	movw	r26, r16
 a98:	16 96       	adiw	r26, 0x06	; 6
 a9a:	8d 91       	ld	r24, X+
 a9c:	9c 91       	ld	r25, X
 a9e:	17 97       	sbiw	r26, 0x07	; 7
 aa0:	01 96       	adiw	r24, 0x01	; 1
 aa2:	17 96       	adiw	r26, 0x07	; 7
 aa4:	9c 93       	st	X, r25
 aa6:	8e 93       	st	-X, r24
 aa8:	16 97       	sbiw	r26, 0x06	; 6
 aaa:	ce 01       	movw	r24, r28
 aac:	df 91       	pop	r29
 aae:	cf 91       	pop	r28
 ab0:	1f 91       	pop	r17
 ab2:	0f 91       	pop	r16
 ab4:	08 95       	ret

00000ab6 <__ultoa_invert>:
 ab6:	fa 01       	movw	r30, r20
 ab8:	aa 27       	eor	r26, r26
 aba:	28 30       	cpi	r18, 0x08	; 8
 abc:	51 f1       	breq	.+84     	; 0xb12 <__ultoa_invert+0x5c>
 abe:	20 31       	cpi	r18, 0x10	; 16
 ac0:	81 f1       	breq	.+96     	; 0xb22 <__ultoa_invert+0x6c>
 ac2:	e8 94       	clt
 ac4:	6f 93       	push	r22
 ac6:	6e 7f       	andi	r22, 0xFE	; 254
 ac8:	6e 5f       	subi	r22, 0xFE	; 254
 aca:	7f 4f       	sbci	r23, 0xFF	; 255
 acc:	8f 4f       	sbci	r24, 0xFF	; 255
 ace:	9f 4f       	sbci	r25, 0xFF	; 255
 ad0:	af 4f       	sbci	r26, 0xFF	; 255
 ad2:	b1 e0       	ldi	r27, 0x01	; 1
 ad4:	3e d0       	rcall	.+124    	; 0xb52 <__ultoa_invert+0x9c>
 ad6:	b4 e0       	ldi	r27, 0x04	; 4
 ad8:	3c d0       	rcall	.+120    	; 0xb52 <__ultoa_invert+0x9c>
 ada:	67 0f       	add	r22, r23
 adc:	78 1f       	adc	r23, r24
 ade:	89 1f       	adc	r24, r25
 ae0:	9a 1f       	adc	r25, r26
 ae2:	a1 1d       	adc	r26, r1
 ae4:	68 0f       	add	r22, r24
 ae6:	79 1f       	adc	r23, r25
 ae8:	8a 1f       	adc	r24, r26
 aea:	91 1d       	adc	r25, r1
 aec:	a1 1d       	adc	r26, r1
 aee:	6a 0f       	add	r22, r26
 af0:	71 1d       	adc	r23, r1
 af2:	81 1d       	adc	r24, r1
 af4:	91 1d       	adc	r25, r1
 af6:	a1 1d       	adc	r26, r1
 af8:	20 d0       	rcall	.+64     	; 0xb3a <__ultoa_invert+0x84>
 afa:	09 f4       	brne	.+2      	; 0xafe <__ultoa_invert+0x48>
 afc:	68 94       	set
 afe:	3f 91       	pop	r19
 b00:	2a e0       	ldi	r18, 0x0A	; 10
 b02:	26 9f       	mul	r18, r22
 b04:	11 24       	eor	r1, r1
 b06:	30 19       	sub	r19, r0
 b08:	30 5d       	subi	r19, 0xD0	; 208
 b0a:	31 93       	st	Z+, r19
 b0c:	de f6       	brtc	.-74     	; 0xac4 <__ultoa_invert+0xe>
 b0e:	cf 01       	movw	r24, r30
 b10:	08 95       	ret
 b12:	46 2f       	mov	r20, r22
 b14:	47 70       	andi	r20, 0x07	; 7
 b16:	40 5d       	subi	r20, 0xD0	; 208
 b18:	41 93       	st	Z+, r20
 b1a:	b3 e0       	ldi	r27, 0x03	; 3
 b1c:	0f d0       	rcall	.+30     	; 0xb3c <__ultoa_invert+0x86>
 b1e:	c9 f7       	brne	.-14     	; 0xb12 <__ultoa_invert+0x5c>
 b20:	f6 cf       	rjmp	.-20     	; 0xb0e <__ultoa_invert+0x58>
 b22:	46 2f       	mov	r20, r22
 b24:	4f 70       	andi	r20, 0x0F	; 15
 b26:	40 5d       	subi	r20, 0xD0	; 208
 b28:	4a 33       	cpi	r20, 0x3A	; 58
 b2a:	18 f0       	brcs	.+6      	; 0xb32 <__ultoa_invert+0x7c>
 b2c:	49 5d       	subi	r20, 0xD9	; 217
 b2e:	31 fd       	sbrc	r19, 1
 b30:	40 52       	subi	r20, 0x20	; 32
 b32:	41 93       	st	Z+, r20
 b34:	02 d0       	rcall	.+4      	; 0xb3a <__ultoa_invert+0x84>
 b36:	a9 f7       	brne	.-22     	; 0xb22 <__ultoa_invert+0x6c>
 b38:	ea cf       	rjmp	.-44     	; 0xb0e <__ultoa_invert+0x58>
 b3a:	b4 e0       	ldi	r27, 0x04	; 4
 b3c:	a6 95       	lsr	r26
 b3e:	97 95       	ror	r25
 b40:	87 95       	ror	r24
 b42:	77 95       	ror	r23
 b44:	67 95       	ror	r22
 b46:	ba 95       	dec	r27
 b48:	c9 f7       	brne	.-14     	; 0xb3c <__ultoa_invert+0x86>
 b4a:	00 97       	sbiw	r24, 0x00	; 0
 b4c:	61 05       	cpc	r22, r1
 b4e:	71 05       	cpc	r23, r1
 b50:	08 95       	ret
 b52:	9b 01       	movw	r18, r22
 b54:	ac 01       	movw	r20, r24
 b56:	0a 2e       	mov	r0, r26
 b58:	06 94       	lsr	r0
 b5a:	57 95       	ror	r21
 b5c:	47 95       	ror	r20
 b5e:	37 95       	ror	r19
 b60:	27 95       	ror	r18
 b62:	ba 95       	dec	r27
 b64:	c9 f7       	brne	.-14     	; 0xb58 <__ultoa_invert+0xa2>
 b66:	62 0f       	add	r22, r18
 b68:	73 1f       	adc	r23, r19
 b6a:	84 1f       	adc	r24, r20
 b6c:	95 1f       	adc	r25, r21
 b6e:	a0 1d       	adc	r26, r0
 b70:	08 95       	ret

00000b72 <__divmodsi4>:
 b72:	05 2e       	mov	r0, r21
 b74:	97 fb       	bst	r25, 7
 b76:	1e f4       	brtc	.+6      	; 0xb7e <__divmodsi4+0xc>
 b78:	00 94       	com	r0
 b7a:	0e 94 d0 05 	call	0xba0	; 0xba0 <__negsi2>
 b7e:	57 fd       	sbrc	r21, 7
 b80:	07 d0       	rcall	.+14     	; 0xb90 <__divmodsi4_neg2>
 b82:	0e 94 22 06 	call	0xc44	; 0xc44 <__udivmodsi4>
 b86:	07 fc       	sbrc	r0, 7
 b88:	03 d0       	rcall	.+6      	; 0xb90 <__divmodsi4_neg2>
 b8a:	4e f4       	brtc	.+18     	; 0xb9e <__divmodsi4_exit>
 b8c:	0c 94 d0 05 	jmp	0xba0	; 0xba0 <__negsi2>

00000b90 <__divmodsi4_neg2>:
 b90:	50 95       	com	r21
 b92:	40 95       	com	r20
 b94:	30 95       	com	r19
 b96:	21 95       	neg	r18
 b98:	3f 4f       	sbci	r19, 0xFF	; 255
 b9a:	4f 4f       	sbci	r20, 0xFF	; 255
 b9c:	5f 4f       	sbci	r21, 0xFF	; 255

00000b9e <__divmodsi4_exit>:
 b9e:	08 95       	ret

00000ba0 <__negsi2>:
 ba0:	90 95       	com	r25
 ba2:	80 95       	com	r24
 ba4:	70 95       	com	r23
 ba6:	61 95       	neg	r22
 ba8:	7f 4f       	sbci	r23, 0xFF	; 255
 baa:	8f 4f       	sbci	r24, 0xFF	; 255
 bac:	9f 4f       	sbci	r25, 0xFF	; 255
 bae:	08 95       	ret

00000bb0 <__muluhisi3>:
 bb0:	0e 94 44 06 	call	0xc88	; 0xc88 <__umulhisi3>
 bb4:	a5 9f       	mul	r26, r21
 bb6:	90 0d       	add	r25, r0
 bb8:	b4 9f       	mul	r27, r20
 bba:	90 0d       	add	r25, r0
 bbc:	a4 9f       	mul	r26, r20
 bbe:	80 0d       	add	r24, r0
 bc0:	91 1d       	adc	r25, r1
 bc2:	11 24       	eor	r1, r1
 bc4:	08 95       	ret

00000bc6 <__mulshisi3>:
 bc6:	b7 ff       	sbrs	r27, 7
 bc8:	0c 94 d8 05 	jmp	0xbb0	; 0xbb0 <__muluhisi3>

00000bcc <__mulohisi3>:
 bcc:	0e 94 d8 05 	call	0xbb0	; 0xbb0 <__muluhisi3>
 bd0:	82 1b       	sub	r24, r18
 bd2:	93 0b       	sbc	r25, r19
 bd4:	08 95       	ret

00000bd6 <__prologue_saves__>:
 bd6:	2f 92       	push	r2
 bd8:	3f 92       	push	r3
 bda:	4f 92       	push	r4
 bdc:	5f 92       	push	r5
 bde:	6f 92       	push	r6
 be0:	7f 92       	push	r7
 be2:	8f 92       	push	r8
 be4:	9f 92       	push	r9
 be6:	af 92       	push	r10
 be8:	bf 92       	push	r11
 bea:	cf 92       	push	r12
 bec:	df 92       	push	r13
 bee:	ef 92       	push	r14
 bf0:	ff 92       	push	r15
 bf2:	0f 93       	push	r16
 bf4:	1f 93       	push	r17
 bf6:	cf 93       	push	r28
 bf8:	df 93       	push	r29
 bfa:	cd b7       	in	r28, 0x3d	; 61
 bfc:	de b7       	in	r29, 0x3e	; 62
 bfe:	ca 1b       	sub	r28, r26
 c00:	db 0b       	sbc	r29, r27
 c02:	0f b6       	in	r0, 0x3f	; 63
 c04:	f8 94       	cli
 c06:	de bf       	out	0x3e, r29	; 62
 c08:	0f be       	out	0x3f, r0	; 63
 c0a:	cd bf       	out	0x3d, r28	; 61
 c0c:	09 94       	ijmp

00000c0e <__epilogue_restores__>:
 c0e:	2a 88       	ldd	r2, Y+18	; 0x12
 c10:	39 88       	ldd	r3, Y+17	; 0x11
 c12:	48 88       	ldd	r4, Y+16	; 0x10
 c14:	5f 84       	ldd	r5, Y+15	; 0x0f
 c16:	6e 84       	ldd	r6, Y+14	; 0x0e
 c18:	7d 84       	ldd	r7, Y+13	; 0x0d
 c1a:	8c 84       	ldd	r8, Y+12	; 0x0c
 c1c:	9b 84       	ldd	r9, Y+11	; 0x0b
 c1e:	aa 84       	ldd	r10, Y+10	; 0x0a
 c20:	b9 84       	ldd	r11, Y+9	; 0x09
 c22:	c8 84       	ldd	r12, Y+8	; 0x08
 c24:	df 80       	ldd	r13, Y+7	; 0x07
 c26:	ee 80       	ldd	r14, Y+6	; 0x06
 c28:	fd 80       	ldd	r15, Y+5	; 0x05
 c2a:	0c 81       	ldd	r16, Y+4	; 0x04
 c2c:	1b 81       	ldd	r17, Y+3	; 0x03
 c2e:	aa 81       	ldd	r26, Y+2	; 0x02
 c30:	b9 81       	ldd	r27, Y+1	; 0x01
 c32:	ce 0f       	add	r28, r30
 c34:	d1 1d       	adc	r29, r1
 c36:	0f b6       	in	r0, 0x3f	; 63
 c38:	f8 94       	cli
 c3a:	de bf       	out	0x3e, r29	; 62
 c3c:	0f be       	out	0x3f, r0	; 63
 c3e:	cd bf       	out	0x3d, r28	; 61
 c40:	ed 01       	movw	r28, r26
 c42:	08 95       	ret

00000c44 <__udivmodsi4>:
 c44:	a1 e2       	ldi	r26, 0x21	; 33
 c46:	1a 2e       	mov	r1, r26
 c48:	aa 1b       	sub	r26, r26
 c4a:	bb 1b       	sub	r27, r27
 c4c:	fd 01       	movw	r30, r26
 c4e:	0d c0       	rjmp	.+26     	; 0xc6a <__udivmodsi4_ep>

00000c50 <__udivmodsi4_loop>:
 c50:	aa 1f       	adc	r26, r26
 c52:	bb 1f       	adc	r27, r27
 c54:	ee 1f       	adc	r30, r30
 c56:	ff 1f       	adc	r31, r31
 c58:	a2 17       	cp	r26, r18
 c5a:	b3 07       	cpc	r27, r19
 c5c:	e4 07       	cpc	r30, r20
 c5e:	f5 07       	cpc	r31, r21
 c60:	20 f0       	brcs	.+8      	; 0xc6a <__udivmodsi4_ep>
 c62:	a2 1b       	sub	r26, r18
 c64:	b3 0b       	sbc	r27, r19
 c66:	e4 0b       	sbc	r30, r20
 c68:	f5 0b       	sbc	r31, r21

00000c6a <__udivmodsi4_ep>:
 c6a:	66 1f       	adc	r22, r22
 c6c:	77 1f       	adc	r23, r23
 c6e:	88 1f       	adc	r24, r24
 c70:	99 1f       	adc	r25, r25
 c72:	1a 94       	dec	r1
 c74:	69 f7       	brne	.-38     	; 0xc50 <__udivmodsi4_loop>
 c76:	60 95       	com	r22
 c78:	70 95       	com	r23
 c7a:	80 95       	com	r24
 c7c:	90 95       	com	r25
 c7e:	9b 01       	movw	r18, r22
 c80:	ac 01       	movw	r20, r24
 c82:	bd 01       	movw	r22, r26
 c84:	cf 01       	movw	r24, r30
 c86:	08 95       	ret

00000c88 <__umulhisi3>:
 c88:	a2 9f       	mul	r26, r18
 c8a:	b0 01       	movw	r22, r0
 c8c:	b3 9f       	mul	r27, r19
 c8e:	c0 01       	movw	r24, r0
 c90:	a3 9f       	mul	r26, r19
 c92:	70 0d       	add	r23, r0
 c94:	81 1d       	adc	r24, r1
 c96:	11 24       	eor	r1, r1
 c98:	91 1d       	adc	r25, r1
 c9a:	b2 9f       	mul	r27, r18
 c9c:	70 0d       	add	r23, r0
 c9e:	81 1d       	adc	r24, r1
 ca0:	11 24       	eor	r1, r1
 ca2:	91 1d       	adc	r25, r1
 ca4:	08 95       	ret

00000ca6 <_exit>:
 ca6:	f8 94       	cli

00000ca8 <__stop_program>:
 ca8:	ff cf       	rjmp	.-2      	; 0xca8 <__stop_program>
