
ttk_4155_byggern_lab.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000008a  00800100  00000c76  00000d0a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c76  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  0080018a  0080018a  00000d94  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000d94  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000df0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e0  00000000  00000000  00000e2c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ed8  00000000  00000000  00000f0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000aa6  00000000  00000000  00001de4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000960  00000000  00000000  0000288a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002a4  00000000  00000000  000031ec  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000524  00000000  00000000  00003490  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000691  00000000  00000000  000039b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c0  00000000  00000000  00004045  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 e4 00 	jmp	0x1c8	; 0x1c8 <__vector_1>
   8:	0c 94 0a 01 	jmp	0x214	; 0x214 <__vector_2>
   c:	0c 94 30 01 	jmp	0x260	; 0x260 <__vector_3>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e6 e7       	ldi	r30, 0x76	; 118
  84:	fc e0       	ldi	r31, 0x0C	; 12
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	aa 38       	cpi	r26, 0x8A	; 138
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	aa e8       	ldi	r26, 0x8A	; 138
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a4 39       	cpi	r26, 0x94	; 148
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 b9 00 	call	0x172	; 0x172 <main>
  a6:	0c 94 39 06 	jmp	0xc72	; 0xc72 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <adc_drv_init>:
{
	// to do:
	// Change TCCR1A and TCCR1B as a hex value 
	// Change DDRD register to a more correct 8 bit value
	// Change wiring from USB thingy
	set_bit(DDRD, ADC_EXT_CLK_SGN_PIN);
  ae:	81 b3       	in	r24, 0x11	; 17
  b0:	80 62       	ori	r24, 0x20	; 32
  b2:	81 bb       	out	0x11, r24	; 17
	
	TCCR1B |= (1 << WGM13); // Choosing fast PWM
  b4:	8e b5       	in	r24, 0x2e	; 46
  b6:	80 61       	ori	r24, 0x10	; 16
  b8:	8e bd       	out	0x2e, r24	; 46
	TCCR1B |= (1 << WGM12);	// Choosing fast PWM
  ba:	8e b5       	in	r24, 0x2e	; 46
  bc:	88 60       	ori	r24, 0x08	; 8
  be:	8e bd       	out	0x2e, r24	; 46
	TCCR1A |= ( 1 << WGM11 ); //Choosing fast PWM
  c0:	8f b5       	in	r24, 0x2f	; 47
  c2:	82 60       	ori	r24, 0x02	; 2
  c4:	8f bd       	out	0x2f, r24	; 47
	TCCR1A |= ( 1 << WGM10); // Choosing fast PWM
  c6:	8f b5       	in	r24, 0x2f	; 47
  c8:	81 60       	ori	r24, 0x01	; 1
  ca:	8f bd       	out	0x2f, r24	; 47
	
	TCCR1A &= ~( 1 << COM1A1); // Toggle Compare
  cc:	8f b5       	in	r24, 0x2f	; 47
  ce:	8f 77       	andi	r24, 0x7F	; 127
  d0:	8f bd       	out	0x2f, r24	; 47
	TCCR1A |= ( 1 << COM1A0); // Toggle Compare
  d2:	8f b5       	in	r24, 0x2f	; 47
  d4:	80 64       	ori	r24, 0x40	; 64
  d6:	8f bd       	out	0x2f, r24	; 47
	TCCR1A &= ~( 1 << COM1B1); // Set on Compare
  d8:	8f b5       	in	r24, 0x2f	; 47
  da:	8f 7d       	andi	r24, 0xDF	; 223
  dc:	8f bd       	out	0x2f, r24	; 47
	TCCR1A &= ~( 1 << COM1B0); // Set on Compare
  de:	8f b5       	in	r24, 0x2f	; 47
  e0:	8f 7e       	andi	r24, 0xEF	; 239
  e2:	8f bd       	out	0x2f, r24	; 47
	
		
	TCCR1B &= ~( 1 << CS12); // Prescaler
  e4:	8e b5       	in	r24, 0x2e	; 46
  e6:	8b 7f       	andi	r24, 0xFB	; 251
  e8:	8e bd       	out	0x2e, r24	; 46
	TCCR1B &= ~( 1 << CS11); // Prescaler
  ea:	8e b5       	in	r24, 0x2e	; 46
  ec:	8d 7f       	andi	r24, 0xFD	; 253
  ee:	8e bd       	out	0x2e, r24	; 46
	TCCR1B |= ( 1 << CS10); // Prescaler
  f0:	8e b5       	in	r24, 0x2e	; 46
  f2:	81 60       	ori	r24, 0x01	; 1
  f4:	8e bd       	out	0x2e, r24	; 46
	
	
	TCCR1A &= ~(1 << FOC1A);
  f6:	8f b5       	in	r24, 0x2f	; 47
  f8:	87 7f       	andi	r24, 0xF7	; 247
  fa:	8f bd       	out	0x2f, r24	; 47
	TCCR1A &= ~(1 << FOC1B);
  fc:	8f b5       	in	r24, 0x2f	; 47
  fe:	8b 7f       	andi	r24, 0xFB	; 251
 100:	8f bd       	out	0x2f, r24	; 47
 102:	08 95       	ret

00000104 <adc_read>:
		
}

uint8_t adc_read(uint8_t channel)
{
 104:	0f 93       	push	r16
 106:	1f 93       	push	r17
 108:	cf 93       	push	r28
 10a:	df 93       	push	r29
 10c:	00 d0       	rcall	.+0      	; 0x10e <adc_read+0xa>
 10e:	00 d0       	rcall	.+0      	; 0x110 <adc_read+0xc>
 110:	cd b7       	in	r28, 0x3d	; 61
 112:	de b7       	in	r29, 0x3e	; 62
	volatile uint8_t adc_value[4] = { 0 };
 114:	19 82       	std	Y+1, r1	; 0x01
 116:	1a 82       	std	Y+2, r1	; 0x02
 118:	1b 82       	std	Y+3, r1	; 0x03
 11a:	1c 82       	std	Y+4, r1	; 0x04
	
	
	volatile char *adc = (char *) 0x1400;
	
	//Writing to ADC register to start getting adc value
	adc[0] = 0;
 11c:	10 92 00 14 	sts	0x1400, r1	; 0x801400 <__bss_end+0x126c>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 120:	81 e3       	ldi	r24, 0x31	; 49
 122:	8a 95       	dec	r24
 124:	f1 f7       	brne	.-4      	; 0x122 <adc_read+0x1e>
 126:	00 00       	nop
	//control the delay!!
	_delay_us(30);
	
	//adc_ch1 = adc[0];
	
	for (uint16_t i = 0; i < 4; i++) {
 128:	00 e0       	ldi	r16, 0x00	; 0
 12a:	10 e0       	ldi	r17, 0x00	; 0
 12c:	15 c0       	rjmp	.+42     	; 0x158 <adc_read+0x54>
		printf("%d: %d\r\n", i, adc[i]);
 12e:	f8 01       	movw	r30, r16
 130:	fc 5e       	subi	r31, 0xEC	; 236
 132:	80 81       	ld	r24, Z
 134:	1f 92       	push	r1
 136:	8f 93       	push	r24
 138:	1f 93       	push	r17
 13a:	0f 93       	push	r16
 13c:	86 e0       	ldi	r24, 0x06	; 6
 13e:	91 e0       	ldi	r25, 0x01	; 1
 140:	9f 93       	push	r25
 142:	8f 93       	push	r24
 144:	0e 94 e7 01 	call	0x3ce	; 0x3ce <printf>
	//control the delay!!
	_delay_us(30);
	
	//adc_ch1 = adc[0];
	
	for (uint16_t i = 0; i < 4; i++) {
 148:	0f 5f       	subi	r16, 0xFF	; 255
 14a:	1f 4f       	sbci	r17, 0xFF	; 255
 14c:	0f 90       	pop	r0
 14e:	0f 90       	pop	r0
 150:	0f 90       	pop	r0
 152:	0f 90       	pop	r0
 154:	0f 90       	pop	r0
 156:	0f 90       	pop	r0
 158:	04 30       	cpi	r16, 0x04	; 4
 15a:	11 05       	cpc	r17, r1
 15c:	40 f3       	brcs	.-48     	; 0x12e <adc_read+0x2a>
	
	
	
	//return adc_value[channel];
	return 0;
 15e:	80 e0       	ldi	r24, 0x00	; 0
 160:	0f 90       	pop	r0
 162:	0f 90       	pop	r0
 164:	0f 90       	pop	r0
 166:	0f 90       	pop	r0
 168:	df 91       	pop	r29
 16a:	cf 91       	pop	r28
 16c:	1f 91       	pop	r17
 16e:	0f 91       	pop	r16
 170:	08 95       	ret

00000172 <main>:
#include "ADC/adc_drv.h"
#include "MISC/ext_button_drv.h"


int main(void){
	USART_drv_init(MYUBRR);
 172:	8f e1       	ldi	r24, 0x1F	; 31
 174:	90 e0       	ldi	r25, 0x00	; 0
 176:	0e 94 8f 01 	call	0x31e	; 0x31e <USART_drv_init>
	SRAM_init();
 17a:	0e 94 80 01 	call	0x300	; 0x300 <SRAM_init>
	adc_drv_init();
 17e:	0e 94 57 00 	call	0xae	; 0xae <adc_drv_init>
	ext_button_drv_init();
 182:	0e 94 56 01 	call	0x2ac	; 0x2ac <ext_button_drv_init>

    while (1){
		
		printf("----------------------------------\r\n");
 186:	8f e0       	ldi	r24, 0x0F	; 15
 188:	91 e0       	ldi	r25, 0x01	; 1
 18a:	0e 94 fd 01 	call	0x3fa	; 0x3fa <puts>
		printf("Left slider: %d \r\n", adc_read(0));
 18e:	80 e0       	ldi	r24, 0x00	; 0
 190:	0e 94 82 00 	call	0x104	; 0x104 <adc_read>
 194:	1f 92       	push	r1
 196:	8f 93       	push	r24
 198:	83 e3       	ldi	r24, 0x33	; 51
 19a:	91 e0       	ldi	r25, 0x01	; 1
 19c:	9f 93       	push	r25
 19e:	8f 93       	push	r24
 1a0:	0e 94 e7 01 	call	0x3ce	; 0x3ce <printf>
		//printf("Right slider: %d\r\n",adc_read(1));
		//printf("Joystick y: %d\r\n",adc_read(2));
		//printf("Joystick x: %d\r\n",adc_read(3));//something wrong with this
		printf("----------------------------------\r\n");
 1a4:	8f e0       	ldi	r24, 0x0F	; 15
 1a6:	91 e0       	ldi	r25, 0x01	; 1
 1a8:	0e 94 fd 01 	call	0x3fa	; 0x3fa <puts>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1ac:	2f ef       	ldi	r18, 0xFF	; 255
 1ae:	8f ef       	ldi	r24, 0xFF	; 255
 1b0:	9d e1       	ldi	r25, 0x1D	; 29
 1b2:	21 50       	subi	r18, 0x01	; 1
 1b4:	80 40       	sbci	r24, 0x00	; 0
 1b6:	90 40       	sbci	r25, 0x00	; 0
 1b8:	e1 f7       	brne	.-8      	; 0x1b2 <main+0x40>
 1ba:	00 c0       	rjmp	.+0      	; 0x1bc <main+0x4a>
 1bc:	00 00       	nop
 1be:	0f 90       	pop	r0
 1c0:	0f 90       	pop	r0
 1c2:	0f 90       	pop	r0
 1c4:	0f 90       	pop	r0
 1c6:	df cf       	rjmp	.-66     	; 0x186 <main+0x14>

000001c8 <__vector_1>:
#define RIGHT_BUTTON_PIN PD3
#define JOYSTICK_BUTTON_PIN PE0


ISR (INT0_vect)
{
 1c8:	1f 92       	push	r1
 1ca:	0f 92       	push	r0
 1cc:	0f b6       	in	r0, 0x3f	; 63
 1ce:	0f 92       	push	r0
 1d0:	11 24       	eor	r1, r1
 1d2:	2f 93       	push	r18
 1d4:	3f 93       	push	r19
 1d6:	4f 93       	push	r20
 1d8:	5f 93       	push	r21
 1da:	6f 93       	push	r22
 1dc:	7f 93       	push	r23
 1de:	8f 93       	push	r24
 1e0:	9f 93       	push	r25
 1e2:	af 93       	push	r26
 1e4:	bf 93       	push	r27
 1e6:	ef 93       	push	r30
 1e8:	ff 93       	push	r31
	printf("Left button pressed\r\n");
 1ea:	86 e4       	ldi	r24, 0x46	; 70
 1ec:	91 e0       	ldi	r25, 0x01	; 1
 1ee:	0e 94 fd 01 	call	0x3fa	; 0x3fa <puts>


}
 1f2:	ff 91       	pop	r31
 1f4:	ef 91       	pop	r30
 1f6:	bf 91       	pop	r27
 1f8:	af 91       	pop	r26
 1fa:	9f 91       	pop	r25
 1fc:	8f 91       	pop	r24
 1fe:	7f 91       	pop	r23
 200:	6f 91       	pop	r22
 202:	5f 91       	pop	r21
 204:	4f 91       	pop	r20
 206:	3f 91       	pop	r19
 208:	2f 91       	pop	r18
 20a:	0f 90       	pop	r0
 20c:	0f be       	out	0x3f, r0	; 63
 20e:	0f 90       	pop	r0
 210:	1f 90       	pop	r1
 212:	18 95       	reti

00000214 <__vector_2>:

ISR (INT1_vect)
{
 214:	1f 92       	push	r1
 216:	0f 92       	push	r0
 218:	0f b6       	in	r0, 0x3f	; 63
 21a:	0f 92       	push	r0
 21c:	11 24       	eor	r1, r1
 21e:	2f 93       	push	r18
 220:	3f 93       	push	r19
 222:	4f 93       	push	r20
 224:	5f 93       	push	r21
 226:	6f 93       	push	r22
 228:	7f 93       	push	r23
 22a:	8f 93       	push	r24
 22c:	9f 93       	push	r25
 22e:	af 93       	push	r26
 230:	bf 93       	push	r27
 232:	ef 93       	push	r30
 234:	ff 93       	push	r31
	printf("Right button pressed\r\n");
 236:	8b e5       	ldi	r24, 0x5B	; 91
 238:	91 e0       	ldi	r25, 0x01	; 1
 23a:	0e 94 fd 01 	call	0x3fa	; 0x3fa <puts>
}
 23e:	ff 91       	pop	r31
 240:	ef 91       	pop	r30
 242:	bf 91       	pop	r27
 244:	af 91       	pop	r26
 246:	9f 91       	pop	r25
 248:	8f 91       	pop	r24
 24a:	7f 91       	pop	r23
 24c:	6f 91       	pop	r22
 24e:	5f 91       	pop	r21
 250:	4f 91       	pop	r20
 252:	3f 91       	pop	r19
 254:	2f 91       	pop	r18
 256:	0f 90       	pop	r0
 258:	0f be       	out	0x3f, r0	; 63
 25a:	0f 90       	pop	r0
 25c:	1f 90       	pop	r1
 25e:	18 95       	reti

00000260 <__vector_3>:

ISR (INT2_vect)
{
 260:	1f 92       	push	r1
 262:	0f 92       	push	r0
 264:	0f b6       	in	r0, 0x3f	; 63
 266:	0f 92       	push	r0
 268:	11 24       	eor	r1, r1
 26a:	2f 93       	push	r18
 26c:	3f 93       	push	r19
 26e:	4f 93       	push	r20
 270:	5f 93       	push	r21
 272:	6f 93       	push	r22
 274:	7f 93       	push	r23
 276:	8f 93       	push	r24
 278:	9f 93       	push	r25
 27a:	af 93       	push	r26
 27c:	bf 93       	push	r27
 27e:	ef 93       	push	r30
 280:	ff 93       	push	r31
	printf("Joystick button pressed\r\n");
 282:	81 e7       	ldi	r24, 0x71	; 113
 284:	91 e0       	ldi	r25, 0x01	; 1
 286:	0e 94 fd 01 	call	0x3fa	; 0x3fa <puts>


}
 28a:	ff 91       	pop	r31
 28c:	ef 91       	pop	r30
 28e:	bf 91       	pop	r27
 290:	af 91       	pop	r26
 292:	9f 91       	pop	r25
 294:	8f 91       	pop	r24
 296:	7f 91       	pop	r23
 298:	6f 91       	pop	r22
 29a:	5f 91       	pop	r21
 29c:	4f 91       	pop	r20
 29e:	3f 91       	pop	r19
 2a0:	2f 91       	pop	r18
 2a2:	0f 90       	pop	r0
 2a4:	0f be       	out	0x3f, r0	; 63
 2a6:	0f 90       	pop	r0
 2a8:	1f 90       	pop	r1
 2aa:	18 95       	reti

000002ac <ext_button_drv_init>:
void ext_button_drv_init(void)
{
	/*
	to do:			
	*/
	clear_bit(DDRD, LEFT_BUTTON_PIN);
 2ac:	81 b3       	in	r24, 0x11	; 17
 2ae:	8b 7f       	andi	r24, 0xFB	; 251
 2b0:	81 bb       	out	0x11, r24	; 17
	clear_bit(DDRD, RIGHT_BUTTON_PIN);
 2b2:	81 b3       	in	r24, 0x11	; 17
 2b4:	87 7f       	andi	r24, 0xF7	; 247
 2b6:	81 bb       	out	0x11, r24	; 17
	clear_bit(DDRE, JOYSTICK_BUTTON_PIN);
 2b8:	86 b1       	in	r24, 0x06	; 6
 2ba:	8e 7f       	andi	r24, 0xFE	; 254
 2bc:	86 b9       	out	0x06, r24	; 6
	//Disables global interrupts
	cli();
 2be:	f8 94       	cli
	// Enables interrupt on pin INT0, INT1
	set_bit(GICR, LEFT_BUTTON_ISR_REGISTER);
 2c0:	8b b7       	in	r24, 0x3b	; 59
 2c2:	80 64       	ori	r24, 0x40	; 64
 2c4:	8b bf       	out	0x3b, r24	; 59
	set_bit(GICR, RIGHT_BUTTON_ISR_REGISTER);
 2c6:	8b b7       	in	r24, 0x3b	; 59
 2c8:	80 68       	ori	r24, 0x80	; 128
 2ca:	8b bf       	out	0x3b, r24	; 59
	// Configures interrupt rising edge on INT2, INT1 & INT0
	set_bit(MCUCR, ISC11);
 2cc:	85 b7       	in	r24, 0x35	; 53
 2ce:	88 60       	ori	r24, 0x08	; 8
 2d0:	85 bf       	out	0x35, r24	; 53
	set_bit(MCUCR, ISC10);
 2d2:	85 b7       	in	r24, 0x35	; 53
 2d4:	84 60       	ori	r24, 0x04	; 4
 2d6:	85 bf       	out	0x35, r24	; 53
	set_bit(MCUCR, ISC01);
 2d8:	85 b7       	in	r24, 0x35	; 53
 2da:	82 60       	ori	r24, 0x02	; 2
 2dc:	85 bf       	out	0x35, r24	; 53
	set_bit(MCUCR, ISC00);
 2de:	85 b7       	in	r24, 0x35	; 53
 2e0:	81 60       	ori	r24, 0x01	; 1
 2e2:	85 bf       	out	0x35, r24	; 53
	//set_bit(EMCUCR, ISC2);
	//Configuring and enabling Joystick interrupt pin INT2
	clear_bit(GICR, JOYSTICK_BUTTON_PIN);
 2e4:	8b b7       	in	r24, 0x3b	; 59
 2e6:	8e 7f       	andi	r24, 0xFE	; 254
 2e8:	8b bf       	out	0x3b, r24	; 59
	clear_bit(EMCUCR, ISC2);
 2ea:	86 b7       	in	r24, 0x36	; 54
 2ec:	8e 7f       	andi	r24, 0xFE	; 254
 2ee:	86 bf       	out	0x36, r24	; 54
	set_bit(GIFR, INTF2);
 2f0:	8a b7       	in	r24, 0x3a	; 58
 2f2:	80 62       	ori	r24, 0x20	; 32
 2f4:	8a bf       	out	0x3a, r24	; 58
	set_bit(GICR, JOYSTICK_BUTTON_ISR_REGISTER);
 2f6:	8b b7       	in	r24, 0x3b	; 59
 2f8:	80 62       	ori	r24, 0x20	; 32
 2fa:	8b bf       	out	0x3b, r24	; 59
	
	// Enables global interrupts
	sei();	
 2fc:	78 94       	sei
 2fe:	08 95       	ret

00000300 <SRAM_init>:
#include "SRAMdrv.h"

void SRAM_init(){
	MCUCR |= (1 << SRE); //External memory enable
 300:	85 b7       	in	r24, 0x35	; 53
 302:	80 68       	ori	r24, 0x80	; 128
 304:	85 bf       	out	0x35, r24	; 53
	SFIOR |= (1 << XMM2); // Masking PC7-PC4 for JTAG interface
 306:	80 b7       	in	r24, 0x30	; 48
 308:	80 62       	ori	r24, 0x20	; 32
 30a:	80 bf       	out	0x30, r24	; 48
 30c:	08 95       	ret

0000030e <USART_Transmit>:
}

void USART_Transmit(unsigned char data)
{
	/* Wait for empty transmit buffer */
	while ( !( UCSR0A & (1<<UDRE0)) )
 30e:	5d 9b       	sbis	0x0b, 5	; 11
 310:	fe cf       	rjmp	.-4      	; 0x30e <USART_Transmit>
		;
	/* Put data into buffer, sends the data */
	UDR0 = data;
 312:	8c b9       	out	0x0c, r24	; 12
 314:	08 95       	ret

00000316 <USART_Receive>:
}

unsigned char USART_Receive(void)
{
	/* Wait for data to be received */
	while ( !(UCSR0A & (1<<RXC0)) )
 316:	5f 9b       	sbis	0x0b, 7	; 11
 318:	fe cf       	rjmp	.-4      	; 0x316 <USART_Receive>
		;
	/* Get and return received data from buffer */
	return UDR0;
 31a:	8c b1       	in	r24, 0x0c	; 12

}
 31c:	08 95       	ret

0000031e <USART_drv_init>:

/* Hentet fra ATmega162 datablad */
void USART_drv_init(unsigned int ubrr)
{
	/* Set baud rate */
	UBRR0H = (unsigned char)(ubrr>>8);
 31e:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char)ubrr;
 320:	89 b9       	out	0x09, r24	; 9
	/* Enable receiver and transmitter */
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
 322:	88 e1       	ldi	r24, 0x18	; 24
 324:	8a b9       	out	0x0a, r24	; 10
	/* Set frame format: 8data, 2stop bit, no parity */
	UCSR0C = (1<<URSEL0)|(1<<USBS0)|(3<<UCSZ00);
 326:	8e e8       	ldi	r24, 0x8E	; 142
 328:	80 bd       	out	0x20, r24	; 32
	fdevopen(USART_Transmit, USART_Receive);
 32a:	6b e8       	ldi	r22, 0x8B	; 139
 32c:	71 e0       	ldi	r23, 0x01	; 1
 32e:	87 e8       	ldi	r24, 0x87	; 135
 330:	91 e0       	ldi	r25, 0x01	; 1
 332:	0e 94 9c 01 	call	0x338	; 0x338 <fdevopen>
 336:	08 95       	ret

00000338 <fdevopen>:
 338:	0f 93       	push	r16
 33a:	1f 93       	push	r17
 33c:	cf 93       	push	r28
 33e:	df 93       	push	r29
 340:	00 97       	sbiw	r24, 0x00	; 0
 342:	31 f4       	brne	.+12     	; 0x350 <fdevopen+0x18>
 344:	61 15       	cp	r22, r1
 346:	71 05       	cpc	r23, r1
 348:	19 f4       	brne	.+6      	; 0x350 <fdevopen+0x18>
 34a:	80 e0       	ldi	r24, 0x00	; 0
 34c:	90 e0       	ldi	r25, 0x00	; 0
 34e:	3a c0       	rjmp	.+116    	; 0x3c4 <fdevopen+0x8c>
 350:	8b 01       	movw	r16, r22
 352:	ec 01       	movw	r28, r24
 354:	6e e0       	ldi	r22, 0x0E	; 14
 356:	70 e0       	ldi	r23, 0x00	; 0
 358:	81 e0       	ldi	r24, 0x01	; 1
 35a:	90 e0       	ldi	r25, 0x00	; 0
 35c:	0e 94 0e 04 	call	0x81c	; 0x81c <calloc>
 360:	fc 01       	movw	r30, r24
 362:	89 2b       	or	r24, r25
 364:	91 f3       	breq	.-28     	; 0x34a <fdevopen+0x12>
 366:	80 e8       	ldi	r24, 0x80	; 128
 368:	83 83       	std	Z+3, r24	; 0x03
 36a:	01 15       	cp	r16, r1
 36c:	11 05       	cpc	r17, r1
 36e:	71 f0       	breq	.+28     	; 0x38c <fdevopen+0x54>
 370:	13 87       	std	Z+11, r17	; 0x0b
 372:	02 87       	std	Z+10, r16	; 0x0a
 374:	81 e8       	ldi	r24, 0x81	; 129
 376:	83 83       	std	Z+3, r24	; 0x03
 378:	80 91 8a 01 	lds	r24, 0x018A	; 0x80018a <__data_end>
 37c:	90 91 8b 01 	lds	r25, 0x018B	; 0x80018b <__data_end+0x1>
 380:	89 2b       	or	r24, r25
 382:	21 f4       	brne	.+8      	; 0x38c <fdevopen+0x54>
 384:	f0 93 8b 01 	sts	0x018B, r31	; 0x80018b <__data_end+0x1>
 388:	e0 93 8a 01 	sts	0x018A, r30	; 0x80018a <__data_end>
 38c:	20 97       	sbiw	r28, 0x00	; 0
 38e:	c9 f0       	breq	.+50     	; 0x3c2 <fdevopen+0x8a>
 390:	d1 87       	std	Z+9, r29	; 0x09
 392:	c0 87       	std	Z+8, r28	; 0x08
 394:	83 81       	ldd	r24, Z+3	; 0x03
 396:	82 60       	ori	r24, 0x02	; 2
 398:	83 83       	std	Z+3, r24	; 0x03
 39a:	80 91 8c 01 	lds	r24, 0x018C	; 0x80018c <__data_end+0x2>
 39e:	90 91 8d 01 	lds	r25, 0x018D	; 0x80018d <__data_end+0x3>
 3a2:	89 2b       	or	r24, r25
 3a4:	71 f4       	brne	.+28     	; 0x3c2 <fdevopen+0x8a>
 3a6:	f0 93 8d 01 	sts	0x018D, r31	; 0x80018d <__data_end+0x3>
 3aa:	e0 93 8c 01 	sts	0x018C, r30	; 0x80018c <__data_end+0x2>
 3ae:	80 91 8e 01 	lds	r24, 0x018E	; 0x80018e <__data_end+0x4>
 3b2:	90 91 8f 01 	lds	r25, 0x018F	; 0x80018f <__data_end+0x5>
 3b6:	89 2b       	or	r24, r25
 3b8:	21 f4       	brne	.+8      	; 0x3c2 <fdevopen+0x8a>
 3ba:	f0 93 8f 01 	sts	0x018F, r31	; 0x80018f <__data_end+0x5>
 3be:	e0 93 8e 01 	sts	0x018E, r30	; 0x80018e <__data_end+0x4>
 3c2:	cf 01       	movw	r24, r30
 3c4:	df 91       	pop	r29
 3c6:	cf 91       	pop	r28
 3c8:	1f 91       	pop	r17
 3ca:	0f 91       	pop	r16
 3cc:	08 95       	ret

000003ce <printf>:
 3ce:	a0 e0       	ldi	r26, 0x00	; 0
 3d0:	b0 e0       	ldi	r27, 0x00	; 0
 3d2:	ed ee       	ldi	r30, 0xED	; 237
 3d4:	f1 e0       	ldi	r31, 0x01	; 1
 3d6:	0c 94 12 06 	jmp	0xc24	; 0xc24 <__prologue_saves__+0x20>
 3da:	ae 01       	movw	r20, r28
 3dc:	4b 5f       	subi	r20, 0xFB	; 251
 3de:	5f 4f       	sbci	r21, 0xFF	; 255
 3e0:	fa 01       	movw	r30, r20
 3e2:	61 91       	ld	r22, Z+
 3e4:	71 91       	ld	r23, Z+
 3e6:	af 01       	movw	r20, r30
 3e8:	80 91 8c 01 	lds	r24, 0x018C	; 0x80018c <__data_end+0x2>
 3ec:	90 91 8d 01 	lds	r25, 0x018D	; 0x80018d <__data_end+0x3>
 3f0:	0e 94 2d 02 	call	0x45a	; 0x45a <vfprintf>
 3f4:	e2 e0       	ldi	r30, 0x02	; 2
 3f6:	0c 94 2e 06 	jmp	0xc5c	; 0xc5c <__epilogue_restores__+0x20>

000003fa <puts>:
 3fa:	0f 93       	push	r16
 3fc:	1f 93       	push	r17
 3fe:	cf 93       	push	r28
 400:	df 93       	push	r29
 402:	e0 91 8c 01 	lds	r30, 0x018C	; 0x80018c <__data_end+0x2>
 406:	f0 91 8d 01 	lds	r31, 0x018D	; 0x80018d <__data_end+0x3>
 40a:	23 81       	ldd	r18, Z+3	; 0x03
 40c:	21 ff       	sbrs	r18, 1
 40e:	1b c0       	rjmp	.+54     	; 0x446 <__DATA_REGION_LENGTH__+0x46>
 410:	8c 01       	movw	r16, r24
 412:	d0 e0       	ldi	r29, 0x00	; 0
 414:	c0 e0       	ldi	r28, 0x00	; 0
 416:	f8 01       	movw	r30, r16
 418:	81 91       	ld	r24, Z+
 41a:	8f 01       	movw	r16, r30
 41c:	60 91 8c 01 	lds	r22, 0x018C	; 0x80018c <__data_end+0x2>
 420:	70 91 8d 01 	lds	r23, 0x018D	; 0x80018d <__data_end+0x3>
 424:	db 01       	movw	r26, r22
 426:	18 96       	adiw	r26, 0x08	; 8
 428:	ed 91       	ld	r30, X+
 42a:	fc 91       	ld	r31, X
 42c:	19 97       	sbiw	r26, 0x09	; 9
 42e:	88 23       	and	r24, r24
 430:	31 f0       	breq	.+12     	; 0x43e <__DATA_REGION_LENGTH__+0x3e>
 432:	09 95       	icall
 434:	89 2b       	or	r24, r25
 436:	79 f3       	breq	.-34     	; 0x416 <__DATA_REGION_LENGTH__+0x16>
 438:	df ef       	ldi	r29, 0xFF	; 255
 43a:	cf ef       	ldi	r28, 0xFF	; 255
 43c:	ec cf       	rjmp	.-40     	; 0x416 <__DATA_REGION_LENGTH__+0x16>
 43e:	8a e0       	ldi	r24, 0x0A	; 10
 440:	09 95       	icall
 442:	89 2b       	or	r24, r25
 444:	19 f0       	breq	.+6      	; 0x44c <__DATA_REGION_LENGTH__+0x4c>
 446:	8f ef       	ldi	r24, 0xFF	; 255
 448:	9f ef       	ldi	r25, 0xFF	; 255
 44a:	02 c0       	rjmp	.+4      	; 0x450 <__DATA_REGION_LENGTH__+0x50>
 44c:	8d 2f       	mov	r24, r29
 44e:	9c 2f       	mov	r25, r28
 450:	df 91       	pop	r29
 452:	cf 91       	pop	r28
 454:	1f 91       	pop	r17
 456:	0f 91       	pop	r16
 458:	08 95       	ret

0000045a <vfprintf>:
 45a:	ab e0       	ldi	r26, 0x0B	; 11
 45c:	b0 e0       	ldi	r27, 0x00	; 0
 45e:	e3 e3       	ldi	r30, 0x33	; 51
 460:	f2 e0       	ldi	r31, 0x02	; 2
 462:	0c 94 02 06 	jmp	0xc04	; 0xc04 <__prologue_saves__>
 466:	6c 01       	movw	r12, r24
 468:	7b 01       	movw	r14, r22
 46a:	8a 01       	movw	r16, r20
 46c:	fc 01       	movw	r30, r24
 46e:	17 82       	std	Z+7, r1	; 0x07
 470:	16 82       	std	Z+6, r1	; 0x06
 472:	83 81       	ldd	r24, Z+3	; 0x03
 474:	81 ff       	sbrs	r24, 1
 476:	cc c1       	rjmp	.+920    	; 0x810 <__stack+0x311>
 478:	ce 01       	movw	r24, r28
 47a:	01 96       	adiw	r24, 0x01	; 1
 47c:	3c 01       	movw	r6, r24
 47e:	f6 01       	movw	r30, r12
 480:	93 81       	ldd	r25, Z+3	; 0x03
 482:	f7 01       	movw	r30, r14
 484:	93 fd       	sbrc	r25, 3
 486:	85 91       	lpm	r24, Z+
 488:	93 ff       	sbrs	r25, 3
 48a:	81 91       	ld	r24, Z+
 48c:	7f 01       	movw	r14, r30
 48e:	88 23       	and	r24, r24
 490:	09 f4       	brne	.+2      	; 0x494 <vfprintf+0x3a>
 492:	ba c1       	rjmp	.+884    	; 0x808 <__stack+0x309>
 494:	85 32       	cpi	r24, 0x25	; 37
 496:	39 f4       	brne	.+14     	; 0x4a6 <vfprintf+0x4c>
 498:	93 fd       	sbrc	r25, 3
 49a:	85 91       	lpm	r24, Z+
 49c:	93 ff       	sbrs	r25, 3
 49e:	81 91       	ld	r24, Z+
 4a0:	7f 01       	movw	r14, r30
 4a2:	85 32       	cpi	r24, 0x25	; 37
 4a4:	29 f4       	brne	.+10     	; 0x4b0 <vfprintf+0x56>
 4a6:	b6 01       	movw	r22, r12
 4a8:	90 e0       	ldi	r25, 0x00	; 0
 4aa:	0e 94 68 05 	call	0xad0	; 0xad0 <fputc>
 4ae:	e7 cf       	rjmp	.-50     	; 0x47e <vfprintf+0x24>
 4b0:	91 2c       	mov	r9, r1
 4b2:	21 2c       	mov	r2, r1
 4b4:	31 2c       	mov	r3, r1
 4b6:	ff e1       	ldi	r31, 0x1F	; 31
 4b8:	f3 15       	cp	r31, r3
 4ba:	d8 f0       	brcs	.+54     	; 0x4f2 <vfprintf+0x98>
 4bc:	8b 32       	cpi	r24, 0x2B	; 43
 4be:	79 f0       	breq	.+30     	; 0x4de <vfprintf+0x84>
 4c0:	38 f4       	brcc	.+14     	; 0x4d0 <vfprintf+0x76>
 4c2:	80 32       	cpi	r24, 0x20	; 32
 4c4:	79 f0       	breq	.+30     	; 0x4e4 <vfprintf+0x8a>
 4c6:	83 32       	cpi	r24, 0x23	; 35
 4c8:	a1 f4       	brne	.+40     	; 0x4f2 <vfprintf+0x98>
 4ca:	23 2d       	mov	r18, r3
 4cc:	20 61       	ori	r18, 0x10	; 16
 4ce:	1d c0       	rjmp	.+58     	; 0x50a <__stack+0xb>
 4d0:	8d 32       	cpi	r24, 0x2D	; 45
 4d2:	61 f0       	breq	.+24     	; 0x4ec <vfprintf+0x92>
 4d4:	80 33       	cpi	r24, 0x30	; 48
 4d6:	69 f4       	brne	.+26     	; 0x4f2 <vfprintf+0x98>
 4d8:	23 2d       	mov	r18, r3
 4da:	21 60       	ori	r18, 0x01	; 1
 4dc:	16 c0       	rjmp	.+44     	; 0x50a <__stack+0xb>
 4de:	83 2d       	mov	r24, r3
 4e0:	82 60       	ori	r24, 0x02	; 2
 4e2:	38 2e       	mov	r3, r24
 4e4:	e3 2d       	mov	r30, r3
 4e6:	e4 60       	ori	r30, 0x04	; 4
 4e8:	3e 2e       	mov	r3, r30
 4ea:	2a c0       	rjmp	.+84     	; 0x540 <__stack+0x41>
 4ec:	f3 2d       	mov	r31, r3
 4ee:	f8 60       	ori	r31, 0x08	; 8
 4f0:	1d c0       	rjmp	.+58     	; 0x52c <__stack+0x2d>
 4f2:	37 fc       	sbrc	r3, 7
 4f4:	2d c0       	rjmp	.+90     	; 0x550 <__stack+0x51>
 4f6:	20 ed       	ldi	r18, 0xD0	; 208
 4f8:	28 0f       	add	r18, r24
 4fa:	2a 30       	cpi	r18, 0x0A	; 10
 4fc:	40 f0       	brcs	.+16     	; 0x50e <__stack+0xf>
 4fe:	8e 32       	cpi	r24, 0x2E	; 46
 500:	b9 f4       	brne	.+46     	; 0x530 <__stack+0x31>
 502:	36 fc       	sbrc	r3, 6
 504:	81 c1       	rjmp	.+770    	; 0x808 <__stack+0x309>
 506:	23 2d       	mov	r18, r3
 508:	20 64       	ori	r18, 0x40	; 64
 50a:	32 2e       	mov	r3, r18
 50c:	19 c0       	rjmp	.+50     	; 0x540 <__stack+0x41>
 50e:	36 fe       	sbrs	r3, 6
 510:	06 c0       	rjmp	.+12     	; 0x51e <__stack+0x1f>
 512:	8a e0       	ldi	r24, 0x0A	; 10
 514:	98 9e       	mul	r9, r24
 516:	20 0d       	add	r18, r0
 518:	11 24       	eor	r1, r1
 51a:	92 2e       	mov	r9, r18
 51c:	11 c0       	rjmp	.+34     	; 0x540 <__stack+0x41>
 51e:	ea e0       	ldi	r30, 0x0A	; 10
 520:	2e 9e       	mul	r2, r30
 522:	20 0d       	add	r18, r0
 524:	11 24       	eor	r1, r1
 526:	22 2e       	mov	r2, r18
 528:	f3 2d       	mov	r31, r3
 52a:	f0 62       	ori	r31, 0x20	; 32
 52c:	3f 2e       	mov	r3, r31
 52e:	08 c0       	rjmp	.+16     	; 0x540 <__stack+0x41>
 530:	8c 36       	cpi	r24, 0x6C	; 108
 532:	21 f4       	brne	.+8      	; 0x53c <__stack+0x3d>
 534:	83 2d       	mov	r24, r3
 536:	80 68       	ori	r24, 0x80	; 128
 538:	38 2e       	mov	r3, r24
 53a:	02 c0       	rjmp	.+4      	; 0x540 <__stack+0x41>
 53c:	88 36       	cpi	r24, 0x68	; 104
 53e:	41 f4       	brne	.+16     	; 0x550 <__stack+0x51>
 540:	f7 01       	movw	r30, r14
 542:	93 fd       	sbrc	r25, 3
 544:	85 91       	lpm	r24, Z+
 546:	93 ff       	sbrs	r25, 3
 548:	81 91       	ld	r24, Z+
 54a:	7f 01       	movw	r14, r30
 54c:	81 11       	cpse	r24, r1
 54e:	b3 cf       	rjmp	.-154    	; 0x4b6 <vfprintf+0x5c>
 550:	98 2f       	mov	r25, r24
 552:	9f 7d       	andi	r25, 0xDF	; 223
 554:	95 54       	subi	r25, 0x45	; 69
 556:	93 30       	cpi	r25, 0x03	; 3
 558:	28 f4       	brcc	.+10     	; 0x564 <__stack+0x65>
 55a:	0c 5f       	subi	r16, 0xFC	; 252
 55c:	1f 4f       	sbci	r17, 0xFF	; 255
 55e:	9f e3       	ldi	r25, 0x3F	; 63
 560:	99 83       	std	Y+1, r25	; 0x01
 562:	0d c0       	rjmp	.+26     	; 0x57e <__stack+0x7f>
 564:	83 36       	cpi	r24, 0x63	; 99
 566:	31 f0       	breq	.+12     	; 0x574 <__stack+0x75>
 568:	83 37       	cpi	r24, 0x73	; 115
 56a:	71 f0       	breq	.+28     	; 0x588 <__stack+0x89>
 56c:	83 35       	cpi	r24, 0x53	; 83
 56e:	09 f0       	breq	.+2      	; 0x572 <__stack+0x73>
 570:	59 c0       	rjmp	.+178    	; 0x624 <__stack+0x125>
 572:	21 c0       	rjmp	.+66     	; 0x5b6 <__stack+0xb7>
 574:	f8 01       	movw	r30, r16
 576:	80 81       	ld	r24, Z
 578:	89 83       	std	Y+1, r24	; 0x01
 57a:	0e 5f       	subi	r16, 0xFE	; 254
 57c:	1f 4f       	sbci	r17, 0xFF	; 255
 57e:	88 24       	eor	r8, r8
 580:	83 94       	inc	r8
 582:	91 2c       	mov	r9, r1
 584:	53 01       	movw	r10, r6
 586:	13 c0       	rjmp	.+38     	; 0x5ae <__stack+0xaf>
 588:	28 01       	movw	r4, r16
 58a:	f2 e0       	ldi	r31, 0x02	; 2
 58c:	4f 0e       	add	r4, r31
 58e:	51 1c       	adc	r5, r1
 590:	f8 01       	movw	r30, r16
 592:	a0 80       	ld	r10, Z
 594:	b1 80       	ldd	r11, Z+1	; 0x01
 596:	36 fe       	sbrs	r3, 6
 598:	03 c0       	rjmp	.+6      	; 0x5a0 <__stack+0xa1>
 59a:	69 2d       	mov	r22, r9
 59c:	70 e0       	ldi	r23, 0x00	; 0
 59e:	02 c0       	rjmp	.+4      	; 0x5a4 <__stack+0xa5>
 5a0:	6f ef       	ldi	r22, 0xFF	; 255
 5a2:	7f ef       	ldi	r23, 0xFF	; 255
 5a4:	c5 01       	movw	r24, r10
 5a6:	0e 94 5d 05 	call	0xaba	; 0xaba <strnlen>
 5aa:	4c 01       	movw	r8, r24
 5ac:	82 01       	movw	r16, r4
 5ae:	f3 2d       	mov	r31, r3
 5b0:	ff 77       	andi	r31, 0x7F	; 127
 5b2:	3f 2e       	mov	r3, r31
 5b4:	16 c0       	rjmp	.+44     	; 0x5e2 <__stack+0xe3>
 5b6:	28 01       	movw	r4, r16
 5b8:	22 e0       	ldi	r18, 0x02	; 2
 5ba:	42 0e       	add	r4, r18
 5bc:	51 1c       	adc	r5, r1
 5be:	f8 01       	movw	r30, r16
 5c0:	a0 80       	ld	r10, Z
 5c2:	b1 80       	ldd	r11, Z+1	; 0x01
 5c4:	36 fe       	sbrs	r3, 6
 5c6:	03 c0       	rjmp	.+6      	; 0x5ce <__stack+0xcf>
 5c8:	69 2d       	mov	r22, r9
 5ca:	70 e0       	ldi	r23, 0x00	; 0
 5cc:	02 c0       	rjmp	.+4      	; 0x5d2 <__stack+0xd3>
 5ce:	6f ef       	ldi	r22, 0xFF	; 255
 5d0:	7f ef       	ldi	r23, 0xFF	; 255
 5d2:	c5 01       	movw	r24, r10
 5d4:	0e 94 4b 05 	call	0xa96	; 0xa96 <strnlen_P>
 5d8:	4c 01       	movw	r8, r24
 5da:	f3 2d       	mov	r31, r3
 5dc:	f0 68       	ori	r31, 0x80	; 128
 5de:	3f 2e       	mov	r3, r31
 5e0:	82 01       	movw	r16, r4
 5e2:	33 fc       	sbrc	r3, 3
 5e4:	1b c0       	rjmp	.+54     	; 0x61c <__stack+0x11d>
 5e6:	82 2d       	mov	r24, r2
 5e8:	90 e0       	ldi	r25, 0x00	; 0
 5ea:	88 16       	cp	r8, r24
 5ec:	99 06       	cpc	r9, r25
 5ee:	b0 f4       	brcc	.+44     	; 0x61c <__stack+0x11d>
 5f0:	b6 01       	movw	r22, r12
 5f2:	80 e2       	ldi	r24, 0x20	; 32
 5f4:	90 e0       	ldi	r25, 0x00	; 0
 5f6:	0e 94 68 05 	call	0xad0	; 0xad0 <fputc>
 5fa:	2a 94       	dec	r2
 5fc:	f4 cf       	rjmp	.-24     	; 0x5e6 <__stack+0xe7>
 5fe:	f5 01       	movw	r30, r10
 600:	37 fc       	sbrc	r3, 7
 602:	85 91       	lpm	r24, Z+
 604:	37 fe       	sbrs	r3, 7
 606:	81 91       	ld	r24, Z+
 608:	5f 01       	movw	r10, r30
 60a:	b6 01       	movw	r22, r12
 60c:	90 e0       	ldi	r25, 0x00	; 0
 60e:	0e 94 68 05 	call	0xad0	; 0xad0 <fputc>
 612:	21 10       	cpse	r2, r1
 614:	2a 94       	dec	r2
 616:	21 e0       	ldi	r18, 0x01	; 1
 618:	82 1a       	sub	r8, r18
 61a:	91 08       	sbc	r9, r1
 61c:	81 14       	cp	r8, r1
 61e:	91 04       	cpc	r9, r1
 620:	71 f7       	brne	.-36     	; 0x5fe <__stack+0xff>
 622:	e8 c0       	rjmp	.+464    	; 0x7f4 <__stack+0x2f5>
 624:	84 36       	cpi	r24, 0x64	; 100
 626:	11 f0       	breq	.+4      	; 0x62c <__stack+0x12d>
 628:	89 36       	cpi	r24, 0x69	; 105
 62a:	41 f5       	brne	.+80     	; 0x67c <__stack+0x17d>
 62c:	f8 01       	movw	r30, r16
 62e:	37 fe       	sbrs	r3, 7
 630:	07 c0       	rjmp	.+14     	; 0x640 <__stack+0x141>
 632:	60 81       	ld	r22, Z
 634:	71 81       	ldd	r23, Z+1	; 0x01
 636:	82 81       	ldd	r24, Z+2	; 0x02
 638:	93 81       	ldd	r25, Z+3	; 0x03
 63a:	0c 5f       	subi	r16, 0xFC	; 252
 63c:	1f 4f       	sbci	r17, 0xFF	; 255
 63e:	08 c0       	rjmp	.+16     	; 0x650 <__stack+0x151>
 640:	60 81       	ld	r22, Z
 642:	71 81       	ldd	r23, Z+1	; 0x01
 644:	07 2e       	mov	r0, r23
 646:	00 0c       	add	r0, r0
 648:	88 0b       	sbc	r24, r24
 64a:	99 0b       	sbc	r25, r25
 64c:	0e 5f       	subi	r16, 0xFE	; 254
 64e:	1f 4f       	sbci	r17, 0xFF	; 255
 650:	f3 2d       	mov	r31, r3
 652:	ff 76       	andi	r31, 0x6F	; 111
 654:	3f 2e       	mov	r3, r31
 656:	97 ff       	sbrs	r25, 7
 658:	09 c0       	rjmp	.+18     	; 0x66c <__stack+0x16d>
 65a:	90 95       	com	r25
 65c:	80 95       	com	r24
 65e:	70 95       	com	r23
 660:	61 95       	neg	r22
 662:	7f 4f       	sbci	r23, 0xFF	; 255
 664:	8f 4f       	sbci	r24, 0xFF	; 255
 666:	9f 4f       	sbci	r25, 0xFF	; 255
 668:	f0 68       	ori	r31, 0x80	; 128
 66a:	3f 2e       	mov	r3, r31
 66c:	2a e0       	ldi	r18, 0x0A	; 10
 66e:	30 e0       	ldi	r19, 0x00	; 0
 670:	a3 01       	movw	r20, r6
 672:	0e 94 a4 05 	call	0xb48	; 0xb48 <__ultoa_invert>
 676:	88 2e       	mov	r8, r24
 678:	86 18       	sub	r8, r6
 67a:	45 c0       	rjmp	.+138    	; 0x706 <__stack+0x207>
 67c:	85 37       	cpi	r24, 0x75	; 117
 67e:	31 f4       	brne	.+12     	; 0x68c <__stack+0x18d>
 680:	23 2d       	mov	r18, r3
 682:	2f 7e       	andi	r18, 0xEF	; 239
 684:	b2 2e       	mov	r11, r18
 686:	2a e0       	ldi	r18, 0x0A	; 10
 688:	30 e0       	ldi	r19, 0x00	; 0
 68a:	25 c0       	rjmp	.+74     	; 0x6d6 <__stack+0x1d7>
 68c:	93 2d       	mov	r25, r3
 68e:	99 7f       	andi	r25, 0xF9	; 249
 690:	b9 2e       	mov	r11, r25
 692:	8f 36       	cpi	r24, 0x6F	; 111
 694:	c1 f0       	breq	.+48     	; 0x6c6 <__stack+0x1c7>
 696:	18 f4       	brcc	.+6      	; 0x69e <__stack+0x19f>
 698:	88 35       	cpi	r24, 0x58	; 88
 69a:	79 f0       	breq	.+30     	; 0x6ba <__stack+0x1bb>
 69c:	b5 c0       	rjmp	.+362    	; 0x808 <__stack+0x309>
 69e:	80 37       	cpi	r24, 0x70	; 112
 6a0:	19 f0       	breq	.+6      	; 0x6a8 <__stack+0x1a9>
 6a2:	88 37       	cpi	r24, 0x78	; 120
 6a4:	21 f0       	breq	.+8      	; 0x6ae <__stack+0x1af>
 6a6:	b0 c0       	rjmp	.+352    	; 0x808 <__stack+0x309>
 6a8:	e9 2f       	mov	r30, r25
 6aa:	e0 61       	ori	r30, 0x10	; 16
 6ac:	be 2e       	mov	r11, r30
 6ae:	b4 fe       	sbrs	r11, 4
 6b0:	0d c0       	rjmp	.+26     	; 0x6cc <__stack+0x1cd>
 6b2:	fb 2d       	mov	r31, r11
 6b4:	f4 60       	ori	r31, 0x04	; 4
 6b6:	bf 2e       	mov	r11, r31
 6b8:	09 c0       	rjmp	.+18     	; 0x6cc <__stack+0x1cd>
 6ba:	34 fe       	sbrs	r3, 4
 6bc:	0a c0       	rjmp	.+20     	; 0x6d2 <__stack+0x1d3>
 6be:	29 2f       	mov	r18, r25
 6c0:	26 60       	ori	r18, 0x06	; 6
 6c2:	b2 2e       	mov	r11, r18
 6c4:	06 c0       	rjmp	.+12     	; 0x6d2 <__stack+0x1d3>
 6c6:	28 e0       	ldi	r18, 0x08	; 8
 6c8:	30 e0       	ldi	r19, 0x00	; 0
 6ca:	05 c0       	rjmp	.+10     	; 0x6d6 <__stack+0x1d7>
 6cc:	20 e1       	ldi	r18, 0x10	; 16
 6ce:	30 e0       	ldi	r19, 0x00	; 0
 6d0:	02 c0       	rjmp	.+4      	; 0x6d6 <__stack+0x1d7>
 6d2:	20 e1       	ldi	r18, 0x10	; 16
 6d4:	32 e0       	ldi	r19, 0x02	; 2
 6d6:	f8 01       	movw	r30, r16
 6d8:	b7 fe       	sbrs	r11, 7
 6da:	07 c0       	rjmp	.+14     	; 0x6ea <__stack+0x1eb>
 6dc:	60 81       	ld	r22, Z
 6de:	71 81       	ldd	r23, Z+1	; 0x01
 6e0:	82 81       	ldd	r24, Z+2	; 0x02
 6e2:	93 81       	ldd	r25, Z+3	; 0x03
 6e4:	0c 5f       	subi	r16, 0xFC	; 252
 6e6:	1f 4f       	sbci	r17, 0xFF	; 255
 6e8:	06 c0       	rjmp	.+12     	; 0x6f6 <__stack+0x1f7>
 6ea:	60 81       	ld	r22, Z
 6ec:	71 81       	ldd	r23, Z+1	; 0x01
 6ee:	80 e0       	ldi	r24, 0x00	; 0
 6f0:	90 e0       	ldi	r25, 0x00	; 0
 6f2:	0e 5f       	subi	r16, 0xFE	; 254
 6f4:	1f 4f       	sbci	r17, 0xFF	; 255
 6f6:	a3 01       	movw	r20, r6
 6f8:	0e 94 a4 05 	call	0xb48	; 0xb48 <__ultoa_invert>
 6fc:	88 2e       	mov	r8, r24
 6fe:	86 18       	sub	r8, r6
 700:	fb 2d       	mov	r31, r11
 702:	ff 77       	andi	r31, 0x7F	; 127
 704:	3f 2e       	mov	r3, r31
 706:	36 fe       	sbrs	r3, 6
 708:	0d c0       	rjmp	.+26     	; 0x724 <__stack+0x225>
 70a:	23 2d       	mov	r18, r3
 70c:	2e 7f       	andi	r18, 0xFE	; 254
 70e:	a2 2e       	mov	r10, r18
 710:	89 14       	cp	r8, r9
 712:	58 f4       	brcc	.+22     	; 0x72a <__stack+0x22b>
 714:	34 fe       	sbrs	r3, 4
 716:	0b c0       	rjmp	.+22     	; 0x72e <__stack+0x22f>
 718:	32 fc       	sbrc	r3, 2
 71a:	09 c0       	rjmp	.+18     	; 0x72e <__stack+0x22f>
 71c:	83 2d       	mov	r24, r3
 71e:	8e 7e       	andi	r24, 0xEE	; 238
 720:	a8 2e       	mov	r10, r24
 722:	05 c0       	rjmp	.+10     	; 0x72e <__stack+0x22f>
 724:	b8 2c       	mov	r11, r8
 726:	a3 2c       	mov	r10, r3
 728:	03 c0       	rjmp	.+6      	; 0x730 <__stack+0x231>
 72a:	b8 2c       	mov	r11, r8
 72c:	01 c0       	rjmp	.+2      	; 0x730 <__stack+0x231>
 72e:	b9 2c       	mov	r11, r9
 730:	a4 fe       	sbrs	r10, 4
 732:	0f c0       	rjmp	.+30     	; 0x752 <__stack+0x253>
 734:	fe 01       	movw	r30, r28
 736:	e8 0d       	add	r30, r8
 738:	f1 1d       	adc	r31, r1
 73a:	80 81       	ld	r24, Z
 73c:	80 33       	cpi	r24, 0x30	; 48
 73e:	21 f4       	brne	.+8      	; 0x748 <__stack+0x249>
 740:	9a 2d       	mov	r25, r10
 742:	99 7e       	andi	r25, 0xE9	; 233
 744:	a9 2e       	mov	r10, r25
 746:	09 c0       	rjmp	.+18     	; 0x75a <__stack+0x25b>
 748:	a2 fe       	sbrs	r10, 2
 74a:	06 c0       	rjmp	.+12     	; 0x758 <__stack+0x259>
 74c:	b3 94       	inc	r11
 74e:	b3 94       	inc	r11
 750:	04 c0       	rjmp	.+8      	; 0x75a <__stack+0x25b>
 752:	8a 2d       	mov	r24, r10
 754:	86 78       	andi	r24, 0x86	; 134
 756:	09 f0       	breq	.+2      	; 0x75a <__stack+0x25b>
 758:	b3 94       	inc	r11
 75a:	a3 fc       	sbrc	r10, 3
 75c:	11 c0       	rjmp	.+34     	; 0x780 <__stack+0x281>
 75e:	a0 fe       	sbrs	r10, 0
 760:	06 c0       	rjmp	.+12     	; 0x76e <__stack+0x26f>
 762:	b2 14       	cp	r11, r2
 764:	88 f4       	brcc	.+34     	; 0x788 <__stack+0x289>
 766:	28 0c       	add	r2, r8
 768:	92 2c       	mov	r9, r2
 76a:	9b 18       	sub	r9, r11
 76c:	0e c0       	rjmp	.+28     	; 0x78a <__stack+0x28b>
 76e:	b2 14       	cp	r11, r2
 770:	60 f4       	brcc	.+24     	; 0x78a <__stack+0x28b>
 772:	b6 01       	movw	r22, r12
 774:	80 e2       	ldi	r24, 0x20	; 32
 776:	90 e0       	ldi	r25, 0x00	; 0
 778:	0e 94 68 05 	call	0xad0	; 0xad0 <fputc>
 77c:	b3 94       	inc	r11
 77e:	f7 cf       	rjmp	.-18     	; 0x76e <__stack+0x26f>
 780:	b2 14       	cp	r11, r2
 782:	18 f4       	brcc	.+6      	; 0x78a <__stack+0x28b>
 784:	2b 18       	sub	r2, r11
 786:	02 c0       	rjmp	.+4      	; 0x78c <__stack+0x28d>
 788:	98 2c       	mov	r9, r8
 78a:	21 2c       	mov	r2, r1
 78c:	a4 fe       	sbrs	r10, 4
 78e:	10 c0       	rjmp	.+32     	; 0x7b0 <__stack+0x2b1>
 790:	b6 01       	movw	r22, r12
 792:	80 e3       	ldi	r24, 0x30	; 48
 794:	90 e0       	ldi	r25, 0x00	; 0
 796:	0e 94 68 05 	call	0xad0	; 0xad0 <fputc>
 79a:	a2 fe       	sbrs	r10, 2
 79c:	17 c0       	rjmp	.+46     	; 0x7cc <__stack+0x2cd>
 79e:	a1 fc       	sbrc	r10, 1
 7a0:	03 c0       	rjmp	.+6      	; 0x7a8 <__stack+0x2a9>
 7a2:	88 e7       	ldi	r24, 0x78	; 120
 7a4:	90 e0       	ldi	r25, 0x00	; 0
 7a6:	02 c0       	rjmp	.+4      	; 0x7ac <__stack+0x2ad>
 7a8:	88 e5       	ldi	r24, 0x58	; 88
 7aa:	90 e0       	ldi	r25, 0x00	; 0
 7ac:	b6 01       	movw	r22, r12
 7ae:	0c c0       	rjmp	.+24     	; 0x7c8 <__stack+0x2c9>
 7b0:	8a 2d       	mov	r24, r10
 7b2:	86 78       	andi	r24, 0x86	; 134
 7b4:	59 f0       	breq	.+22     	; 0x7cc <__stack+0x2cd>
 7b6:	a1 fe       	sbrs	r10, 1
 7b8:	02 c0       	rjmp	.+4      	; 0x7be <__stack+0x2bf>
 7ba:	8b e2       	ldi	r24, 0x2B	; 43
 7bc:	01 c0       	rjmp	.+2      	; 0x7c0 <__stack+0x2c1>
 7be:	80 e2       	ldi	r24, 0x20	; 32
 7c0:	a7 fc       	sbrc	r10, 7
 7c2:	8d e2       	ldi	r24, 0x2D	; 45
 7c4:	b6 01       	movw	r22, r12
 7c6:	90 e0       	ldi	r25, 0x00	; 0
 7c8:	0e 94 68 05 	call	0xad0	; 0xad0 <fputc>
 7cc:	89 14       	cp	r8, r9
 7ce:	38 f4       	brcc	.+14     	; 0x7de <__stack+0x2df>
 7d0:	b6 01       	movw	r22, r12
 7d2:	80 e3       	ldi	r24, 0x30	; 48
 7d4:	90 e0       	ldi	r25, 0x00	; 0
 7d6:	0e 94 68 05 	call	0xad0	; 0xad0 <fputc>
 7da:	9a 94       	dec	r9
 7dc:	f7 cf       	rjmp	.-18     	; 0x7cc <__stack+0x2cd>
 7de:	8a 94       	dec	r8
 7e0:	f3 01       	movw	r30, r6
 7e2:	e8 0d       	add	r30, r8
 7e4:	f1 1d       	adc	r31, r1
 7e6:	80 81       	ld	r24, Z
 7e8:	b6 01       	movw	r22, r12
 7ea:	90 e0       	ldi	r25, 0x00	; 0
 7ec:	0e 94 68 05 	call	0xad0	; 0xad0 <fputc>
 7f0:	81 10       	cpse	r8, r1
 7f2:	f5 cf       	rjmp	.-22     	; 0x7de <__stack+0x2df>
 7f4:	22 20       	and	r2, r2
 7f6:	09 f4       	brne	.+2      	; 0x7fa <__stack+0x2fb>
 7f8:	42 ce       	rjmp	.-892    	; 0x47e <vfprintf+0x24>
 7fa:	b6 01       	movw	r22, r12
 7fc:	80 e2       	ldi	r24, 0x20	; 32
 7fe:	90 e0       	ldi	r25, 0x00	; 0
 800:	0e 94 68 05 	call	0xad0	; 0xad0 <fputc>
 804:	2a 94       	dec	r2
 806:	f6 cf       	rjmp	.-20     	; 0x7f4 <__stack+0x2f5>
 808:	f6 01       	movw	r30, r12
 80a:	86 81       	ldd	r24, Z+6	; 0x06
 80c:	97 81       	ldd	r25, Z+7	; 0x07
 80e:	02 c0       	rjmp	.+4      	; 0x814 <__stack+0x315>
 810:	8f ef       	ldi	r24, 0xFF	; 255
 812:	9f ef       	ldi	r25, 0xFF	; 255
 814:	2b 96       	adiw	r28, 0x0b	; 11
 816:	e2 e1       	ldi	r30, 0x12	; 18
 818:	0c 94 1e 06 	jmp	0xc3c	; 0xc3c <__epilogue_restores__>

0000081c <calloc>:
 81c:	0f 93       	push	r16
 81e:	1f 93       	push	r17
 820:	cf 93       	push	r28
 822:	df 93       	push	r29
 824:	86 9f       	mul	r24, r22
 826:	80 01       	movw	r16, r0
 828:	87 9f       	mul	r24, r23
 82a:	10 0d       	add	r17, r0
 82c:	96 9f       	mul	r25, r22
 82e:	10 0d       	add	r17, r0
 830:	11 24       	eor	r1, r1
 832:	c8 01       	movw	r24, r16
 834:	0e 94 2a 04 	call	0x854	; 0x854 <malloc>
 838:	ec 01       	movw	r28, r24
 83a:	00 97       	sbiw	r24, 0x00	; 0
 83c:	29 f0       	breq	.+10     	; 0x848 <calloc+0x2c>
 83e:	a8 01       	movw	r20, r16
 840:	60 e0       	ldi	r22, 0x00	; 0
 842:	70 e0       	ldi	r23, 0x00	; 0
 844:	0e 94 56 05 	call	0xaac	; 0xaac <memset>
 848:	ce 01       	movw	r24, r28
 84a:	df 91       	pop	r29
 84c:	cf 91       	pop	r28
 84e:	1f 91       	pop	r17
 850:	0f 91       	pop	r16
 852:	08 95       	ret

00000854 <malloc>:
 854:	0f 93       	push	r16
 856:	1f 93       	push	r17
 858:	cf 93       	push	r28
 85a:	df 93       	push	r29
 85c:	82 30       	cpi	r24, 0x02	; 2
 85e:	91 05       	cpc	r25, r1
 860:	10 f4       	brcc	.+4      	; 0x866 <malloc+0x12>
 862:	82 e0       	ldi	r24, 0x02	; 2
 864:	90 e0       	ldi	r25, 0x00	; 0
 866:	e0 91 92 01 	lds	r30, 0x0192	; 0x800192 <__flp>
 86a:	f0 91 93 01 	lds	r31, 0x0193	; 0x800193 <__flp+0x1>
 86e:	20 e0       	ldi	r18, 0x00	; 0
 870:	30 e0       	ldi	r19, 0x00	; 0
 872:	a0 e0       	ldi	r26, 0x00	; 0
 874:	b0 e0       	ldi	r27, 0x00	; 0
 876:	30 97       	sbiw	r30, 0x00	; 0
 878:	19 f1       	breq	.+70     	; 0x8c0 <malloc+0x6c>
 87a:	40 81       	ld	r20, Z
 87c:	51 81       	ldd	r21, Z+1	; 0x01
 87e:	02 81       	ldd	r16, Z+2	; 0x02
 880:	13 81       	ldd	r17, Z+3	; 0x03
 882:	48 17       	cp	r20, r24
 884:	59 07       	cpc	r21, r25
 886:	c8 f0       	brcs	.+50     	; 0x8ba <malloc+0x66>
 888:	84 17       	cp	r24, r20
 88a:	95 07       	cpc	r25, r21
 88c:	69 f4       	brne	.+26     	; 0x8a8 <malloc+0x54>
 88e:	10 97       	sbiw	r26, 0x00	; 0
 890:	31 f0       	breq	.+12     	; 0x89e <malloc+0x4a>
 892:	12 96       	adiw	r26, 0x02	; 2
 894:	0c 93       	st	X, r16
 896:	12 97       	sbiw	r26, 0x02	; 2
 898:	13 96       	adiw	r26, 0x03	; 3
 89a:	1c 93       	st	X, r17
 89c:	27 c0       	rjmp	.+78     	; 0x8ec <malloc+0x98>
 89e:	00 93 92 01 	sts	0x0192, r16	; 0x800192 <__flp>
 8a2:	10 93 93 01 	sts	0x0193, r17	; 0x800193 <__flp+0x1>
 8a6:	22 c0       	rjmp	.+68     	; 0x8ec <malloc+0x98>
 8a8:	21 15       	cp	r18, r1
 8aa:	31 05       	cpc	r19, r1
 8ac:	19 f0       	breq	.+6      	; 0x8b4 <malloc+0x60>
 8ae:	42 17       	cp	r20, r18
 8b0:	53 07       	cpc	r21, r19
 8b2:	18 f4       	brcc	.+6      	; 0x8ba <malloc+0x66>
 8b4:	9a 01       	movw	r18, r20
 8b6:	bd 01       	movw	r22, r26
 8b8:	ef 01       	movw	r28, r30
 8ba:	df 01       	movw	r26, r30
 8bc:	f8 01       	movw	r30, r16
 8be:	db cf       	rjmp	.-74     	; 0x876 <malloc+0x22>
 8c0:	21 15       	cp	r18, r1
 8c2:	31 05       	cpc	r19, r1
 8c4:	f9 f0       	breq	.+62     	; 0x904 <malloc+0xb0>
 8c6:	28 1b       	sub	r18, r24
 8c8:	39 0b       	sbc	r19, r25
 8ca:	24 30       	cpi	r18, 0x04	; 4
 8cc:	31 05       	cpc	r19, r1
 8ce:	80 f4       	brcc	.+32     	; 0x8f0 <malloc+0x9c>
 8d0:	8a 81       	ldd	r24, Y+2	; 0x02
 8d2:	9b 81       	ldd	r25, Y+3	; 0x03
 8d4:	61 15       	cp	r22, r1
 8d6:	71 05       	cpc	r23, r1
 8d8:	21 f0       	breq	.+8      	; 0x8e2 <malloc+0x8e>
 8da:	fb 01       	movw	r30, r22
 8dc:	93 83       	std	Z+3, r25	; 0x03
 8de:	82 83       	std	Z+2, r24	; 0x02
 8e0:	04 c0       	rjmp	.+8      	; 0x8ea <malloc+0x96>
 8e2:	90 93 93 01 	sts	0x0193, r25	; 0x800193 <__flp+0x1>
 8e6:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <__flp>
 8ea:	fe 01       	movw	r30, r28
 8ec:	32 96       	adiw	r30, 0x02	; 2
 8ee:	44 c0       	rjmp	.+136    	; 0x978 <malloc+0x124>
 8f0:	fe 01       	movw	r30, r28
 8f2:	e2 0f       	add	r30, r18
 8f4:	f3 1f       	adc	r31, r19
 8f6:	81 93       	st	Z+, r24
 8f8:	91 93       	st	Z+, r25
 8fa:	22 50       	subi	r18, 0x02	; 2
 8fc:	31 09       	sbc	r19, r1
 8fe:	39 83       	std	Y+1, r19	; 0x01
 900:	28 83       	st	Y, r18
 902:	3a c0       	rjmp	.+116    	; 0x978 <malloc+0x124>
 904:	20 91 90 01 	lds	r18, 0x0190	; 0x800190 <__brkval>
 908:	30 91 91 01 	lds	r19, 0x0191	; 0x800191 <__brkval+0x1>
 90c:	23 2b       	or	r18, r19
 90e:	41 f4       	brne	.+16     	; 0x920 <malloc+0xcc>
 910:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 914:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 918:	30 93 91 01 	sts	0x0191, r19	; 0x800191 <__brkval+0x1>
 91c:	20 93 90 01 	sts	0x0190, r18	; 0x800190 <__brkval>
 920:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 924:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 928:	21 15       	cp	r18, r1
 92a:	31 05       	cpc	r19, r1
 92c:	41 f4       	brne	.+16     	; 0x93e <malloc+0xea>
 92e:	2d b7       	in	r18, 0x3d	; 61
 930:	3e b7       	in	r19, 0x3e	; 62
 932:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 936:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 93a:	24 1b       	sub	r18, r20
 93c:	35 0b       	sbc	r19, r21
 93e:	e0 91 90 01 	lds	r30, 0x0190	; 0x800190 <__brkval>
 942:	f0 91 91 01 	lds	r31, 0x0191	; 0x800191 <__brkval+0x1>
 946:	e2 17       	cp	r30, r18
 948:	f3 07       	cpc	r31, r19
 94a:	a0 f4       	brcc	.+40     	; 0x974 <malloc+0x120>
 94c:	2e 1b       	sub	r18, r30
 94e:	3f 0b       	sbc	r19, r31
 950:	28 17       	cp	r18, r24
 952:	39 07       	cpc	r19, r25
 954:	78 f0       	brcs	.+30     	; 0x974 <malloc+0x120>
 956:	ac 01       	movw	r20, r24
 958:	4e 5f       	subi	r20, 0xFE	; 254
 95a:	5f 4f       	sbci	r21, 0xFF	; 255
 95c:	24 17       	cp	r18, r20
 95e:	35 07       	cpc	r19, r21
 960:	48 f0       	brcs	.+18     	; 0x974 <malloc+0x120>
 962:	4e 0f       	add	r20, r30
 964:	5f 1f       	adc	r21, r31
 966:	50 93 91 01 	sts	0x0191, r21	; 0x800191 <__brkval+0x1>
 96a:	40 93 90 01 	sts	0x0190, r20	; 0x800190 <__brkval>
 96e:	81 93       	st	Z+, r24
 970:	91 93       	st	Z+, r25
 972:	02 c0       	rjmp	.+4      	; 0x978 <malloc+0x124>
 974:	e0 e0       	ldi	r30, 0x00	; 0
 976:	f0 e0       	ldi	r31, 0x00	; 0
 978:	cf 01       	movw	r24, r30
 97a:	df 91       	pop	r29
 97c:	cf 91       	pop	r28
 97e:	1f 91       	pop	r17
 980:	0f 91       	pop	r16
 982:	08 95       	ret

00000984 <free>:
 984:	cf 93       	push	r28
 986:	df 93       	push	r29
 988:	00 97       	sbiw	r24, 0x00	; 0
 98a:	09 f4       	brne	.+2      	; 0x98e <free+0xa>
 98c:	81 c0       	rjmp	.+258    	; 0xa90 <free+0x10c>
 98e:	fc 01       	movw	r30, r24
 990:	32 97       	sbiw	r30, 0x02	; 2
 992:	13 82       	std	Z+3, r1	; 0x03
 994:	12 82       	std	Z+2, r1	; 0x02
 996:	a0 91 92 01 	lds	r26, 0x0192	; 0x800192 <__flp>
 99a:	b0 91 93 01 	lds	r27, 0x0193	; 0x800193 <__flp+0x1>
 99e:	10 97       	sbiw	r26, 0x00	; 0
 9a0:	81 f4       	brne	.+32     	; 0x9c2 <free+0x3e>
 9a2:	20 81       	ld	r18, Z
 9a4:	31 81       	ldd	r19, Z+1	; 0x01
 9a6:	82 0f       	add	r24, r18
 9a8:	93 1f       	adc	r25, r19
 9aa:	20 91 90 01 	lds	r18, 0x0190	; 0x800190 <__brkval>
 9ae:	30 91 91 01 	lds	r19, 0x0191	; 0x800191 <__brkval+0x1>
 9b2:	28 17       	cp	r18, r24
 9b4:	39 07       	cpc	r19, r25
 9b6:	51 f5       	brne	.+84     	; 0xa0c <free+0x88>
 9b8:	f0 93 91 01 	sts	0x0191, r31	; 0x800191 <__brkval+0x1>
 9bc:	e0 93 90 01 	sts	0x0190, r30	; 0x800190 <__brkval>
 9c0:	67 c0       	rjmp	.+206    	; 0xa90 <free+0x10c>
 9c2:	ed 01       	movw	r28, r26
 9c4:	20 e0       	ldi	r18, 0x00	; 0
 9c6:	30 e0       	ldi	r19, 0x00	; 0
 9c8:	ce 17       	cp	r28, r30
 9ca:	df 07       	cpc	r29, r31
 9cc:	40 f4       	brcc	.+16     	; 0x9de <free+0x5a>
 9ce:	4a 81       	ldd	r20, Y+2	; 0x02
 9d0:	5b 81       	ldd	r21, Y+3	; 0x03
 9d2:	9e 01       	movw	r18, r28
 9d4:	41 15       	cp	r20, r1
 9d6:	51 05       	cpc	r21, r1
 9d8:	f1 f0       	breq	.+60     	; 0xa16 <free+0x92>
 9da:	ea 01       	movw	r28, r20
 9dc:	f5 cf       	rjmp	.-22     	; 0x9c8 <free+0x44>
 9de:	d3 83       	std	Z+3, r29	; 0x03
 9e0:	c2 83       	std	Z+2, r28	; 0x02
 9e2:	40 81       	ld	r20, Z
 9e4:	51 81       	ldd	r21, Z+1	; 0x01
 9e6:	84 0f       	add	r24, r20
 9e8:	95 1f       	adc	r25, r21
 9ea:	c8 17       	cp	r28, r24
 9ec:	d9 07       	cpc	r29, r25
 9ee:	59 f4       	brne	.+22     	; 0xa06 <free+0x82>
 9f0:	88 81       	ld	r24, Y
 9f2:	99 81       	ldd	r25, Y+1	; 0x01
 9f4:	84 0f       	add	r24, r20
 9f6:	95 1f       	adc	r25, r21
 9f8:	02 96       	adiw	r24, 0x02	; 2
 9fa:	91 83       	std	Z+1, r25	; 0x01
 9fc:	80 83       	st	Z, r24
 9fe:	8a 81       	ldd	r24, Y+2	; 0x02
 a00:	9b 81       	ldd	r25, Y+3	; 0x03
 a02:	93 83       	std	Z+3, r25	; 0x03
 a04:	82 83       	std	Z+2, r24	; 0x02
 a06:	21 15       	cp	r18, r1
 a08:	31 05       	cpc	r19, r1
 a0a:	29 f4       	brne	.+10     	; 0xa16 <free+0x92>
 a0c:	f0 93 93 01 	sts	0x0193, r31	; 0x800193 <__flp+0x1>
 a10:	e0 93 92 01 	sts	0x0192, r30	; 0x800192 <__flp>
 a14:	3d c0       	rjmp	.+122    	; 0xa90 <free+0x10c>
 a16:	e9 01       	movw	r28, r18
 a18:	fb 83       	std	Y+3, r31	; 0x03
 a1a:	ea 83       	std	Y+2, r30	; 0x02
 a1c:	49 91       	ld	r20, Y+
 a1e:	59 91       	ld	r21, Y+
 a20:	c4 0f       	add	r28, r20
 a22:	d5 1f       	adc	r29, r21
 a24:	ec 17       	cp	r30, r28
 a26:	fd 07       	cpc	r31, r29
 a28:	61 f4       	brne	.+24     	; 0xa42 <free+0xbe>
 a2a:	80 81       	ld	r24, Z
 a2c:	91 81       	ldd	r25, Z+1	; 0x01
 a2e:	84 0f       	add	r24, r20
 a30:	95 1f       	adc	r25, r21
 a32:	02 96       	adiw	r24, 0x02	; 2
 a34:	e9 01       	movw	r28, r18
 a36:	99 83       	std	Y+1, r25	; 0x01
 a38:	88 83       	st	Y, r24
 a3a:	82 81       	ldd	r24, Z+2	; 0x02
 a3c:	93 81       	ldd	r25, Z+3	; 0x03
 a3e:	9b 83       	std	Y+3, r25	; 0x03
 a40:	8a 83       	std	Y+2, r24	; 0x02
 a42:	e0 e0       	ldi	r30, 0x00	; 0
 a44:	f0 e0       	ldi	r31, 0x00	; 0
 a46:	12 96       	adiw	r26, 0x02	; 2
 a48:	8d 91       	ld	r24, X+
 a4a:	9c 91       	ld	r25, X
 a4c:	13 97       	sbiw	r26, 0x03	; 3
 a4e:	00 97       	sbiw	r24, 0x00	; 0
 a50:	19 f0       	breq	.+6      	; 0xa58 <free+0xd4>
 a52:	fd 01       	movw	r30, r26
 a54:	dc 01       	movw	r26, r24
 a56:	f7 cf       	rjmp	.-18     	; 0xa46 <free+0xc2>
 a58:	8d 91       	ld	r24, X+
 a5a:	9c 91       	ld	r25, X
 a5c:	11 97       	sbiw	r26, 0x01	; 1
 a5e:	9d 01       	movw	r18, r26
 a60:	2e 5f       	subi	r18, 0xFE	; 254
 a62:	3f 4f       	sbci	r19, 0xFF	; 255
 a64:	82 0f       	add	r24, r18
 a66:	93 1f       	adc	r25, r19
 a68:	20 91 90 01 	lds	r18, 0x0190	; 0x800190 <__brkval>
 a6c:	30 91 91 01 	lds	r19, 0x0191	; 0x800191 <__brkval+0x1>
 a70:	28 17       	cp	r18, r24
 a72:	39 07       	cpc	r19, r25
 a74:	69 f4       	brne	.+26     	; 0xa90 <free+0x10c>
 a76:	30 97       	sbiw	r30, 0x00	; 0
 a78:	29 f4       	brne	.+10     	; 0xa84 <free+0x100>
 a7a:	10 92 93 01 	sts	0x0193, r1	; 0x800193 <__flp+0x1>
 a7e:	10 92 92 01 	sts	0x0192, r1	; 0x800192 <__flp>
 a82:	02 c0       	rjmp	.+4      	; 0xa88 <free+0x104>
 a84:	13 82       	std	Z+3, r1	; 0x03
 a86:	12 82       	std	Z+2, r1	; 0x02
 a88:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <__brkval+0x1>
 a8c:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <__brkval>
 a90:	df 91       	pop	r29
 a92:	cf 91       	pop	r28
 a94:	08 95       	ret

00000a96 <strnlen_P>:
 a96:	fc 01       	movw	r30, r24
 a98:	05 90       	lpm	r0, Z+
 a9a:	61 50       	subi	r22, 0x01	; 1
 a9c:	70 40       	sbci	r23, 0x00	; 0
 a9e:	01 10       	cpse	r0, r1
 aa0:	d8 f7       	brcc	.-10     	; 0xa98 <strnlen_P+0x2>
 aa2:	80 95       	com	r24
 aa4:	90 95       	com	r25
 aa6:	8e 0f       	add	r24, r30
 aa8:	9f 1f       	adc	r25, r31
 aaa:	08 95       	ret

00000aac <memset>:
 aac:	dc 01       	movw	r26, r24
 aae:	01 c0       	rjmp	.+2      	; 0xab2 <memset+0x6>
 ab0:	6d 93       	st	X+, r22
 ab2:	41 50       	subi	r20, 0x01	; 1
 ab4:	50 40       	sbci	r21, 0x00	; 0
 ab6:	e0 f7       	brcc	.-8      	; 0xab0 <memset+0x4>
 ab8:	08 95       	ret

00000aba <strnlen>:
 aba:	fc 01       	movw	r30, r24
 abc:	61 50       	subi	r22, 0x01	; 1
 abe:	70 40       	sbci	r23, 0x00	; 0
 ac0:	01 90       	ld	r0, Z+
 ac2:	01 10       	cpse	r0, r1
 ac4:	d8 f7       	brcc	.-10     	; 0xabc <strnlen+0x2>
 ac6:	80 95       	com	r24
 ac8:	90 95       	com	r25
 aca:	8e 0f       	add	r24, r30
 acc:	9f 1f       	adc	r25, r31
 ace:	08 95       	ret

00000ad0 <fputc>:
 ad0:	0f 93       	push	r16
 ad2:	1f 93       	push	r17
 ad4:	cf 93       	push	r28
 ad6:	df 93       	push	r29
 ad8:	fb 01       	movw	r30, r22
 ada:	23 81       	ldd	r18, Z+3	; 0x03
 adc:	21 fd       	sbrc	r18, 1
 ade:	03 c0       	rjmp	.+6      	; 0xae6 <fputc+0x16>
 ae0:	8f ef       	ldi	r24, 0xFF	; 255
 ae2:	9f ef       	ldi	r25, 0xFF	; 255
 ae4:	2c c0       	rjmp	.+88     	; 0xb3e <fputc+0x6e>
 ae6:	22 ff       	sbrs	r18, 2
 ae8:	16 c0       	rjmp	.+44     	; 0xb16 <fputc+0x46>
 aea:	46 81       	ldd	r20, Z+6	; 0x06
 aec:	57 81       	ldd	r21, Z+7	; 0x07
 aee:	24 81       	ldd	r18, Z+4	; 0x04
 af0:	35 81       	ldd	r19, Z+5	; 0x05
 af2:	42 17       	cp	r20, r18
 af4:	53 07       	cpc	r21, r19
 af6:	44 f4       	brge	.+16     	; 0xb08 <fputc+0x38>
 af8:	a0 81       	ld	r26, Z
 afa:	b1 81       	ldd	r27, Z+1	; 0x01
 afc:	9d 01       	movw	r18, r26
 afe:	2f 5f       	subi	r18, 0xFF	; 255
 b00:	3f 4f       	sbci	r19, 0xFF	; 255
 b02:	31 83       	std	Z+1, r19	; 0x01
 b04:	20 83       	st	Z, r18
 b06:	8c 93       	st	X, r24
 b08:	26 81       	ldd	r18, Z+6	; 0x06
 b0a:	37 81       	ldd	r19, Z+7	; 0x07
 b0c:	2f 5f       	subi	r18, 0xFF	; 255
 b0e:	3f 4f       	sbci	r19, 0xFF	; 255
 b10:	37 83       	std	Z+7, r19	; 0x07
 b12:	26 83       	std	Z+6, r18	; 0x06
 b14:	14 c0       	rjmp	.+40     	; 0xb3e <fputc+0x6e>
 b16:	8b 01       	movw	r16, r22
 b18:	ec 01       	movw	r28, r24
 b1a:	fb 01       	movw	r30, r22
 b1c:	00 84       	ldd	r0, Z+8	; 0x08
 b1e:	f1 85       	ldd	r31, Z+9	; 0x09
 b20:	e0 2d       	mov	r30, r0
 b22:	09 95       	icall
 b24:	89 2b       	or	r24, r25
 b26:	e1 f6       	brne	.-72     	; 0xae0 <fputc+0x10>
 b28:	d8 01       	movw	r26, r16
 b2a:	16 96       	adiw	r26, 0x06	; 6
 b2c:	8d 91       	ld	r24, X+
 b2e:	9c 91       	ld	r25, X
 b30:	17 97       	sbiw	r26, 0x07	; 7
 b32:	01 96       	adiw	r24, 0x01	; 1
 b34:	17 96       	adiw	r26, 0x07	; 7
 b36:	9c 93       	st	X, r25
 b38:	8e 93       	st	-X, r24
 b3a:	16 97       	sbiw	r26, 0x06	; 6
 b3c:	ce 01       	movw	r24, r28
 b3e:	df 91       	pop	r29
 b40:	cf 91       	pop	r28
 b42:	1f 91       	pop	r17
 b44:	0f 91       	pop	r16
 b46:	08 95       	ret

00000b48 <__ultoa_invert>:
 b48:	fa 01       	movw	r30, r20
 b4a:	aa 27       	eor	r26, r26
 b4c:	28 30       	cpi	r18, 0x08	; 8
 b4e:	51 f1       	breq	.+84     	; 0xba4 <__ultoa_invert+0x5c>
 b50:	20 31       	cpi	r18, 0x10	; 16
 b52:	81 f1       	breq	.+96     	; 0xbb4 <__ultoa_invert+0x6c>
 b54:	e8 94       	clt
 b56:	6f 93       	push	r22
 b58:	6e 7f       	andi	r22, 0xFE	; 254
 b5a:	6e 5f       	subi	r22, 0xFE	; 254
 b5c:	7f 4f       	sbci	r23, 0xFF	; 255
 b5e:	8f 4f       	sbci	r24, 0xFF	; 255
 b60:	9f 4f       	sbci	r25, 0xFF	; 255
 b62:	af 4f       	sbci	r26, 0xFF	; 255
 b64:	b1 e0       	ldi	r27, 0x01	; 1
 b66:	3e d0       	rcall	.+124    	; 0xbe4 <__ultoa_invert+0x9c>
 b68:	b4 e0       	ldi	r27, 0x04	; 4
 b6a:	3c d0       	rcall	.+120    	; 0xbe4 <__ultoa_invert+0x9c>
 b6c:	67 0f       	add	r22, r23
 b6e:	78 1f       	adc	r23, r24
 b70:	89 1f       	adc	r24, r25
 b72:	9a 1f       	adc	r25, r26
 b74:	a1 1d       	adc	r26, r1
 b76:	68 0f       	add	r22, r24
 b78:	79 1f       	adc	r23, r25
 b7a:	8a 1f       	adc	r24, r26
 b7c:	91 1d       	adc	r25, r1
 b7e:	a1 1d       	adc	r26, r1
 b80:	6a 0f       	add	r22, r26
 b82:	71 1d       	adc	r23, r1
 b84:	81 1d       	adc	r24, r1
 b86:	91 1d       	adc	r25, r1
 b88:	a1 1d       	adc	r26, r1
 b8a:	20 d0       	rcall	.+64     	; 0xbcc <__ultoa_invert+0x84>
 b8c:	09 f4       	brne	.+2      	; 0xb90 <__ultoa_invert+0x48>
 b8e:	68 94       	set
 b90:	3f 91       	pop	r19
 b92:	2a e0       	ldi	r18, 0x0A	; 10
 b94:	26 9f       	mul	r18, r22
 b96:	11 24       	eor	r1, r1
 b98:	30 19       	sub	r19, r0
 b9a:	30 5d       	subi	r19, 0xD0	; 208
 b9c:	31 93       	st	Z+, r19
 b9e:	de f6       	brtc	.-74     	; 0xb56 <__ultoa_invert+0xe>
 ba0:	cf 01       	movw	r24, r30
 ba2:	08 95       	ret
 ba4:	46 2f       	mov	r20, r22
 ba6:	47 70       	andi	r20, 0x07	; 7
 ba8:	40 5d       	subi	r20, 0xD0	; 208
 baa:	41 93       	st	Z+, r20
 bac:	b3 e0       	ldi	r27, 0x03	; 3
 bae:	0f d0       	rcall	.+30     	; 0xbce <__ultoa_invert+0x86>
 bb0:	c9 f7       	brne	.-14     	; 0xba4 <__ultoa_invert+0x5c>
 bb2:	f6 cf       	rjmp	.-20     	; 0xba0 <__ultoa_invert+0x58>
 bb4:	46 2f       	mov	r20, r22
 bb6:	4f 70       	andi	r20, 0x0F	; 15
 bb8:	40 5d       	subi	r20, 0xD0	; 208
 bba:	4a 33       	cpi	r20, 0x3A	; 58
 bbc:	18 f0       	brcs	.+6      	; 0xbc4 <__ultoa_invert+0x7c>
 bbe:	49 5d       	subi	r20, 0xD9	; 217
 bc0:	31 fd       	sbrc	r19, 1
 bc2:	40 52       	subi	r20, 0x20	; 32
 bc4:	41 93       	st	Z+, r20
 bc6:	02 d0       	rcall	.+4      	; 0xbcc <__ultoa_invert+0x84>
 bc8:	a9 f7       	brne	.-22     	; 0xbb4 <__ultoa_invert+0x6c>
 bca:	ea cf       	rjmp	.-44     	; 0xba0 <__ultoa_invert+0x58>
 bcc:	b4 e0       	ldi	r27, 0x04	; 4
 bce:	a6 95       	lsr	r26
 bd0:	97 95       	ror	r25
 bd2:	87 95       	ror	r24
 bd4:	77 95       	ror	r23
 bd6:	67 95       	ror	r22
 bd8:	ba 95       	dec	r27
 bda:	c9 f7       	brne	.-14     	; 0xbce <__ultoa_invert+0x86>
 bdc:	00 97       	sbiw	r24, 0x00	; 0
 bde:	61 05       	cpc	r22, r1
 be0:	71 05       	cpc	r23, r1
 be2:	08 95       	ret
 be4:	9b 01       	movw	r18, r22
 be6:	ac 01       	movw	r20, r24
 be8:	0a 2e       	mov	r0, r26
 bea:	06 94       	lsr	r0
 bec:	57 95       	ror	r21
 bee:	47 95       	ror	r20
 bf0:	37 95       	ror	r19
 bf2:	27 95       	ror	r18
 bf4:	ba 95       	dec	r27
 bf6:	c9 f7       	brne	.-14     	; 0xbea <__ultoa_invert+0xa2>
 bf8:	62 0f       	add	r22, r18
 bfa:	73 1f       	adc	r23, r19
 bfc:	84 1f       	adc	r24, r20
 bfe:	95 1f       	adc	r25, r21
 c00:	a0 1d       	adc	r26, r0
 c02:	08 95       	ret

00000c04 <__prologue_saves__>:
 c04:	2f 92       	push	r2
 c06:	3f 92       	push	r3
 c08:	4f 92       	push	r4
 c0a:	5f 92       	push	r5
 c0c:	6f 92       	push	r6
 c0e:	7f 92       	push	r7
 c10:	8f 92       	push	r8
 c12:	9f 92       	push	r9
 c14:	af 92       	push	r10
 c16:	bf 92       	push	r11
 c18:	cf 92       	push	r12
 c1a:	df 92       	push	r13
 c1c:	ef 92       	push	r14
 c1e:	ff 92       	push	r15
 c20:	0f 93       	push	r16
 c22:	1f 93       	push	r17
 c24:	cf 93       	push	r28
 c26:	df 93       	push	r29
 c28:	cd b7       	in	r28, 0x3d	; 61
 c2a:	de b7       	in	r29, 0x3e	; 62
 c2c:	ca 1b       	sub	r28, r26
 c2e:	db 0b       	sbc	r29, r27
 c30:	0f b6       	in	r0, 0x3f	; 63
 c32:	f8 94       	cli
 c34:	de bf       	out	0x3e, r29	; 62
 c36:	0f be       	out	0x3f, r0	; 63
 c38:	cd bf       	out	0x3d, r28	; 61
 c3a:	09 94       	ijmp

00000c3c <__epilogue_restores__>:
 c3c:	2a 88       	ldd	r2, Y+18	; 0x12
 c3e:	39 88       	ldd	r3, Y+17	; 0x11
 c40:	48 88       	ldd	r4, Y+16	; 0x10
 c42:	5f 84       	ldd	r5, Y+15	; 0x0f
 c44:	6e 84       	ldd	r6, Y+14	; 0x0e
 c46:	7d 84       	ldd	r7, Y+13	; 0x0d
 c48:	8c 84       	ldd	r8, Y+12	; 0x0c
 c4a:	9b 84       	ldd	r9, Y+11	; 0x0b
 c4c:	aa 84       	ldd	r10, Y+10	; 0x0a
 c4e:	b9 84       	ldd	r11, Y+9	; 0x09
 c50:	c8 84       	ldd	r12, Y+8	; 0x08
 c52:	df 80       	ldd	r13, Y+7	; 0x07
 c54:	ee 80       	ldd	r14, Y+6	; 0x06
 c56:	fd 80       	ldd	r15, Y+5	; 0x05
 c58:	0c 81       	ldd	r16, Y+4	; 0x04
 c5a:	1b 81       	ldd	r17, Y+3	; 0x03
 c5c:	aa 81       	ldd	r26, Y+2	; 0x02
 c5e:	b9 81       	ldd	r27, Y+1	; 0x01
 c60:	ce 0f       	add	r28, r30
 c62:	d1 1d       	adc	r29, r1
 c64:	0f b6       	in	r0, 0x3f	; 63
 c66:	f8 94       	cli
 c68:	de bf       	out	0x3e, r29	; 62
 c6a:	0f be       	out	0x3f, r0	; 63
 c6c:	cd bf       	out	0x3d, r28	; 61
 c6e:	ed 01       	movw	r28, r26
 c70:	08 95       	ret

00000c72 <_exit>:
 c72:	f8 94       	cli

00000c74 <__stop_program>:
 c74:	ff cf       	rjmp	.-2      	; 0xc74 <__stop_program>
