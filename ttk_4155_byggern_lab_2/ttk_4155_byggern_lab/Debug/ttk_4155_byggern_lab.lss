
ttk_4155_byggern_lab.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001e  00800100  00000556  000005ea  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000556  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  0080011e  0080011e  00000608  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000608  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000638  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d0  00000000  00000000  00000674  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000e5f  00000000  00000000  00000744  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000aa9  00000000  00000000  000015a3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000008a3  00000000  00000000  0000204c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001e8  00000000  00000000  000028f0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000577  00000000  00000000  00002ad8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000004ec  00000000  00000000  0000304f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b0  00000000  00000000  0000353b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 99 00 	jmp	0x132	; 0x132 <__vector_2>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e6 e5       	ldi	r30, 0x56	; 86
  84:	f5 e0       	ldi	r31, 0x05	; 5
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	ae 31       	cpi	r26, 0x1E	; 30
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	ae e1       	ldi	r26, 0x1E	; 30
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a8 32       	cpi	r26, 0x28	; 40
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 81 00 	call	0x102	; 0x102 <main>
  a6:	0c 94 a9 02 	jmp	0x552	; 0x552 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <adc_drv_init>:
{
	// to do:
	// Change TCCR1A and TCCR1B as a hex value 
	// Change DDRD register to a more correct 8 bit value
	// Change wiring from USB thingy
	DDRD = 0xFF;
  ae:	8f ef       	ldi	r24, 0xFF	; 255
  b0:	81 bb       	out	0x11, r24	; 17
	
	TCCR1B |= (1 << WGM13); // Choosing fast PWM
  b2:	8e b5       	in	r24, 0x2e	; 46
  b4:	80 61       	ori	r24, 0x10	; 16
  b6:	8e bd       	out	0x2e, r24	; 46
	TCCR1B |= (1 << WGM12);	// Choosing fast PWM
  b8:	8e b5       	in	r24, 0x2e	; 46
  ba:	88 60       	ori	r24, 0x08	; 8
  bc:	8e bd       	out	0x2e, r24	; 46
	TCCR1A |= ( 1 << WGM11 ); //Choosing fast PWM
  be:	8f b5       	in	r24, 0x2f	; 47
  c0:	82 60       	ori	r24, 0x02	; 2
  c2:	8f bd       	out	0x2f, r24	; 47
	TCCR1A |= ( 1 << WGM10); // Choosing fast PWM
  c4:	8f b5       	in	r24, 0x2f	; 47
  c6:	81 60       	ori	r24, 0x01	; 1
  c8:	8f bd       	out	0x2f, r24	; 47
	
	TCCR1A &= ~( 1 << COM1A1); // Toggle Compare
  ca:	8f b5       	in	r24, 0x2f	; 47
  cc:	8f 77       	andi	r24, 0x7F	; 127
  ce:	8f bd       	out	0x2f, r24	; 47
	TCCR1A |= ( 1 << COM1A0); // Toggle Compare
  d0:	8f b5       	in	r24, 0x2f	; 47
  d2:	80 64       	ori	r24, 0x40	; 64
  d4:	8f bd       	out	0x2f, r24	; 47
	TCCR1A &= ~( 1 << COM1B1); // Set on Compare
  d6:	8f b5       	in	r24, 0x2f	; 47
  d8:	8f 7d       	andi	r24, 0xDF	; 223
  da:	8f bd       	out	0x2f, r24	; 47
	TCCR1A &= ~( 1 << COM1B0); // Set on Compare
  dc:	8f b5       	in	r24, 0x2f	; 47
  de:	8f 7e       	andi	r24, 0xEF	; 239
  e0:	8f bd       	out	0x2f, r24	; 47
	
		
	TCCR1B &= ~( 1 << CS12); // Prescaler
  e2:	8e b5       	in	r24, 0x2e	; 46
  e4:	8b 7f       	andi	r24, 0xFB	; 251
  e6:	8e bd       	out	0x2e, r24	; 46
	TCCR1B &= ~( 1 << CS11); // Prescaler
  e8:	8e b5       	in	r24, 0x2e	; 46
  ea:	8d 7f       	andi	r24, 0xFD	; 253
  ec:	8e bd       	out	0x2e, r24	; 46
	TCCR1B |= ( 1 << CS10); // Prescaler
  ee:	8e b5       	in	r24, 0x2e	; 46
  f0:	81 60       	ori	r24, 0x01	; 1
  f2:	8e bd       	out	0x2e, r24	; 46
	
	
	TCCR1A &= ~(1 << FOC1A);
  f4:	8f b5       	in	r24, 0x2f	; 47
  f6:	87 7f       	andi	r24, 0xF7	; 247
  f8:	8f bd       	out	0x2f, r24	; 47
	TCCR1A &= ~(1 << FOC1B);
  fa:	8f b5       	in	r24, 0x2f	; 47
  fc:	8b 7f       	andi	r24, 0xFB	; 251
  fe:	8f bd       	out	0x2f, r24	; 47
 100:	08 95       	ret

00000102 <main>:
#include "SRAM/SRAMdrv.h"



int main(void){
	USART_drv_init(MYUBRR);
 102:	8f e1       	ldi	r24, 0x1F	; 31
 104:	90 e0       	ldi	r25, 0x00	; 0
 106:	0e 94 dd 00 	call	0x1ba	; 0x1ba <USART_drv_init>
	SRAM_init();
 10a:	0e 94 ce 00 	call	0x19c	; 0x19c <SRAM_init>
	adc_drv_init();
 10e:	0e 94 57 00 	call	0xae	; 0xae <adc_drv_init>
	ext_button_drv_init();
 112:	0e 94 bf 00 	call	0x17e	; 0x17e <ext_button_drv_init>
		//USART_Transmit(my_char);
		//}
		//printf("Hei, hallo");
		
		//latch_test();
		printf("ok\r\n");
 116:	86 e0       	ldi	r24, 0x06	; 6
 118:	91 e0       	ldi	r25, 0x01	; 1
 11a:	0e 94 35 01 	call	0x26a	; 0x26a <puts>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 11e:	2f ef       	ldi	r18, 0xFF	; 255
 120:	8f ef       	ldi	r24, 0xFF	; 255
 122:	95 e9       	ldi	r25, 0x95	; 149
 124:	21 50       	subi	r18, 0x01	; 1
 126:	80 40       	sbci	r24, 0x00	; 0
 128:	90 40       	sbci	r25, 0x00	; 0
 12a:	e1 f7       	brne	.-8      	; 0x124 <main+0x22>
 12c:	00 c0       	rjmp	.+0      	; 0x12e <main+0x2c>
 12e:	00 00       	nop
 130:	f2 cf       	rjmp	.-28     	; 0x116 <main+0x14>

00000132 <__vector_2>:
 */
#include "ext_button_drv.h"
#include <avr/interrupt.h>

ISR (INT1_vect)
{
 132:	1f 92       	push	r1
 134:	0f 92       	push	r0
 136:	0f b6       	in	r0, 0x3f	; 63
 138:	0f 92       	push	r0
 13a:	11 24       	eor	r1, r1
 13c:	2f 93       	push	r18
 13e:	3f 93       	push	r19
 140:	4f 93       	push	r20
 142:	5f 93       	push	r21
 144:	6f 93       	push	r22
 146:	7f 93       	push	r23
 148:	8f 93       	push	r24
 14a:	9f 93       	push	r25
 14c:	af 93       	push	r26
 14e:	bf 93       	push	r27
 150:	ef 93       	push	r30
 152:	ff 93       	push	r31
	printf("Haavard liker kake\r\n");
 154:	8a e0       	ldi	r24, 0x0A	; 10
 156:	91 e0       	ldi	r25, 0x01	; 1
 158:	0e 94 35 01 	call	0x26a	; 0x26a <puts>
}
 15c:	ff 91       	pop	r31
 15e:	ef 91       	pop	r30
 160:	bf 91       	pop	r27
 162:	af 91       	pop	r26
 164:	9f 91       	pop	r25
 166:	8f 91       	pop	r24
 168:	7f 91       	pop	r23
 16a:	6f 91       	pop	r22
 16c:	5f 91       	pop	r21
 16e:	4f 91       	pop	r20
 170:	3f 91       	pop	r19
 172:	2f 91       	pop	r18
 174:	0f 90       	pop	r0
 176:	0f be       	out	0x3f, r0	; 63
 178:	0f 90       	pop	r0
 17a:	1f 90       	pop	r1
 17c:	18 95       	reti

0000017e <ext_button_drv_init>:
{
	/*
	to do:
			
	*/
	clear_bit(DDRD,PD3);
 17e:	81 b3       	in	r24, 0x11	; 17
 180:	87 7f       	andi	r24, 0xF7	; 247
 182:	81 bb       	out	0x11, r24	; 17
	//Disables global interrupts
	cli();
 184:	f8 94       	cli
	// Enables interrupt on pin INT1
	set_bit(GICR, INT1);
 186:	8b b7       	in	r24, 0x3b	; 59
 188:	80 68       	ori	r24, 0x80	; 128
 18a:	8b bf       	out	0x3b, r24	; 59
	// Configures interrupt falling edge
	set_bit(MCUCR, ISC11);
 18c:	85 b7       	in	r24, 0x35	; 53
 18e:	88 60       	ori	r24, 0x08	; 8
 190:	85 bf       	out	0x35, r24	; 53
	clear_bit(MCUCR, ISC10);
 192:	85 b7       	in	r24, 0x35	; 53
 194:	8b 7f       	andi	r24, 0xFB	; 251
 196:	85 bf       	out	0x35, r24	; 53
	// Enables global interrupts
	sei();	
 198:	78 94       	sei
 19a:	08 95       	ret

0000019c <SRAM_init>:
#include "SRAMdrv.h"

void SRAM_init(){
	MCUCR |= (1 << SRE); //External memory enable
 19c:	85 b7       	in	r24, 0x35	; 53
 19e:	80 68       	ori	r24, 0x80	; 128
 1a0:	85 bf       	out	0x35, r24	; 53
	SFIOR |= (1 << XMM2); // Masking PC7-PC4 for JTAG interface
 1a2:	80 b7       	in	r24, 0x30	; 48
 1a4:	80 62       	ori	r24, 0x20	; 32
 1a6:	80 bf       	out	0x30, r24	; 48
 1a8:	08 95       	ret

000001aa <USART_Transmit>:
 1aa:	5d 9b       	sbis	0x0b, 5	; 11
 1ac:	fe cf       	rjmp	.-4      	; 0x1aa <USART_Transmit>
 1ae:	8c b9       	out	0x0c, r24	; 12
 1b0:	08 95       	ret

000001b2 <USART_Receive>:
 1b2:	5f 9b       	sbis	0x0b, 7	; 11
 1b4:	fe cf       	rjmp	.-4      	; 0x1b2 <USART_Receive>
 1b6:	8c b1       	in	r24, 0x0c	; 12
 1b8:	08 95       	ret

000001ba <USART_drv_init>:
 1ba:	90 bd       	out	0x20, r25	; 32
 1bc:	89 b9       	out	0x09, r24	; 9
 1be:	88 e1       	ldi	r24, 0x18	; 24
 1c0:	8a b9       	out	0x0a, r24	; 10
 1c2:	8e e8       	ldi	r24, 0x8E	; 142
 1c4:	80 bd       	out	0x20, r24	; 32
 1c6:	69 ed       	ldi	r22, 0xD9	; 217
 1c8:	70 e0       	ldi	r23, 0x00	; 0
 1ca:	85 ed       	ldi	r24, 0xD5	; 213
 1cc:	90 e0       	ldi	r25, 0x00	; 0
 1ce:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <fdevopen>
 1d2:	08 95       	ret

000001d4 <fdevopen>:
 1d4:	0f 93       	push	r16
 1d6:	1f 93       	push	r17
 1d8:	cf 93       	push	r28
 1da:	df 93       	push	r29
 1dc:	00 97       	sbiw	r24, 0x00	; 0
 1de:	31 f4       	brne	.+12     	; 0x1ec <fdevopen+0x18>
 1e0:	61 15       	cp	r22, r1
 1e2:	71 05       	cpc	r23, r1
 1e4:	19 f4       	brne	.+6      	; 0x1ec <fdevopen+0x18>
 1e6:	80 e0       	ldi	r24, 0x00	; 0
 1e8:	90 e0       	ldi	r25, 0x00	; 0
 1ea:	3a c0       	rjmp	.+116    	; 0x260 <__EEPROM_REGION_LENGTH__+0x60>
 1ec:	8b 01       	movw	r16, r22
 1ee:	ec 01       	movw	r28, r24
 1f0:	6e e0       	ldi	r22, 0x0E	; 14
 1f2:	70 e0       	ldi	r23, 0x00	; 0
 1f4:	81 e0       	ldi	r24, 0x01	; 1
 1f6:	90 e0       	ldi	r25, 0x00	; 0
 1f8:	0e 94 65 01 	call	0x2ca	; 0x2ca <calloc>
 1fc:	fc 01       	movw	r30, r24
 1fe:	89 2b       	or	r24, r25
 200:	91 f3       	breq	.-28     	; 0x1e6 <fdevopen+0x12>
 202:	80 e8       	ldi	r24, 0x80	; 128
 204:	83 83       	std	Z+3, r24	; 0x03
 206:	01 15       	cp	r16, r1
 208:	11 05       	cpc	r17, r1
 20a:	71 f0       	breq	.+28     	; 0x228 <__EEPROM_REGION_LENGTH__+0x28>
 20c:	13 87       	std	Z+11, r17	; 0x0b
 20e:	02 87       	std	Z+10, r16	; 0x0a
 210:	81 e8       	ldi	r24, 0x81	; 129
 212:	83 83       	std	Z+3, r24	; 0x03
 214:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
 218:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
 21c:	89 2b       	or	r24, r25
 21e:	21 f4       	brne	.+8      	; 0x228 <__EEPROM_REGION_LENGTH__+0x28>
 220:	f0 93 1f 01 	sts	0x011F, r31	; 0x80011f <__data_end+0x1>
 224:	e0 93 1e 01 	sts	0x011E, r30	; 0x80011e <__data_end>
 228:	20 97       	sbiw	r28, 0x00	; 0
 22a:	c9 f0       	breq	.+50     	; 0x25e <__EEPROM_REGION_LENGTH__+0x5e>
 22c:	d1 87       	std	Z+9, r29	; 0x09
 22e:	c0 87       	std	Z+8, r28	; 0x08
 230:	83 81       	ldd	r24, Z+3	; 0x03
 232:	82 60       	ori	r24, 0x02	; 2
 234:	83 83       	std	Z+3, r24	; 0x03
 236:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__data_end+0x2>
 23a:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <__data_end+0x3>
 23e:	89 2b       	or	r24, r25
 240:	71 f4       	brne	.+28     	; 0x25e <__EEPROM_REGION_LENGTH__+0x5e>
 242:	f0 93 21 01 	sts	0x0121, r31	; 0x800121 <__data_end+0x3>
 246:	e0 93 20 01 	sts	0x0120, r30	; 0x800120 <__data_end+0x2>
 24a:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <__data_end+0x4>
 24e:	90 91 23 01 	lds	r25, 0x0123	; 0x800123 <__data_end+0x5>
 252:	89 2b       	or	r24, r25
 254:	21 f4       	brne	.+8      	; 0x25e <__EEPROM_REGION_LENGTH__+0x5e>
 256:	f0 93 23 01 	sts	0x0123, r31	; 0x800123 <__data_end+0x5>
 25a:	e0 93 22 01 	sts	0x0122, r30	; 0x800122 <__data_end+0x4>
 25e:	cf 01       	movw	r24, r30
 260:	df 91       	pop	r29
 262:	cf 91       	pop	r28
 264:	1f 91       	pop	r17
 266:	0f 91       	pop	r16
 268:	08 95       	ret

0000026a <puts>:
 26a:	0f 93       	push	r16
 26c:	1f 93       	push	r17
 26e:	cf 93       	push	r28
 270:	df 93       	push	r29
 272:	e0 91 20 01 	lds	r30, 0x0120	; 0x800120 <__data_end+0x2>
 276:	f0 91 21 01 	lds	r31, 0x0121	; 0x800121 <__data_end+0x3>
 27a:	23 81       	ldd	r18, Z+3	; 0x03
 27c:	21 ff       	sbrs	r18, 1
 27e:	1b c0       	rjmp	.+54     	; 0x2b6 <puts+0x4c>
 280:	8c 01       	movw	r16, r24
 282:	d0 e0       	ldi	r29, 0x00	; 0
 284:	c0 e0       	ldi	r28, 0x00	; 0
 286:	f8 01       	movw	r30, r16
 288:	81 91       	ld	r24, Z+
 28a:	8f 01       	movw	r16, r30
 28c:	60 91 20 01 	lds	r22, 0x0120	; 0x800120 <__data_end+0x2>
 290:	70 91 21 01 	lds	r23, 0x0121	; 0x800121 <__data_end+0x3>
 294:	db 01       	movw	r26, r22
 296:	18 96       	adiw	r26, 0x08	; 8
 298:	ed 91       	ld	r30, X+
 29a:	fc 91       	ld	r31, X
 29c:	19 97       	sbiw	r26, 0x09	; 9
 29e:	88 23       	and	r24, r24
 2a0:	31 f0       	breq	.+12     	; 0x2ae <puts+0x44>
 2a2:	09 95       	icall
 2a4:	89 2b       	or	r24, r25
 2a6:	79 f3       	breq	.-34     	; 0x286 <puts+0x1c>
 2a8:	df ef       	ldi	r29, 0xFF	; 255
 2aa:	cf ef       	ldi	r28, 0xFF	; 255
 2ac:	ec cf       	rjmp	.-40     	; 0x286 <puts+0x1c>
 2ae:	8a e0       	ldi	r24, 0x0A	; 10
 2b0:	09 95       	icall
 2b2:	89 2b       	or	r24, r25
 2b4:	19 f0       	breq	.+6      	; 0x2bc <puts+0x52>
 2b6:	8f ef       	ldi	r24, 0xFF	; 255
 2b8:	9f ef       	ldi	r25, 0xFF	; 255
 2ba:	02 c0       	rjmp	.+4      	; 0x2c0 <puts+0x56>
 2bc:	8d 2f       	mov	r24, r29
 2be:	9c 2f       	mov	r25, r28
 2c0:	df 91       	pop	r29
 2c2:	cf 91       	pop	r28
 2c4:	1f 91       	pop	r17
 2c6:	0f 91       	pop	r16
 2c8:	08 95       	ret

000002ca <calloc>:
 2ca:	0f 93       	push	r16
 2cc:	1f 93       	push	r17
 2ce:	cf 93       	push	r28
 2d0:	df 93       	push	r29
 2d2:	86 9f       	mul	r24, r22
 2d4:	80 01       	movw	r16, r0
 2d6:	87 9f       	mul	r24, r23
 2d8:	10 0d       	add	r17, r0
 2da:	96 9f       	mul	r25, r22
 2dc:	10 0d       	add	r17, r0
 2de:	11 24       	eor	r1, r1
 2e0:	c8 01       	movw	r24, r16
 2e2:	0e 94 81 01 	call	0x302	; 0x302 <malloc>
 2e6:	ec 01       	movw	r28, r24
 2e8:	00 97       	sbiw	r24, 0x00	; 0
 2ea:	29 f0       	breq	.+10     	; 0x2f6 <calloc+0x2c>
 2ec:	a8 01       	movw	r20, r16
 2ee:	60 e0       	ldi	r22, 0x00	; 0
 2f0:	70 e0       	ldi	r23, 0x00	; 0
 2f2:	0e 94 a2 02 	call	0x544	; 0x544 <memset>
 2f6:	ce 01       	movw	r24, r28
 2f8:	df 91       	pop	r29
 2fa:	cf 91       	pop	r28
 2fc:	1f 91       	pop	r17
 2fe:	0f 91       	pop	r16
 300:	08 95       	ret

00000302 <malloc>:
 302:	0f 93       	push	r16
 304:	1f 93       	push	r17
 306:	cf 93       	push	r28
 308:	df 93       	push	r29
 30a:	82 30       	cpi	r24, 0x02	; 2
 30c:	91 05       	cpc	r25, r1
 30e:	10 f4       	brcc	.+4      	; 0x314 <malloc+0x12>
 310:	82 e0       	ldi	r24, 0x02	; 2
 312:	90 e0       	ldi	r25, 0x00	; 0
 314:	e0 91 26 01 	lds	r30, 0x0126	; 0x800126 <__flp>
 318:	f0 91 27 01 	lds	r31, 0x0127	; 0x800127 <__flp+0x1>
 31c:	20 e0       	ldi	r18, 0x00	; 0
 31e:	30 e0       	ldi	r19, 0x00	; 0
 320:	a0 e0       	ldi	r26, 0x00	; 0
 322:	b0 e0       	ldi	r27, 0x00	; 0
 324:	30 97       	sbiw	r30, 0x00	; 0
 326:	19 f1       	breq	.+70     	; 0x36e <malloc+0x6c>
 328:	40 81       	ld	r20, Z
 32a:	51 81       	ldd	r21, Z+1	; 0x01
 32c:	02 81       	ldd	r16, Z+2	; 0x02
 32e:	13 81       	ldd	r17, Z+3	; 0x03
 330:	48 17       	cp	r20, r24
 332:	59 07       	cpc	r21, r25
 334:	c8 f0       	brcs	.+50     	; 0x368 <malloc+0x66>
 336:	84 17       	cp	r24, r20
 338:	95 07       	cpc	r25, r21
 33a:	69 f4       	brne	.+26     	; 0x356 <malloc+0x54>
 33c:	10 97       	sbiw	r26, 0x00	; 0
 33e:	31 f0       	breq	.+12     	; 0x34c <malloc+0x4a>
 340:	12 96       	adiw	r26, 0x02	; 2
 342:	0c 93       	st	X, r16
 344:	12 97       	sbiw	r26, 0x02	; 2
 346:	13 96       	adiw	r26, 0x03	; 3
 348:	1c 93       	st	X, r17
 34a:	27 c0       	rjmp	.+78     	; 0x39a <malloc+0x98>
 34c:	00 93 26 01 	sts	0x0126, r16	; 0x800126 <__flp>
 350:	10 93 27 01 	sts	0x0127, r17	; 0x800127 <__flp+0x1>
 354:	22 c0       	rjmp	.+68     	; 0x39a <malloc+0x98>
 356:	21 15       	cp	r18, r1
 358:	31 05       	cpc	r19, r1
 35a:	19 f0       	breq	.+6      	; 0x362 <malloc+0x60>
 35c:	42 17       	cp	r20, r18
 35e:	53 07       	cpc	r21, r19
 360:	18 f4       	brcc	.+6      	; 0x368 <malloc+0x66>
 362:	9a 01       	movw	r18, r20
 364:	bd 01       	movw	r22, r26
 366:	ef 01       	movw	r28, r30
 368:	df 01       	movw	r26, r30
 36a:	f8 01       	movw	r30, r16
 36c:	db cf       	rjmp	.-74     	; 0x324 <malloc+0x22>
 36e:	21 15       	cp	r18, r1
 370:	31 05       	cpc	r19, r1
 372:	f9 f0       	breq	.+62     	; 0x3b2 <malloc+0xb0>
 374:	28 1b       	sub	r18, r24
 376:	39 0b       	sbc	r19, r25
 378:	24 30       	cpi	r18, 0x04	; 4
 37a:	31 05       	cpc	r19, r1
 37c:	80 f4       	brcc	.+32     	; 0x39e <malloc+0x9c>
 37e:	8a 81       	ldd	r24, Y+2	; 0x02
 380:	9b 81       	ldd	r25, Y+3	; 0x03
 382:	61 15       	cp	r22, r1
 384:	71 05       	cpc	r23, r1
 386:	21 f0       	breq	.+8      	; 0x390 <malloc+0x8e>
 388:	fb 01       	movw	r30, r22
 38a:	93 83       	std	Z+3, r25	; 0x03
 38c:	82 83       	std	Z+2, r24	; 0x02
 38e:	04 c0       	rjmp	.+8      	; 0x398 <malloc+0x96>
 390:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <__flp+0x1>
 394:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <__flp>
 398:	fe 01       	movw	r30, r28
 39a:	32 96       	adiw	r30, 0x02	; 2
 39c:	44 c0       	rjmp	.+136    	; 0x426 <__DATA_REGION_LENGTH__+0x26>
 39e:	fe 01       	movw	r30, r28
 3a0:	e2 0f       	add	r30, r18
 3a2:	f3 1f       	adc	r31, r19
 3a4:	81 93       	st	Z+, r24
 3a6:	91 93       	st	Z+, r25
 3a8:	22 50       	subi	r18, 0x02	; 2
 3aa:	31 09       	sbc	r19, r1
 3ac:	39 83       	std	Y+1, r19	; 0x01
 3ae:	28 83       	st	Y, r18
 3b0:	3a c0       	rjmp	.+116    	; 0x426 <__DATA_REGION_LENGTH__+0x26>
 3b2:	20 91 24 01 	lds	r18, 0x0124	; 0x800124 <__brkval>
 3b6:	30 91 25 01 	lds	r19, 0x0125	; 0x800125 <__brkval+0x1>
 3ba:	23 2b       	or	r18, r19
 3bc:	41 f4       	brne	.+16     	; 0x3ce <malloc+0xcc>
 3be:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 3c2:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 3c6:	30 93 25 01 	sts	0x0125, r19	; 0x800125 <__brkval+0x1>
 3ca:	20 93 24 01 	sts	0x0124, r18	; 0x800124 <__brkval>
 3ce:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 3d2:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 3d6:	21 15       	cp	r18, r1
 3d8:	31 05       	cpc	r19, r1
 3da:	41 f4       	brne	.+16     	; 0x3ec <malloc+0xea>
 3dc:	2d b7       	in	r18, 0x3d	; 61
 3de:	3e b7       	in	r19, 0x3e	; 62
 3e0:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 3e4:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 3e8:	24 1b       	sub	r18, r20
 3ea:	35 0b       	sbc	r19, r21
 3ec:	e0 91 24 01 	lds	r30, 0x0124	; 0x800124 <__brkval>
 3f0:	f0 91 25 01 	lds	r31, 0x0125	; 0x800125 <__brkval+0x1>
 3f4:	e2 17       	cp	r30, r18
 3f6:	f3 07       	cpc	r31, r19
 3f8:	a0 f4       	brcc	.+40     	; 0x422 <__DATA_REGION_LENGTH__+0x22>
 3fa:	2e 1b       	sub	r18, r30
 3fc:	3f 0b       	sbc	r19, r31
 3fe:	28 17       	cp	r18, r24
 400:	39 07       	cpc	r19, r25
 402:	78 f0       	brcs	.+30     	; 0x422 <__DATA_REGION_LENGTH__+0x22>
 404:	ac 01       	movw	r20, r24
 406:	4e 5f       	subi	r20, 0xFE	; 254
 408:	5f 4f       	sbci	r21, 0xFF	; 255
 40a:	24 17       	cp	r18, r20
 40c:	35 07       	cpc	r19, r21
 40e:	48 f0       	brcs	.+18     	; 0x422 <__DATA_REGION_LENGTH__+0x22>
 410:	4e 0f       	add	r20, r30
 412:	5f 1f       	adc	r21, r31
 414:	50 93 25 01 	sts	0x0125, r21	; 0x800125 <__brkval+0x1>
 418:	40 93 24 01 	sts	0x0124, r20	; 0x800124 <__brkval>
 41c:	81 93       	st	Z+, r24
 41e:	91 93       	st	Z+, r25
 420:	02 c0       	rjmp	.+4      	; 0x426 <__DATA_REGION_LENGTH__+0x26>
 422:	e0 e0       	ldi	r30, 0x00	; 0
 424:	f0 e0       	ldi	r31, 0x00	; 0
 426:	cf 01       	movw	r24, r30
 428:	df 91       	pop	r29
 42a:	cf 91       	pop	r28
 42c:	1f 91       	pop	r17
 42e:	0f 91       	pop	r16
 430:	08 95       	ret

00000432 <free>:
 432:	cf 93       	push	r28
 434:	df 93       	push	r29
 436:	00 97       	sbiw	r24, 0x00	; 0
 438:	09 f4       	brne	.+2      	; 0x43c <free+0xa>
 43a:	81 c0       	rjmp	.+258    	; 0x53e <__stack+0x3f>
 43c:	fc 01       	movw	r30, r24
 43e:	32 97       	sbiw	r30, 0x02	; 2
 440:	13 82       	std	Z+3, r1	; 0x03
 442:	12 82       	std	Z+2, r1	; 0x02
 444:	a0 91 26 01 	lds	r26, 0x0126	; 0x800126 <__flp>
 448:	b0 91 27 01 	lds	r27, 0x0127	; 0x800127 <__flp+0x1>
 44c:	10 97       	sbiw	r26, 0x00	; 0
 44e:	81 f4       	brne	.+32     	; 0x470 <free+0x3e>
 450:	20 81       	ld	r18, Z
 452:	31 81       	ldd	r19, Z+1	; 0x01
 454:	82 0f       	add	r24, r18
 456:	93 1f       	adc	r25, r19
 458:	20 91 24 01 	lds	r18, 0x0124	; 0x800124 <__brkval>
 45c:	30 91 25 01 	lds	r19, 0x0125	; 0x800125 <__brkval+0x1>
 460:	28 17       	cp	r18, r24
 462:	39 07       	cpc	r19, r25
 464:	51 f5       	brne	.+84     	; 0x4ba <free+0x88>
 466:	f0 93 25 01 	sts	0x0125, r31	; 0x800125 <__brkval+0x1>
 46a:	e0 93 24 01 	sts	0x0124, r30	; 0x800124 <__brkval>
 46e:	67 c0       	rjmp	.+206    	; 0x53e <__stack+0x3f>
 470:	ed 01       	movw	r28, r26
 472:	20 e0       	ldi	r18, 0x00	; 0
 474:	30 e0       	ldi	r19, 0x00	; 0
 476:	ce 17       	cp	r28, r30
 478:	df 07       	cpc	r29, r31
 47a:	40 f4       	brcc	.+16     	; 0x48c <free+0x5a>
 47c:	4a 81       	ldd	r20, Y+2	; 0x02
 47e:	5b 81       	ldd	r21, Y+3	; 0x03
 480:	9e 01       	movw	r18, r28
 482:	41 15       	cp	r20, r1
 484:	51 05       	cpc	r21, r1
 486:	f1 f0       	breq	.+60     	; 0x4c4 <free+0x92>
 488:	ea 01       	movw	r28, r20
 48a:	f5 cf       	rjmp	.-22     	; 0x476 <free+0x44>
 48c:	d3 83       	std	Z+3, r29	; 0x03
 48e:	c2 83       	std	Z+2, r28	; 0x02
 490:	40 81       	ld	r20, Z
 492:	51 81       	ldd	r21, Z+1	; 0x01
 494:	84 0f       	add	r24, r20
 496:	95 1f       	adc	r25, r21
 498:	c8 17       	cp	r28, r24
 49a:	d9 07       	cpc	r29, r25
 49c:	59 f4       	brne	.+22     	; 0x4b4 <free+0x82>
 49e:	88 81       	ld	r24, Y
 4a0:	99 81       	ldd	r25, Y+1	; 0x01
 4a2:	84 0f       	add	r24, r20
 4a4:	95 1f       	adc	r25, r21
 4a6:	02 96       	adiw	r24, 0x02	; 2
 4a8:	91 83       	std	Z+1, r25	; 0x01
 4aa:	80 83       	st	Z, r24
 4ac:	8a 81       	ldd	r24, Y+2	; 0x02
 4ae:	9b 81       	ldd	r25, Y+3	; 0x03
 4b0:	93 83       	std	Z+3, r25	; 0x03
 4b2:	82 83       	std	Z+2, r24	; 0x02
 4b4:	21 15       	cp	r18, r1
 4b6:	31 05       	cpc	r19, r1
 4b8:	29 f4       	brne	.+10     	; 0x4c4 <free+0x92>
 4ba:	f0 93 27 01 	sts	0x0127, r31	; 0x800127 <__flp+0x1>
 4be:	e0 93 26 01 	sts	0x0126, r30	; 0x800126 <__flp>
 4c2:	3d c0       	rjmp	.+122    	; 0x53e <__stack+0x3f>
 4c4:	e9 01       	movw	r28, r18
 4c6:	fb 83       	std	Y+3, r31	; 0x03
 4c8:	ea 83       	std	Y+2, r30	; 0x02
 4ca:	49 91       	ld	r20, Y+
 4cc:	59 91       	ld	r21, Y+
 4ce:	c4 0f       	add	r28, r20
 4d0:	d5 1f       	adc	r29, r21
 4d2:	ec 17       	cp	r30, r28
 4d4:	fd 07       	cpc	r31, r29
 4d6:	61 f4       	brne	.+24     	; 0x4f0 <free+0xbe>
 4d8:	80 81       	ld	r24, Z
 4da:	91 81       	ldd	r25, Z+1	; 0x01
 4dc:	84 0f       	add	r24, r20
 4de:	95 1f       	adc	r25, r21
 4e0:	02 96       	adiw	r24, 0x02	; 2
 4e2:	e9 01       	movw	r28, r18
 4e4:	99 83       	std	Y+1, r25	; 0x01
 4e6:	88 83       	st	Y, r24
 4e8:	82 81       	ldd	r24, Z+2	; 0x02
 4ea:	93 81       	ldd	r25, Z+3	; 0x03
 4ec:	9b 83       	std	Y+3, r25	; 0x03
 4ee:	8a 83       	std	Y+2, r24	; 0x02
 4f0:	e0 e0       	ldi	r30, 0x00	; 0
 4f2:	f0 e0       	ldi	r31, 0x00	; 0
 4f4:	12 96       	adiw	r26, 0x02	; 2
 4f6:	8d 91       	ld	r24, X+
 4f8:	9c 91       	ld	r25, X
 4fa:	13 97       	sbiw	r26, 0x03	; 3
 4fc:	00 97       	sbiw	r24, 0x00	; 0
 4fe:	19 f0       	breq	.+6      	; 0x506 <__stack+0x7>
 500:	fd 01       	movw	r30, r26
 502:	dc 01       	movw	r26, r24
 504:	f7 cf       	rjmp	.-18     	; 0x4f4 <free+0xc2>
 506:	8d 91       	ld	r24, X+
 508:	9c 91       	ld	r25, X
 50a:	11 97       	sbiw	r26, 0x01	; 1
 50c:	9d 01       	movw	r18, r26
 50e:	2e 5f       	subi	r18, 0xFE	; 254
 510:	3f 4f       	sbci	r19, 0xFF	; 255
 512:	82 0f       	add	r24, r18
 514:	93 1f       	adc	r25, r19
 516:	20 91 24 01 	lds	r18, 0x0124	; 0x800124 <__brkval>
 51a:	30 91 25 01 	lds	r19, 0x0125	; 0x800125 <__brkval+0x1>
 51e:	28 17       	cp	r18, r24
 520:	39 07       	cpc	r19, r25
 522:	69 f4       	brne	.+26     	; 0x53e <__stack+0x3f>
 524:	30 97       	sbiw	r30, 0x00	; 0
 526:	29 f4       	brne	.+10     	; 0x532 <__stack+0x33>
 528:	10 92 27 01 	sts	0x0127, r1	; 0x800127 <__flp+0x1>
 52c:	10 92 26 01 	sts	0x0126, r1	; 0x800126 <__flp>
 530:	02 c0       	rjmp	.+4      	; 0x536 <__stack+0x37>
 532:	13 82       	std	Z+3, r1	; 0x03
 534:	12 82       	std	Z+2, r1	; 0x02
 536:	b0 93 25 01 	sts	0x0125, r27	; 0x800125 <__brkval+0x1>
 53a:	a0 93 24 01 	sts	0x0124, r26	; 0x800124 <__brkval>
 53e:	df 91       	pop	r29
 540:	cf 91       	pop	r28
 542:	08 95       	ret

00000544 <memset>:
 544:	dc 01       	movw	r26, r24
 546:	01 c0       	rjmp	.+2      	; 0x54a <memset+0x6>
 548:	6d 93       	st	X+, r22
 54a:	41 50       	subi	r20, 0x01	; 1
 54c:	50 40       	sbci	r21, 0x00	; 0
 54e:	e0 f7       	brcc	.-8      	; 0x548 <memset+0x4>
 550:	08 95       	ret

00000552 <_exit>:
 552:	f8 94       	cli

00000554 <__stop_program>:
 554:	ff cf       	rjmp	.-2      	; 0x554 <__stop_program>
